#pragma once

// Name: ArkUWP, Version: 1.0.0


/*!!DEFINE!!*/

/*!!HELPER_DEF!!*/

/*!!HELPER_INC!!*/

#ifdef _MSC_VER
	#pragma pack(push, 0x01)
#endif

namespace CG
{
//---------------------------------------------------------------------------
// Parameters
//---------------------------------------------------------------------------

// Function ShooterGame.PrimalDinoAIController.WantsAttackPriority
struct APrimalDinoAIController_WantsAttackPriority_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.UpdateAggro
struct APrimalDinoAIController_UpdateAggro_Params
{
};

// Function ShooterGame.PrimalDinoAIController.StopBrainComponent
struct APrimalDinoAIController_StopBrainComponent_Params
{
	struct FString                                     Reason;                                                    // (Parm, ZeroConstructor)
};

// Function ShooterGame.PrimalDinoAIController.StaticGetRandomWanderDestination
struct APrimalDinoAIController_StaticGetRandomWanderDestination_Params
{
	class APrimalDinoCharacter*                        TargetCharacter;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalDinoAIController*                     TargetAIController;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     locOverride;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              randomOffsetMultiplier;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bUseRandomNegativeXDir;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bOrientRandOffsetByRotation;                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    orientRandOffsetByRotation;                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              GroundCheckSpreadOverride;                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.ShouldForceRunWhenAttacking
struct APrimalDinoAIController_ShouldForceRunWhenAttacking_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.SetTarget
struct APrimalDinoAIController_SetTarget_Params
{
	class AActor*                                      InTarget;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDontAddAggro;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bOverlapFoundTarget;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.SetHasAttackPriority
struct APrimalDinoAIController_SetHasAttackPriority_Params
{
	bool                                               Value;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.SetAttackRotationRate
struct APrimalDinoAIController_SetAttackRotationRate_Params
{
};

// Function ShooterGame.PrimalDinoAIController.SetAttackGroundSpeed
struct APrimalDinoAIController_SetAttackGroundSpeed_Params
{
};

// Function ShooterGame.PrimalDinoAIController.ResumeBrainComponent
struct APrimalDinoAIController_ResumeBrainComponent_Params
{
	struct FString                                     Reason;                                                    // (Parm, ZeroConstructor)
};

// Function ShooterGame.PrimalDinoAIController.RestartBrainComponent
struct APrimalDinoAIController_RestartBrainComponent_Params
{
};

// Function ShooterGame.PrimalDinoAIController.ResetRotationUseAcceleration
struct APrimalDinoAIController_ResetRotationUseAcceleration_Params
{
};

// Function ShooterGame.PrimalDinoAIController.ResetRotationRate
struct APrimalDinoAIController_ResetRotationRate_Params
{
};

// Function ShooterGame.PrimalDinoAIController.ResetGroundSpeed
struct APrimalDinoAIController_ResetGroundSpeed_Params
{
};

// Function ShooterGame.PrimalDinoAIController.ResetAccelerationFollowsRotation
struct APrimalDinoAIController_ResetAccelerationFollowsRotation_Params
{
};

// Function ShooterGame.PrimalDinoAIController.RecoverMovement
struct APrimalDinoAIController_RecoverMovement_Params
{
};

// Function ShooterGame.PrimalDinoAIController.RebootBrainComponent
struct APrimalDinoAIController_RebootBrainComponent_Params
{
};

// Function ShooterGame.PrimalDinoAIController.PlayStartledAnim
struct APrimalDinoAIController_PlayStartledAnim_Params
{
};

// Function ShooterGame.PrimalDinoAIController.PauseBrainComponent
struct APrimalDinoAIController_PauseBrainComponent_Params
{
	struct FString                                     Reason;                                                    // (Parm, ZeroConstructor)
};

// Function ShooterGame.PrimalDinoAIController.OrderedToLand
struct APrimalDinoAIController_OrderedToLand_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.OnLosingTargetEvent
struct APrimalDinoAIController_OnLosingTargetEvent_Params
{
};

// Function ShooterGame.PrimalDinoAIController.IsWithinAttackRangeAndCalculateBestAttack
struct APrimalDinoAIController_IsWithinAttackRangeAndCalculateBestAttack_Params
{
	class AActor*                                      Other;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bAttackChanged;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.IsWithinAttackRange
struct APrimalDinoAIController_IsWithinAttackRange_Params
{
	class AActor*                                      Other;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceUseLastAttackIndex;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.IsLogicPaused
struct APrimalDinoAIController_IsLogicPaused_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.IsForceTargetDinoRider
struct APrimalDinoAIController_IsForceTargetDinoRider_Params
{
	class AShooterCharacter*                           playerTarget;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.GetWanderAroundActorDestination
struct APrimalDinoAIController_GetWanderAroundActorDestination_Params
{
	class APrimalDinoCharacter*                        DinoCharacter;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     originalDestination;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.GetTarget
struct APrimalDinoAIController_GetTarget_Params
{
	class AActor*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.GetRandomWanderDestination
struct APrimalDinoAIController_GetRandomWanderDestination_Params
{
	struct FVector                                     locOverride;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              randomOffsetMultiplier;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bUseRandomNegativeXDir;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bOrientRandOffsetByRotation;                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    orientRandOffsetByRotation;                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.GetMinAttackRange
struct APrimalDinoAIController_GetMinAttackRange_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.GetLandingLocation
struct APrimalDinoAIController_GetLandingLocation_Params
{
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.GetHasAttackPriority
struct APrimalDinoAIController_GetHasAttackPriority_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.GetCurrentAttackIndex
struct APrimalDinoAIController_GetCurrentAttackIndex_Params
{
	unsigned char                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.GetControllerPawn
struct APrimalDinoAIController_GetControllerPawn_Params
{
	class APawn*                                       ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.GetControlledDino
struct APrimalDinoAIController_GetControlledDino_Params
{
	class APrimalDinoCharacter*                        ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.GetClosestTree
struct APrimalDinoAIController_GetClosestTree_Params
{
	struct FOverlapResult                              OutHit;                                                    // (Parm, OutParm)
	class UStaticMeshComponent*                        ReturnValue;                                               // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.GetAttackRotationRate
struct APrimalDinoAIController_GetAttackRotationRate_Params
{
	struct FRotator                                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.GetAttackRotationRangeDegrees
struct APrimalDinoAIController_GetAttackRotationRangeDegrees_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.GetAttackRotationGroundSpeedMultiplier
struct APrimalDinoAIController_GetAttackRotationGroundSpeedMultiplier_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.GetAttackRange
struct APrimalDinoAIController_GetAttackRange_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.GetAttackInterval
struct APrimalDinoAIController_GetAttackInterval_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.GetAggroNotifyNeighborsRange
struct APrimalDinoAIController_GetAggroNotifyNeighborsRange_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.GetAggroEntry
struct APrimalDinoAIController_GetAggroEntry_Params
{
	int                                                index;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      OutAttacker;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OutAggroFactor;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                             OutLastAggroHitTime;                                       // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.GetAggroEntriesCount
struct APrimalDinoAIController_GetAggroEntriesCount_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.GetAggroEntriesAttackerAtIndex
struct APrimalDinoAIController_GetAggroEntriesAttackerAtIndex_Params
{
	int                                                index;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.GetAggroDesirability
struct APrimalDinoAIController_GetAggroDesirability_Params
{
	class AActor*                                      InTarget;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.FindTarget
struct APrimalDinoAIController_FindTarget_Params
{
	bool                                               bDontSet;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.FindNewTarget
struct APrimalDinoAIController_FindNewTarget_Params
{
	bool                                               bDontSet;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.ClearAggroEntries
struct APrimalDinoAIController_ClearAggroEntries_Params
{
};

// Function ShooterGame.PrimalDinoAIController.ChangedAITarget
struct APrimalDinoAIController_ChangedAITarget_Params
{
};

// Function ShooterGame.PrimalDinoAIController.CanLand
struct APrimalDinoAIController_CanLand_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.CalculateAndSetWonderingAIStateEvent
struct APrimalDinoAIController_CalculateAndSetWonderingAIStateEvent_Params
{
	bool                                               StateChanged;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.CalculateAndSetWonderingAIState
struct APrimalDinoAIController_CalculateAndSetWonderingAIState_Params
{
	bool                                               StateChanged;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.BPUpdateBestTarget
struct APrimalDinoAIController_BPUpdateBestTarget_Params
{
	class AActor*                                      bestTarget;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               dontSetIn;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               dontSetOut;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.BPShouldNotifyNeighbor
struct APrimalDinoAIController_BPShouldNotifyNeighbor_Params
{
	class APrimalDinoCharacter*                        neighbor;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.BPShouldNotifyAnyNeighbor
struct APrimalDinoAIController_BPShouldNotifyAnyNeighbor_Params
{
	class APrimalDinoCharacter*                        neighbor;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.BPSetupFindTarget
struct APrimalDinoAIController_BPSetupFindTarget_Params
{
};

// Function ShooterGame.PrimalDinoAIController.BPOverrideIgnoredByWildDino
struct APrimalDinoAIController_BPOverrideIgnoredByWildDino_Params
{
	class AActor*                                      wildDinoToIgnore;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.BPOnFleeEvent
struct APrimalDinoAIController_BPOnFleeEvent_Params
{
};

// Function ShooterGame.PrimalDinoAIController.BPNotifyTargetSet
struct APrimalDinoAIController_BPNotifyTargetSet_Params
{
};

// Function ShooterGame.PrimalDinoAIController.BPGetTargetingDesire
struct APrimalDinoAIController_BPGetTargetingDesire_Params
{
	class AActor*                                      forTarget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ForTargetingDesireValue;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.BPForceTargetDinoRider
struct APrimalDinoAIController_BPForceTargetDinoRider_Params
{
	class AShooterCharacter*                           playerTarget;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.BP_TamedOverrideHorizontalLandingRange
struct APrimalDinoAIController_BP_TamedOverrideHorizontalLandingRange_Params
{
	struct FVector2D                                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.AvoidOutOfWater
struct APrimalDinoAIController_AvoidOutOfWater_Params
{
};

// Function ShooterGame.PrimalDinoAIController.AvoidGenericToPoint
struct APrimalDinoAIController_AvoidGenericToPoint_Params
{
	struct FVector                                     TargetDestination;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoAIController.AddToAggro
struct APrimalDinoAIController_AddToAggro_Params
{
	class AActor*                                      Attacker;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DamagePercent;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bNotifyNeighbors;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               SetValue;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsFromDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               skipTeamCheck;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.AIAttackCoordinator.UpdateAttackGroup
struct AAIAttackCoordinator_UpdateAttackGroup_Params
{
	TArray<class APrimalDinoAIController*>             AttackGroup;                                               // (Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function ShooterGame.AIAttackCoordinator.RemoveAttacker
struct AAIAttackCoordinator_RemoveAttacker_Params
{
	class APrimalDinoAIController*                     Controller;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.AIAttackCoordinator.GetNumAttackersWithPriorityForTarget
struct AAIAttackCoordinator_GetNumAttackersWithPriorityForTarget_Params
{
	class AActor*                                      Target;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.AIAttackCoordinator.GetNumAttackersForTarget
struct AAIAttackCoordinator_GetNumAttackersForTarget_Params
{
	class AActor*                                      Target;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.AIAttackCoordinator.ClearAllAttackers
struct AAIAttackCoordinator_ClearAllAttackers_Params
{
};

// Function ShooterGame.AIAttackCoordinator.CalculateAttackerPriorityWeight
struct AAIAttackCoordinator_CalculateAttackerPriorityWeight_Params
{
	class APrimalDinoAIController*                     Attacker;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.AIAttackCoordinator.AddAttackerCharacter
struct AAIAttackCoordinator_AddAttackerCharacter_Params
{
	class APrimalDinoCharacter*                        Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.AIAttackCoordinator.AddAttacker
struct AAIAttackCoordinator_AddAttacker_Params
{
	class APrimalDinoAIController*                     Controller;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalGlobals.OnConfirmationDialogClosed
struct UPrimalGlobals_OnConfirmationDialogClosed_Params
{
	bool                                               bAccept;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalGlobals.GetDayCycleManager
struct UPrimalGlobals_GetDayCycleManager_Params
{
	class UWorld*                                      World;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ADayCycleManager*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalGlobals.FinishedLoadingGameMedia
struct UPrimalGlobals_FinishedLoadingGameMedia_Params
{
};

// Function ShooterGame.PrimalGameData.TickedWorld
struct UPrimalGameData_TickedWorld_Params
{
	class UWorld*                                      TheWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalGameData.LocalIsPerMapExplorerNoteUnlocked
struct UPrimalGameData_LocalIsPerMapExplorerNoteUnlocked_Params
{
	int                                                ExplorerNoteIndex;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalGameData.LocalIsGlobalExplorerNoteUnlocked
struct UPrimalGameData_LocalIsGlobalExplorerNoteUnlocked_Params
{
	int                                                ExplorerNoteIndex;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalGameData.LoadedWorld
struct UPrimalGameData_LoadedWorld_Params
{
	class UWorld*                                      TheWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalGameData.GetXPMax
struct UPrimalGameData_GetXPMax_Params
{
	TEnumAsByte<ShooterGame_ELevelExperienceRampType>  levelType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalGameData.GetRedirectedClassFromRedirector
struct UPrimalGameData_GetRedirectedClassFromRedirector_Params
{
	struct FInvalidReferenceRedirector                 Redirector;                                                // (ConstParm, Parm, OutParm, ReferenceParm)
	class UClass*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalGameData.GetRedirectedClass
struct UPrimalGameData_GetRedirectedClass_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalGameData.GetLevelXP
struct UPrimalGameData_GetLevelXP_Params
{
	TEnumAsByte<ShooterGame_ELevelExperienceRampType>  levelType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                forLevel;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalGameData.GetLevelMax
struct UPrimalGameData_GetLevelMax_Params
{
	TEnumAsByte<ShooterGame_ELevelExperienceRampType>  levelType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalGameData.GetLevelExperienceRamp
struct UPrimalGameData_GetLevelExperienceRamp_Params
{
	TEnumAsByte<ShooterGame_ELevelExperienceRampType>  levelType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLevelExperienceRamp                        ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.PrimalGameData.GetGenericCombatMusic
struct UPrimalGameData_GetGenericCombatMusic_Params
{
	class APrimalCharacter*                            forCharacter;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalCharacter*                            forEnemy;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USoundBase*                                  ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalGameData.GetExplorerNoteDescription
struct UPrimalGameData_GetExplorerNoteDescription_Params
{
	int                                                ExplorerNoteIndex;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalGameData.GetDinoEntry
struct UPrimalGameData_GetDinoEntry_Params
{
	class UClass*                                      DinoClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalGameData.GetColorForDefinition
struct UPrimalGameData_GetColorForDefinition_Params
{
	int                                                DefinitionIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalGameData.BPMergeModGameData
struct UPrimalGameData_BPMergeModGameData_Params
{
	class UPrimalGameData*                             AnotherGameData;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalGameData.BPInitializeGameData
struct UPrimalGameData_BPInitializeGameData_Params
{
};

// Function ShooterGame.PrimalGameData.BPGetItemQualityIndex
struct UPrimalGameData_BPGetItemQualityIndex_Params
{
	float                                              ItemRating;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalGameData.BPGetGameData
struct UPrimalGameData_BPGetGameData_Params
{
	class UPrimalGameData*                             ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.UseItemOntoItem
struct UPrimalItem_UseItemOntoItem_Params
{
	class UPrimalItem*                                 DestinationItem;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                AdditionalData;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.Use
struct UPrimalItem_Use_Params
{
	bool                                               bOverridePlayerInput;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.UpdatedItem
struct UPrimalItem_UpdatedItem_Params
{
	bool                                               ResetUploadTime;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.UnequipWeapon
struct UPrimalItem_UnequipWeapon_Params
{
	bool                                               bDelayedUnequip;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.StaticGetItemNameAndIcon
struct UPrimalItem_StaticGetItemNameAndIcon_Params
{
	class UClass*                                      ItemType;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     OutItemName;                                               // (Parm, OutParm, ZeroConstructor)
	class UTexture2D*                                  OutItemIcon;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bShortName;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.StaticGetDinoColorSetIndexForItemColorID
struct UPrimalItem_StaticGetDinoColorSetIndexForItemColorID_Params
{
	int                                                ID;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.StaticGetColorForItemColorID
struct UPrimalItem_StaticGetColorForItemColorID_Params
{
	int                                                ID;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.SlottedTick
struct UPrimalItem_SlottedTick_Params
{
	float                                              DeltaSeconds;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.SkinEquippedBlueprintTick
struct UPrimalItem_SkinEquippedBlueprintTick_Params
{
	class UPrimalItem*                                 OwnerItem;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DeltaSeconds;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.SetUnreplicatedEggData
struct UPrimalItem_SetUnreplicatedEggData_Params
{
	struct FUnreplicatedEggData                        EggData;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.PrimalItem.SetQuantity
struct UPrimalItem_SetQuantity_Params
{
	int                                                NewQuantity;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ShowHUDNotification;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.SetItemStatValues
struct UPrimalItem_SetItemStatValues_Params
{
	int                                                idx;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                val;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.SetItemStatInfo
struct UPrimalItem_SetItemStatInfo_Params
{
	int                                                idx;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FItemStatInfo                               val;                                                       // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.PrimalItem.SetItemColors
struct UPrimalItem_SetItemColors_Params
{
	TArray<int>                                        ColorIDs;                                                  // (Parm, ZeroConstructor)
};

// Function ShooterGame.PrimalItem.SetCustomItemData
struct UPrimalItem_SetCustomItemData_Params
{
	struct FCustomItemData                             InData;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.PrimalItem.ServerUpdatedWeaponClipAmmo
struct UPrimalItem_ServerUpdatedWeaponClipAmmo_Params
{
};

// Function ShooterGame.PrimalItem.ServerSendItemExecCommandToPlayer
struct UPrimalItem_ServerSendItemExecCommandToPlayer_Params
{
	class AShooterPlayerController*                    ToPC;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       CommandName;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBPNetExecParams                            ExecParams;                                                // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               bIsReliable;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceSendToLocalPlayer;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIgnoreRelevancy;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.ServerSendItemExecCommandToEveryone
struct UPrimalItem_ServerSendItemExecCommandToEveryone_Params
{
	struct FName                                       CommandName;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBPNetExecParams                            ExecParams;                                                // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               bIsReliable;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceSendToLocalPlayer;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIgnoreRelevancy;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.ServerRemoveWeaponAccessoryOnly
struct UPrimalItem_ServerRemoveWeaponAccessoryOnly_Params
{
};

// Function ShooterGame.PrimalItem.ServerRemoveItemSkinOnly
struct UPrimalItem_ServerRemoveItemSkinOnly_Params
{
};

// Function ShooterGame.PrimalItem.ServerRemoveItemSkin
struct UPrimalItem_ServerRemoveItemSkin_Params
{
};

// Function ShooterGame.PrimalItem.SelectedCustomContextMenuItem
struct UPrimalItem_SelectedCustomContextMenuItem_Params
{
	struct FName                                       ContextItem;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.RepairItem
struct UPrimalItem_RepairItem_Params
{
	bool                                               bIgnoreInventoryRequirement;                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              UseNextRepairPercentage;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              RepairSpeedMultiplier;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.RemoveWeaponAccessory
struct UPrimalItem_RemoveWeaponAccessory_Params
{
};

// Function ShooterGame.PrimalItem.RemoveFromSlot
struct UPrimalItem_RemoveFromSlot_Params
{
	bool                                               bForce;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.RemovedSkinFromItem
struct UPrimalItem_RemovedSkinFromItem_Params
{
	class UPrimalItem*                                 FromOwnerItem;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsFirstTime;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.RemoveCustomItemData
struct UPrimalItem_RemoveCustomItemData_Params
{
	struct FName                                       CustomDataName;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.RemoveClipAmmo
struct UPrimalItem_RemoveClipAmmo_Params
{
	bool                                               bDontUpdateItem;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.RefreshAttachments
struct UPrimalItem_RefreshAttachments_Params
{
	bool                                               bRefreshDefaultAttachments;                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               isShieldSpecificRefresh;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsFromUpdateItem;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.OverrideItemRating
struct UPrimalItem_OverrideItemRating_Params
{
	float                                              rating;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.OverrideCrouchingSound
struct UPrimalItem_OverrideCrouchingSound_Params
{
	class USoundBase*                                  InSound;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsProne;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                soundState;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USoundBase*                                  ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.NotifyEditText
struct UPrimalItem_NotifyEditText_Params
{
	class AShooterPlayerController*                    PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.MergeCustomItemDatas
struct UPrimalItem_MergeCustomItemDatas_Params
{
	TArray<struct FCustomItemData>                     DataSet1;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FCustomItemData>                     DataSet2;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FCustomItemData>                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalItem.MeetRepairingRequirements
struct UPrimalItem_MeetRepairingRequirements_Params
{
	class UPrimalInventoryComponent*                   compareInventoryComp;                                      // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	bool                                               bIsForCraftQueueAddition;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.MakeRepairingRequirementsString
struct UPrimalItem_MakeRepairingRequirementsString_Params
{
	class UPrimalInventoryComponent*                   compareInventoryComp;                                      // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	TArray<struct FCraftingResourceRequirement>        InRepairingRequirements;                                   // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalItem.LocalUse
struct UPrimalItem_LocalUse_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.IsValidForCrafting
struct UPrimalItem_IsValidForCrafting_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.IsUsableConsumable
struct UPrimalItem_IsUsableConsumable_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.IsOwnerInWater
struct UPrimalItem_IsOwnerInWater_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.IsOwnerInNoPainWater
struct UPrimalItem_IsOwnerInNoPainWater_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.IsCustomContextMenuItemEnabled
struct UPrimalItem_IsCustomContextMenuItemEnabled_Params
{
	struct FName                                       ContextItem;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.IsCooldownReadyForUse
struct UPrimalItem_IsCooldownReadyForUse_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.IsBroken
struct UPrimalItem_IsBroken_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.IsActiveEventItem
struct UPrimalItem_IsActiveEventItem_Params
{
	class UWorld*                                      World;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.InitNewItem
struct UPrimalItem_InitNewItem_Params
{
	float                                              ItemQuality;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalInventoryComponent*                   toInventory;                                               // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	float                                              MaxItemDifficultyClamp;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MinRandomQuality;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.InitializeItem
struct UPrimalItem_InitializeItem_Params
{
	bool                                               bForceReinit;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWorld*                                      OptionalInitWorld;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.IncrementItemQuantity
struct UPrimalItem_IncrementItemQuantity_Params
{
	int                                                amount;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bRepicateToClient;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDontUpdateWeight;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsFromUseConsumption;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsArkTributeItem;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsFromCraftingConsumption;                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.HasCustomItemData
struct UPrimalItem_HasCustomItemData_Params
{
	struct FName                                       CustomDataName;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.HasBuffToGiveOwnerWhenEquipped
struct UPrimalItem_HasBuffToGiveOwnerWhenEquipped_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.HandleShieldDamageBlocking
struct UPrimalItem_HandleShieldDamageBlocking_Params
{
	class AShooterCharacter*                           ForShooterCharacter;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DamageIn;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	class AController*                                 EventInstigator;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.GetWeaponTemplateMeleeDamageType
struct UPrimalItem_GetWeaponTemplateMeleeDamageType_Params
{
	class UClass*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.GetWeaponTemplateMeleeDamageAmount
struct UPrimalItem_GetWeaponTemplateMeleeDamageAmount_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.GetWeaponTemplateHarvestDamageType
struct UPrimalItem_GetWeaponTemplateHarvestDamageType_Params
{
	class UClass*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.GetWeaponTemplateHarvestDamageMultiplier
struct UPrimalItem_GetWeaponTemplateHarvestDamageMultiplier_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.GetWeaponTemplateDurabilityToConsumePerMeleeHit
struct UPrimalItem_GetWeaponTemplateDurabilityToConsumePerMeleeHit_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.GetWeaponClipAmmo
struct UPrimalItem_GetWeaponClipAmmo_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.GetUseItemAddCharacterStatusValue
struct UPrimalItem_GetUseItemAddCharacterStatusValue_Params
{
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> ValueType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.GetUnreplicatedEggData
struct UPrimalItem_GetUnreplicatedEggData_Params
{
	struct FUnreplicatedEggData                        EggData;                                                   // (Parm, OutParm)
};

// Function ShooterGame.PrimalItem.GetSpoilingTime
struct UPrimalItem_GetSpoilingTime_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.GetRepairingRequirementsString
struct UPrimalItem_GetRepairingRequirementsString_Params
{
	class UPrimalInventoryComponent*                   compareInventoryComp;                                      // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	bool                                               bUseBaseRequeriments;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OverrideRepairPercent;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalItem.GetRemainingCooldownTime
struct UPrimalItem_GetRemainingCooldownTime_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.GetProjectileType
struct UPrimalItem_GetProjectileType_Params
{
	class UClass*                                      ItemType;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.GetOwnerPlayer
struct UPrimalItem_GetOwnerPlayer_Params
{
	class AShooterCharacter*                           ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.GetMaxItemQuantity
struct UPrimalItem_GetMaxItemQuantity_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.GetMaximumAdditionalCrafting
struct UPrimalItem_GetMaximumAdditionalCrafting_Params
{
	class UPrimalInventoryComponent*                   forComp;                                                   // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.GetItemWeight
struct UPrimalItem_GetItemWeight_Params
{
	bool                                               bJustOneQuantity;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceNotBlueprintWeight;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.GetItemStatValues
struct UPrimalItem_GetItemStatValues_Params
{
	int                                                idx;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.GetItemStatString
struct UPrimalItem_GetItemStatString_Params
{
	TEnumAsByte<ShooterGame_EPrimalItemStat>           statType;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalItem.GetItemStatModifier
struct UPrimalItem_GetItemStatModifier_Params
{
	TEnumAsByte<ShooterGame_EPrimalItemStat>           statType;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.GetItemStatInfo
struct UPrimalItem_GetItemStatInfo_Params
{
	int                                                idx;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FItemStatInfo                               ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.PrimalItem.GetItemShortName
struct UPrimalItem_GetItemShortName_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalItem.GetItemNetInfo
struct UPrimalItem_GetItemNetInfo_Params
{
	bool                                               bIsForSendingToClient;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FItemNetInfo                                ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.PrimalItem.GetItemDyeColors
struct UPrimalItem_GetItemDyeColors_Params
{
	TArray<struct FLinearColor>                        ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalItem.GetItemCustomColor
struct UPrimalItem_GetItemCustomColor_Params
{
	int                                                ColorRegion;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                outColor;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.GetItemColorIDFromDyeItemID
struct UPrimalItem_GetItemColorIDFromDyeItemID_Params
{
	int                                                MasterItemListIndex;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.GetItemColorID
struct UPrimalItem_GetItemColorID_Params
{
	int                                                theRegion;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.GetItemBytes
struct UPrimalItem_GetItemBytes_Params
{
	TArray<unsigned char>                              Bytes;                                                     // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.PrimalItem.GetInventoryIconDisplayText
struct UPrimalItem_GetInventoryIconDisplayText_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalItem.GetInitializeItemOwnerInventory
struct UPrimalItem_GetInitializeItemOwnerInventory_Params
{
	class UPrimalInventoryComponent*                   ReturnValue;                                               // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.GetHUDIconMaterial
struct UPrimalItem_GetHUDIconMaterial_Params
{
	class UMaterialInterface*                          ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.GetEngramRequirementLevel
struct UPrimalItem_GetEngramRequirementLevel_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.GetEggHatchTimeRemaining
struct UPrimalItem_GetEggHatchTimeRemaining_Params
{
	class UWorld*                                      TheWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              additionalMultiplier;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.GetDurabilityPercentage
struct UPrimalItem_GetDurabilityPercentage_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.GetCustomItemData
struct UPrimalItem_GetCustomItemData_Params
{
	struct FName                                       CustomDataName;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FCustomItemData                             OutData;                                                   // (Parm, OutParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.GetCraftingResourceRequirement
struct UPrimalItem_GetCraftingResourceRequirement_Params
{
	int                                                CraftingResourceIndex;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.GetCraftingRequirements
struct UPrimalItem_GetCraftingRequirements_Params
{
	TArray<struct FCraftingResourceRequirement>        CombinedRequirements;                                      // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	float                                              Percent;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FCraftingResourceRequirement>        ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalItem.GetComponentToAttach
struct UPrimalItem_GetComponentToAttach_Params
{
	int                                                attachmentIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      UseOtherActor;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UActorComponent*                             ReturnValue;                                               // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.GetBuffToGiveOwnerWhenEquipped
struct UPrimalItem_GetBuffToGiveOwnerWhenEquipped_Params
{
	bool                                               bForceResolveSoftRef;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.GetAttachedComponentsNum
struct UPrimalItem_GetAttachedComponentsNum_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.GetAttachedComponent
struct UPrimalItem_GetAttachedComponent_Params
{
	int                                                attachmentIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      UseOtherActor;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UActorComponent*                             ReturnValue;                                               // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.GetActualEquipmentType
struct UPrimalItem_GetActualEquipmentType_Params
{
	bool                                               bGetBaseValue;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_EPrimalEquipmentType>           ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.FinishRepairing
struct UPrimalItem_FinishRepairing_Params
{
};

// Function ShooterGame.PrimalItem.EquippedBlueprintTick
struct UPrimalItem_EquippedBlueprintTick_Params
{
	float                                              DeltaSeconds;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.DoesItemUseColorRegion
struct UPrimalItem_DoesItemUseColorRegion_Params
{
	int                                                RegionIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.CreateItemFromNetInfo
struct UPrimalItem_CreateItemFromNetInfo_Params
{
	struct FItemNetInfo                                newItemInfo;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	class UPrimalItem*                                 ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.CreateFromBytes
struct UPrimalItem_CreateFromBytes_Params
{
	TArray<unsigned char>                              Bytes;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UPrimalItem*                                 ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.Crafted
struct UPrimalItem_Crafted_Params
{
	bool                                               bWasCraftedFromEngram;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.CraftBlueprint
struct UPrimalItem_CraftBlueprint_Params
{
	bool                                               bConsumeResources;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.ClientUpdatedWeaponClipAmmo
struct UPrimalItem_ClientUpdatedWeaponClipAmmo_Params
{
};

// Function ShooterGame.PrimalItem.ClampStats
struct UPrimalItem_ClampStats_Params
{
	class UPrimalInventoryComponent*                   inventory;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.CheckForInventoryDupes
struct UPrimalItem_CheckForInventoryDupes_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.CanUseWithItemSource
struct UPrimalItem_CanUseWithItemSource_Params
{
	class UPrimalItem*                                 DestinationItem;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.CanUseWithItemDestination
struct UPrimalItem_CanUseWithItemDestination_Params
{
	class UPrimalItem*                                 SourceItem;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.CanUse
struct UPrimalItem_CanUse_Params
{
	bool                                               bIgnoreCooldown;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.CanSpoil
struct UPrimalItem_CanSpoil_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.CanRepair
struct UPrimalItem_CanRepair_Params
{
	bool                                               bIgnoreInventoryRequirement;                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.CanFullyCraft
struct UPrimalItem_CanFullyCraft_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.CanDrop
struct UPrimalItem_CanDrop_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.CanCraft
struct UPrimalItem_CanCraft_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPUsedOntoItem
struct UPrimalItem_BPUsedOntoItem_Params
{
	class UPrimalItem*                                 DestinationItem;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                AdditionalData;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPTributeItemUploaded
struct UPrimalItem_BPTributeItemUploaded_Params
{
	class UObject*                                     ContextObject;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPTributeItemDownloaded
struct UPrimalItem_BPTributeItemDownloaded_Params
{
	class UObject*                                     ContextObject;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPSupportUseOntoItem
struct UPrimalItem_BPSupportUseOntoItem_Params
{
	class UPrimalItem*                                 DestinationItem;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPSetWeaponClipAmmo
struct UPrimalItem_BPSetWeaponClipAmmo_Params
{
	int                                                NewClipAmmo;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPSetupHUDIconMaterial
struct UPrimalItem_BPSetupHUDIconMaterial_Params
{
	class UMaterialInstanceDynamic*                    theMID;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPServerVerifyStructurePlacementData
struct UPrimalItem_BPServerVerifyStructurePlacementData_Params
{
};

// Function ShooterGame.PrimalItem.BPServerHandleItemNetExecCommand
struct UPrimalItem_BPServerHandleItemNetExecCommand_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       CommandName;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBPNetExecParams                            ExecParams;                                                // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.PrimalItem.BPProcessEditText
struct UPrimalItem_BPProcessEditText_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     TextToUse;                                                 // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPPreventWeaponEquip
struct UPrimalItem_BPPreventWeaponEquip_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPPreventUseOntoItem
struct UPrimalItem_BPPreventUseOntoItem_Params
{
	class UPrimalItem*                                 DestinationItem;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPPreventUpload
struct UPrimalItem_BPPreventUpload_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPPreventEquip
struct UPrimalItem_BPPreventEquip_Params
{
	class UPrimalInventoryComponent*                   toInventory;                                               // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPPreUseItem
struct UPrimalItem_BPPreUseItem_Params
{
};

// Function ShooterGame.PrimalItem.BPPreInitializeItem
struct UPrimalItem_BPPreInitializeItem_Params
{
	class UWorld*                                      OptionalInitWorld;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPPostInitializeItem
struct UPrimalItem_BPPostInitializeItem_Params
{
	class UWorld*                                      OptionalInitWorld;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPPostAddBuffToGiveOwnerCharacter
struct UPrimalItem_BPPostAddBuffToGiveOwnerCharacter_Params
{
	class APrimalCharacter*                            OwnerCharacter;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalBuff*                                 Buff;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPOverrideProjectileType
struct UPrimalItem_BPOverrideProjectileType_Params
{
	class UClass*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPOverrideCraftingConsumption
struct UPrimalItem_BPOverrideCraftingConsumption_Params
{
	int                                                AmountToConsume;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPOnItemConsumed
struct UPrimalItem_BPOnItemConsumed_Params
{
	class UPrimalInventoryComponent*                   inventory;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	int                                                remainingQuantity;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPNotifyDropped
struct UPrimalItem_BPNotifyDropped_Params
{
	class APrimalCharacter*                            FromCharacter;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bWasThrown;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPMatchesItemID
struct UPrimalItem_BPMatchesItemID_Params
{
	int                                                ItemID1;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ItemID2;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPMakeItemID
struct UPrimalItem_BPMakeItemID_Params
{
	int                                                TheItemID1;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                TheItemID2;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPItemBroken
struct UPrimalItem_BPItemBroken_Params
{
};

// Function ShooterGame.PrimalItem.BPItemBelowDurabilityThreshold
struct UPrimalItem_BPItemBelowDurabilityThreshold_Params
{
};

// Function ShooterGame.PrimalItem.BPIsValidForCrafting
struct UPrimalItem_BPIsValidForCrafting_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPInitItemColors
struct UPrimalItem_BPInitItemColors_Params
{
	TArray<int>                                        ColorIDs;                                                  // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.PrimalItem.BPInitIconMaterial
struct UPrimalItem_BPInitIconMaterial_Params
{
};

// Function ShooterGame.PrimalItem.BPInitFromItemNetInfo
struct UPrimalItem_BPInitFromItemNetInfo_Params
{
};

// Function ShooterGame.PrimalItem.BPGetSkinnedCustomInventoryWidgetText
struct UPrimalItem_BPGetSkinnedCustomInventoryWidgetText_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalItem.BPGetItemStatRandomValue
struct UPrimalItem_BPGetItemStatRandomValue_Params
{
	float                                              QualityLevel;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                idx;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPGetItemStatModifier
struct UPrimalItem_BPGetItemStatModifier_Params
{
	int                                                idx;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ItemStatValue;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPGetItemNetInfo
struct UPrimalItem_BPGetItemNetInfo_Params
{
};

// Function ShooterGame.PrimalItem.BPGetItemName
struct UPrimalItem_BPGetItemName_Params
{
	struct FString                                     ItemNameIn;                                                // (Parm, ZeroConstructor)
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalItem.BPGetItemID
struct UPrimalItem_BPGetItemID_Params
{
	int                                                ItemID1;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ItemID2;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPGetItemIcon
struct UPrimalItem_BPGetItemIcon_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTexture2D*                                  ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPGetItemDurabilityPercentage
struct UPrimalItem_BPGetItemDurabilityPercentage_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPGetItemDescription
struct UPrimalItem_BPGetItemDescription_Params
{
	struct FString                                     InDescription;                                             // (Parm, ZeroConstructor)
	bool                                               bGetLongDescription;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalItem.BPGetFuelParticleSystemOverride
struct UPrimalItem_BPGetFuelParticleSystemOverride_Params
{
	class APrimalStructure*                            ForStructure;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystem*                             ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPGetFuelAudioOverride
struct UPrimalItem_BPGetFuelAudioOverride_Params
{
	class APrimalStructure*                            ForStructure;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USoundBase*                                  ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPGetCustomInventoryWidgetTextColor
struct UPrimalItem_BPGetCustomInventoryWidgetTextColor_Params
{
	struct FColor                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPGetCustomInventoryWidgetText
struct UPrimalItem_BPGetCustomInventoryWidgetText_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalItem.BPGetCustomIconMaterialParent
struct UPrimalItem_BPGetCustomIconMaterialParent_Params
{
	class UMaterialInterface*                          ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPGetCustomDurabilityTextColor
struct UPrimalItem_BPGetCustomDurabilityTextColor_Params
{
	struct FColor                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPGetCustomDurabilityText
struct UPrimalItem_BPGetCustomDurabilityText_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalItem.BPGetCustomAutoDecreaseDurabilityPerInterval
struct UPrimalItem_BPGetCustomAutoDecreaseDurabilityPerInterval_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPForceAllowRemoteAddToInventory
struct UPrimalItem_BPForceAllowRemoteAddToInventory_Params
{
	class UPrimalInventoryComponent*                   toInventory;                                               // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPEquippedItemOnXPEarning
struct UPrimalItem_BPEquippedItemOnXPEarning_Params
{
	class APrimalCharacter*                            forChar;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              howMuchXP;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_EXPType>                   TheXPType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPDrawItemIcon
struct UPrimalItem_BPDrawItemIcon_Params
{
	class UCanvas*                                     ItemCanvas;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                                   ItemCanvasSize;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector2D                                   ItemCanvasScale;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               bItemEnabled;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                TheTintColor;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPCrafted
struct UPrimalItem_BPCrafted_Params
{
};

// Function ShooterGame.PrimalItem.BPConsumeProjectileImpact
struct UPrimalItem_BPConsumeProjectileImpact_Params
{
	class AShooterProjectile*                          theProjectile;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                                  HitResult;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPClientHandleItemNetExecCommand
struct UPrimalItem_BPClientHandleItemNetExecCommand_Params
{
	struct FName                                       CommandName;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBPNetExecParams                            ExecParams;                                                // (ConstParm, Parm, OutParm, ReferenceParm)
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPCanUse
struct UPrimalItem_BPCanUse_Params
{
	bool                                               bIgnoreCooldown;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPCanAddToInventory
struct UPrimalItem_BPCanAddToInventory_Params
{
	class UPrimalInventoryComponent*                   toInventory;                                               // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPBreakItemID
struct UPrimalItem_BPBreakItemID_Params
{
	struct FItemNetID                                  ItemNetID;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                TheItemID1;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                TheItemID2;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPAnimNotifyCustomState_End
struct UPrimalItem_BPAnimNotifyCustomState_End_Params
{
	struct FName                                       CustomEventName;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USkeletalMeshComponent*                      MeshComp;                                                  // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class UAnimSequenceBase*                           Animation;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimNotifyState*                            AnimNotifyObject;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPAnimNotifyCustomState_Begin
struct UPrimalItem_BPAnimNotifyCustomState_Begin_Params
{
	struct FName                                       CustomEventName;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USkeletalMeshComponent*                      MeshComp;                                                  // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class UAnimSequenceBase*                           Animation;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              TotalDuration;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimNotifyState*                            AnimNotifyObject;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPAnimNotifyCustomEvent
struct UPrimalItem_BPAnimNotifyCustomEvent_Params
{
	struct FName                                       CustomEventName;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USkeletalMeshComponent*                      MeshComp;                                                  // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class UAnimSequenceBase*                           Animation;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimNotify*                                 AnimNotifyObject;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPAllowRemoteRemoveFromInventory
struct UPrimalItem_BPAllowRemoteRemoveFromInventory_Params
{
	class UPrimalInventoryComponent*                   invComp;                                                   // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    ByPC;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bRequestedByPlayer;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPAllowRemoteAddToInventory
struct UPrimalItem_BPAllowRemoteAddToInventory_Params
{
	class UPrimalInventoryComponent*                   invComp;                                                   // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    ByPC;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bRequestedByPlayer;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BPAllowCrafting
struct UPrimalItem_BPAllowCrafting_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalItem.BPAddedAttachments
struct UPrimalItem_BPAddedAttachments_Params
{
};

// Function ShooterGame.PrimalItem.BlueprintUsed
struct UPrimalItem_BlueprintUsed_Params
{
};

// Function ShooterGame.PrimalItem.BlueprintUnequipped
struct UPrimalItem_BlueprintUnequipped_Params
{
};

// Function ShooterGame.PrimalItem.BlueprintOwnerPosssessed
struct UPrimalItem_BlueprintOwnerPosssessed_Params
{
	class AController*                                 PossessedByController;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.BlueprintEquipped
struct UPrimalItem_BlueprintEquipped_Params
{
	bool                                               bIsFromSaveGame;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.ApplyingSkinOntoItem
struct UPrimalItem_ApplyingSkinOntoItem_Params
{
	class UPrimalItem*                                 ToOwnerItem;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsFirstTime;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.ApplyColorsToMesh
struct UPrimalItem_ApplyColorsToMesh_Params
{
	class UMeshComponent*                              mComp;                                                     // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.ApplyColorsFromStructure
struct UPrimalItem_ApplyColorsFromStructure_Params
{
	class APrimalStructure*                            theStructure;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.AllowRemoteAddToInventory
struct UPrimalItem_AllowRemoteAddToInventory_Params
{
	class UPrimalInventoryComponent*                   invComp;                                                   // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    ByPC;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bRequestedByPlayer;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.AllowEquipItem
struct UPrimalItem_AllowEquipItem_Params
{
	class UPrimalInventoryComponent*                   toInventory;                                               // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.AddToSlot
struct UPrimalItem_AddToSlot_Params
{
	int                                                theSlotIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForce;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.AddNewItem
struct UPrimalItem_AddNewItem_Params
{
	class UClass*                                      ItemArchetype;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalInventoryComponent*                   GiveToInventory;                                           // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	bool                                               bEquipItem;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDontStack;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ItemQuality;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceNoBlueprint;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                quantityOverride;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceBlueprint;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MaxItemDifficultyClamp;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               CreateOnClient;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      ApplyItemSkin;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MinRandomQuality;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ClampStats;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIgnoreAbsoluteMaxInventory;                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalItem.AddItemDurability
struct UPrimalItem_AddItemDurability_Params
{
	float                                              durabilityToAdd;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.AllClustersInventory.OnSaveItemsFinished__DelegateSignature
struct UAllClustersInventory_OnSaveItemsFinished__DelegateSignature_Params
{
	bool                                               Success;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     UserId;                                                    // (Parm, ZeroConstructor)
};

// Function ShooterGame.AllClustersInventory.OnRemoveAllClusterInventoryItemsFinished__DelegateSignature
struct UAllClustersInventory_OnRemoveAllClusterInventoryItemsFinished__DelegateSignature_Params
{
	bool                                               Success;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     UserId;                                                    // (Parm, ZeroConstructor)
	TArray<struct FItemNetID>                          ItemsIds;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function ShooterGame.AllClustersInventory.OnReadLockFinished__DelegateSignature
struct UAllClustersInventory_OnReadLockFinished__DelegateSignature_Params
{
	bool                                               Success;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     UserId;                                                    // (Parm, ZeroConstructor)
	bool                                               Locked;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.AllClustersInventory.OnLoadItemsFinished__DelegateSignature
struct UAllClustersInventory_OnLoadItemsFinished__DelegateSignature_Params
{
	bool                                               Success;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     UserId;                                                    // (Parm, ZeroConstructor)
	TArray<struct FItemNetInfo>                        Items;                                                     // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.AllClustersInventory.OnFinishedSaveForChangingItems
struct UAllClustersInventory_OnFinishedSaveForChangingItems_Params
{
	bool                                               Success;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     UserId;                                                    // (Parm, ZeroConstructor)
};

// Function ShooterGame.AllClustersInventory.OnFinishedReadLockForCreateLock
struct UAllClustersInventory_OnFinishedReadLockForCreateLock_Params
{
	bool                                               Success;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     UserId;                                                    // (Parm, ZeroConstructor)
	bool                                               Locked;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.AllClustersInventory.OnFinishedLoadForChangingItems
struct UAllClustersInventory_OnFinishedLoadForChangingItems_Params
{
	bool                                               Success;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     UserId;                                                    // (Parm, ZeroConstructor)
	TArray<struct FItemNetInfo>                        ArkItems;                                                  // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.AllClustersInventory.OnFinishedCreateLockForChangingItems
struct UAllClustersInventory_OnFinishedCreateLockForChangingItems_Params
{
	bool                                               Success;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     UserId;                                                    // (Parm, ZeroConstructor)
};

// Function ShooterGame.AllClustersInventory.OnFinishedClearLockForChangingItems
struct UAllClustersInventory_OnFinishedClearLockForChangingItems_Params
{
	bool                                               Success;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     UserId;                                                    // (Parm, ZeroConstructor)
};

// Function ShooterGame.AllClustersInventory.OnCreateLockFinished__DelegateSignature
struct UAllClustersInventory_OnCreateLockFinished__DelegateSignature_Params
{
	bool                                               Success;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     UserId;                                                    // (Parm, ZeroConstructor)
};

// Function ShooterGame.AllClustersInventory.OnClearLockFinished__DelegateSignature
struct UAllClustersInventory_OnClearLockFinished__DelegateSignature_Params
{
	bool                                               Success;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     UserId;                                                    // (Parm, ZeroConstructor)
};

// Function ShooterGame.AllClustersInventory.OnAddAllClustersInventoryItemsFinished__DelegateSignature
struct UAllClustersInventory_OnAddAllClustersInventoryItemsFinished__DelegateSignature_Params
{
	bool                                               Success;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     UserId;                                                    // (Parm, ZeroConstructor)
	TArray<int>                                        MasterIndexNum;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function ShooterGame.PrimalLocalProfile.SaveProfile
struct UPrimalLocalProfile_SaveProfile_Params
{
	bool                                               bAllowForcedItemDownload;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalLocalProfile.OnSaveArkTributeFinished__DelegateSignature
struct UPrimalLocalProfile_OnSaveArkTributeFinished__DelegateSignature_Params
{
	bool                                               Success;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalLocalProfile.OnLoadArkTributePlayersDataFinished__DelegateSignature
struct UPrimalLocalProfile_OnLoadArkTributePlayersDataFinished__DelegateSignature_Params
{
	bool                                               Success;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FArkTributePlayerData>               PlayersData;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                FailureResponseCode;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalLocalProfile.OnFinishedLoadingAllClustersItems
struct UPrimalLocalProfile_OnFinishedLoadingAllClustersItems_Params
{
	bool                                               Success;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     UserId;                                                    // (Parm, ZeroConstructor)
	TArray<struct FItemNetInfo>                        ArkItems;                                                  // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.PrimalLocalProfile.OnAllClustersItemsRemoved
struct UPrimalLocalProfile_OnAllClustersItemsRemoved_Params
{
	bool                                               Success;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     UserId;                                                    // (Parm, ZeroConstructor)
	TArray<struct FItemNetID>                          ItemsIds;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function ShooterGame.BaseBoxTrigger.OnTriggerEndOverlap
struct ABaseBoxTrigger_OnTriggerEndOverlap_Params
{
	class AActor*                                      OtherActor;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                         OtherComp;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	int                                                OtherBodyIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.BaseBoxTrigger.OnTriggerBeginOverlap
struct ABaseBoxTrigger_OnTriggerBeginOverlap_Params
{
	class AActor*                                      OtherActor;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                         OtherComp;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	int                                                OtherBodyIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bFromSweep;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                                  SweepResult;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.BaseBoxTrigger.IsCharacterTouchingTrigger
struct ABaseBoxTrigger_IsCharacterTouchingTrigger_Params
{
	class APrimalCharacter*                            Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.BaseBoxTrigger.GetAllCharactersTouchingTrigger
struct ABaseBoxTrigger_GetAllCharactersTouchingTrigger_Params
{
	TArray<class APrimalCharacter*>                    OutCharacters;                                             // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.BaseBoxTrigger.BPOnTriggerEndOverlap
struct ABaseBoxTrigger_BPOnTriggerEndOverlap_Params
{
	class AActor*                                      OtherActor;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                         OtherComp;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	int                                                OtherBodyIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.BaseBoxTrigger.BPOnTriggerBeginOverlap
struct ABaseBoxTrigger_BPOnTriggerBeginOverlap_Params
{
	class AActor*                                      OtherActor;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                         OtherComp;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	int                                                OtherBodyIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bFromSweep;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                                  SweepResult;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.HazardTrigger.OnDeactivated
struct AHazardTrigger_OnDeactivated_Params
{
};

// Function ShooterGame.HazardTrigger.OnCharacterExit
struct AHazardTrigger_OnCharacterExit_Params
{
	class APrimalCharacter*                            Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HazardTrigger.OnCharacterEnter
struct AHazardTrigger_OnCharacterEnter_Params
{
	class APrimalCharacter*                            Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HazardTrigger.OnActivated
struct AHazardTrigger_OnActivated_Params
{
};

// Function ShooterGame.HazardTrigger.FindFloor
struct AHazardTrigger_FindFloor_Params
{
	struct FVector                                     TestLocation;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FFloorSlopeData                             FloorSlope;                                                // (Parm, OutParm)
	float                                              DepthOverride;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               UseActorNormal;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HazardTrigger.Deactivate
struct AHazardTrigger_Deactivate_Params
{
};

// Function ShooterGame.HazardTrigger.ClientActivation
struct AHazardTrigger_ClientActivation_Params
{
	bool                                               bActivate;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HazardTrigger.CanActivate
struct AHazardTrigger_CanActivate_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HazardTrigger.Activate
struct AHazardTrigger_Activate_Params
{
};

// Function ShooterGame.HazardTrigger_Slide.SpawnWarningFX
struct AHazardTrigger_Slide_SpawnWarningFX_Params
{
};

// Function ShooterGame.HazardTrigger_Slide.SpawnProjectile
struct AHazardTrigger_Slide_SpawnProjectile_Params
{
	struct FVector                                     Location;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Heading;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HazardTrigger_Slide.RebuildSplines
struct AHazardTrigger_Slide_RebuildSplines_Params
{
};

// Function ShooterGame.PrimalStaticData.GetPrimalStaticData
struct UPrimalStaticData_GetPrimalStaticData_Params
{
	class UClass*                                      DataType;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalStaticData*                           ReturnValue;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PointOfInterestInterface.ViewPoint
struct UPointOfInterestInterface_ViewPoint_Params
{
	class AActor*                                      ViewedByActor;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PointOfInterestInterface.UnviewPoint
struct UPointOfInterestInterface_UnviewPoint_Params
{
	class AActor*                                      UnviewedByActor;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PointOfInterestInterface.SetPointTagUniqueState
struct UPointOfInterestInterface_SetPointTagUniqueState_Params
{
	bool                                               bNewUniqueState;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PointOfInterestInterface.GetPointOfInterestData
struct UPointOfInterestInterface_GetPointOfInterestData_Params
{
	struct FPointOfInterestData                        ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.PointOfInterestInterface.GetPointCustomData
struct UPointOfInterestInterface_GetPointCustomData_Params
{
	class UClass*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PointOfInterestInterface.CanBeViewed
struct UPointOfInterestInterface_CanBeViewed_Params
{
	class AActor*                                      ByActor;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PointOfInterestCompanionInterface.GetPointCompanionBehaviorData
struct UPointOfInterestCompanionInterface_GetPointCompanionBehaviorData_Params
{
	struct FPointOfInterestCompanionBehavior           ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.MissionTrigger.IsPointOfInterestValid
struct AMissionTrigger_IsPointOfInterestValid_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionTrigger.GetMyPointOfInterestData
struct AMissionTrigger_GetMyPointOfInterestData_Params
{
	struct FPointOfInterestData                        ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.MissionTrigger.GetMyPointOfInterestCompanionBehavior
struct AMissionTrigger_GetMyPointOfInterestCompanionBehavior_Params
{
	struct FPointOfInterestCompanionBehavior           ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.BasePlayerController.SimulateInputKey
struct ABasePlayerController_SimulateInputKey_Params
{
	struct FKey                                        Key;                                                       // (Parm)
	bool                                               bPressed;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.BasePlayerController.ServerCheat
struct ABasePlayerController_ServerCheat_Params
{
	struct FString                                     Msg;                                                       // (Parm, ZeroConstructor)
};

// Function ShooterGame.BasePlayerController.Say
struct ABasePlayerController_Say_Params
{
	struct FString                                     Msg;                                                       // (Parm, ZeroConstructor)
};

// Function ShooterGame.BasePlayerController.ClientStartOnlineGame
struct ABasePlayerController_ClientStartOnlineGame_Params
{
};

// Function ShooterGame.BasePlayerController.ClientSetSpectatorCamera
struct ABasePlayerController_ClientSetSpectatorCamera_Params
{
	struct FVector                                     CameraLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    CameraRotation;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.BasePlayerController.ClientSendRoundEndEvent
struct ABasePlayerController_ClientSendRoundEndEvent_Params
{
	bool                                               bIsWinner;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ExpendedTimeInSeconds;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.BasePlayerController.ClientGameStarted
struct ABasePlayerController_ClientGameStarted_Params
{
};

// Function ShooterGame.BasePlayerController.ClientEndOnlineGame
struct ABasePlayerController_ClientEndOnlineGame_Params
{
};

// Function ShooterGame.ShooterHUD.StartCustomWheelRadialSelector
struct AShooterHUD_StartCustomWheelRadialSelector_Params
{
	struct FCustomWheelSettings                        WheelSettings;                                             // (ConstParm, Parm, OutParm, ReferenceParm)
	TArray<struct FCustomWheelEntry>                   Entries;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bFromGamepad;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                     ForcedEntryTarget;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.ShowSpawnUI
struct AShooterHUD_ShowSpawnUI_Params
{
	class APrimalStructure*                            FastTravelIgnoreBed;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.ShowPinEntryUI
struct AShooterHUD_ShowPinEntryUI_Params
{
	class AActor*                                      aTargetable;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsSetting;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                CustomIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.ShowMultiUseUIFor
struct AShooterHUD_ShowMultiUseUIFor_Params
{
	class AActor*                                      anActor;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bFromGamepad;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.ShowMissionList
struct AShooterHUD_ShowMissionList_Params
{
	class UObject*                                     FromDispatcher;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUI_MissionList*                             ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.ShowMissionAlert
struct AShooterHUD_ShowMissionAlert_Params
{
	TEnumAsByte<ShooterGame_EMissionAlertType>         AlertType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     AlertTitle;                                                // (Parm, ZeroConstructor)
	TArray<struct FMissionAlertEntry>                  AlertEntries;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	float                                              DisplayTime;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USoundBase*                                  SoundToPlay;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               FlyoutFromTop;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.ShowInventory
struct AShooterHUD_ShowInventory_Params
{
	class UPrimalInventoryComponent*                   InventoryComp;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class UUI_Inventory*                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.ShowEngramsMenu
struct AShooterHUD_ShowEngramsMenu_Params
{
	bool                                               bInputDelay;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUI_EngramsMenu*                             ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.ShowChatBox
struct AShooterHUD_ShowChatBox_Params
{
	bool                                               bShow;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsFromNewChat;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.SetAllowShowChatBox
struct AShooterHUD_SetAllowShowChatBox_Params
{
	bool                                               bAllow;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.ReplaceKeyboardControlsTextWithXboxControlIconPaths
struct AShooterHUD_ReplaceKeyboardControlsTextWithXboxControlIconPaths_Params
{
	struct FString                                     ActionKey;                                                 // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.ShooterHUD.NotifyOutOfAmmo
struct AShooterHUD_NotifyOutOfAmmo_Params
{
};

// Function ShooterGame.ShooterHUD.IsUsingCustomWheelRadialSelector
struct AShooterHUD_IsUsingCustomWheelRadialSelector_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.IsMissionAlertVisible
struct AShooterHUD_IsMissionAlertVisible_Params
{
	bool                                               bGetTopAlertVisibility;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.IsChatBoxVisible
struct AShooterHUD_IsChatBoxVisible_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.HideTopMissionAlert
struct AShooterHUD_HideTopMissionAlert_Params
{
};

// Function ShooterGame.ShooterHUD.HideMissionAlert
struct AShooterHUD_HideMissionAlert_Params
{
};

// Function ShooterGame.ShooterHUD.HideChatBox
struct AShooterHUD_HideChatBox_Params
{
};

// Function ShooterGame.ShooterHUD.GetSubtitlesWidget
struct AShooterHUD_GetSubtitlesWidget_Params
{
	class UUI_Subtitles*                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.GetShooterPC
struct AShooterHUD_GetShooterPC_Params
{
	class AShooterPlayerController*                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.GetSelectedCustomWheelEntry
struct AShooterHUD_GetSelectedCustomWheelEntry_Params
{
	struct FCustomWheelEntry                           SelectedEntry;                                             // (Parm, OutParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.GetPlayerOwner
struct AShooterHUD_GetPlayerOwner_Params
{
	class APlayerController*                           ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.GetMultiUseRadialSelection
struct AShooterHUD_GetMultiUseRadialSelection_Params
{
	struct FMultiUseEntry                              SelectedEntry;                                             // (Parm, OutParm, ContainsInstancedReference)
	bool                                               bIncludeTimedEntries;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.GetIconForKey
struct AShooterHUD_GetIconForKey_Params
{
	struct FString                                     ActionKey;                                                 // (Parm, ZeroConstructor)
	class UTexture2D*                                  ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.GetCurrentCrosshairScreenLocation
struct AShooterHUD_GetCurrentCrosshairScreenLocation_Params
{
	struct FVector2D                                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.GetChatBoxWidget
struct AShooterHUD_GetChatBoxWidget_Params
{
	class UUI_ChatBox*                                 ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.GetAdditionalExplorerNoteDynamicMaterialParams
struct AShooterHUD_GetAdditionalExplorerNoteDynamicMaterialParams_Params
{
	struct FExplorerNoteEntry                          ExplorerNote;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
	TArray<struct FNameScalarPair>                     ScalarMaterialParams;                                      // (Parm, OutParm, ZeroConstructor)
	TArray<struct FNameColorPair>                      ColorMaterialParams;                                       // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.ShooterHUD.FormatTextureAsRichText
struct AShooterHUD_FormatTextureAsRichText_Params
{
	class UTexture2D*                                  InTexture;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.ShooterHUD.FormatRichTextWithKeyBindings
struct AShooterHUD_FormatRichTextWithKeyBindings_Params
{
	struct FString                                     InText;                                                    // (Parm, ZeroConstructor)
	bool                                               bIgnoreMarkup;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.ShooterHUD.FormatRichTextWithColor
struct AShooterHUD_FormatRichTextWithColor_Params
{
	struct FString                                     InText;                                                    // (Parm, ZeroConstructor)
	struct FLinearColor                                InColor;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.ShooterHUD.ForceHUDHidden
struct AShooterHUD_ForceHUDHidden_Params
{
	bool                                               bForcedHidden;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.EndMultiUseRadialSelector
struct AShooterHUD_EndMultiUseRadialSelector_Params
{
};

// Function ShooterGame.ShooterHUD.EndCustomWheelRadialSelector
struct AShooterHUD_EndCustomWheelRadialSelector_Params
{
};

// Function ShooterGame.ShooterHUD.DrawCrosshairOnScreen
struct AShooterHUD_DrawCrosshairOnScreen_Params
{
	struct FVector2D                                   AtScreenLocation;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              WithCrossSpread;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FColor                                      WithDrawColor;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              WithAlphaPercent;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.CancelCustomWheelRadialSelector
struct AShooterHUD_CancelCustomWheelRadialSelector_Params
{
};

// Function ShooterGame.ShooterHUD.BPUpdateHUDRichTextOverlaysByInstigator
struct AShooterHUD_BPUpdateHUDRichTextOverlaysByInstigator_Params
{
	class AActor*                                      ByInstigator;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.BPUpdateHUDRichTextOverlayAtIndex
struct AShooterHUD_BPUpdateHUDRichTextOverlayAtIndex_Params
{
	struct FHUDRichTextOverlayData                     InOverlay;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	int                                                index;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.BPUpdateHUDRichTextOverlay
struct AShooterHUD_BPUpdateHUDRichTextOverlay_Params
{
	struct FHUDRichTextOverlayData                     InOverlay;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.ShooterHUD.BPUpdateAllHUDRichTextOverlays
struct AShooterHUD_BPUpdateAllHUDRichTextOverlays_Params
{
	TArray<struct FHUDRichTextOverlayData>             InOverlayData;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function ShooterGame.ShooterHUD.BPSimulateHit
struct AShooterHUD_BPSimulateHit_Params
{
	float                                              DamageTaken;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	class APawn*                                       PawnInstigator;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.BPShowUIScene
struct AShooterHUD_BPShowUIScene_Params
{
	class UClass*                                      UISceneTemplate;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                     AssociatedObject1;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                     AssociatedObject2;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ExtraID1;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ExtraID2;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalUI*                                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.BPSetHUDRichTextOverlayVerticalWidgetAlignment
struct AShooterHUD_BPSetHUDRichTextOverlayVerticalWidgetAlignment_Params
{
	struct FHUDRichTextOverlayData                     InOverlay;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<SlateCore_EVerticalAlignment>          InAlignV;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHUDRichTextOverlayData                     OutOverlay;                                                // (Parm, OutParm)
	bool                                               bUpdateAfterSetting;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.BPSetHUDRichTextOverlayVerticalScreenAnchor
struct AShooterHUD_BPSetHUDRichTextOverlayVerticalScreenAnchor_Params
{
	struct FHUDRichTextOverlayData                     InOverlay;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<SlateCore_EVerticalAlignment>          InAnchorV;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHUDRichTextOverlayData                     OutOverlay;                                                // (Parm, OutParm)
	bool                                               bUpdateAfterSetting;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.BPSetHUDRichTextOverlayUseAutoWrap
struct AShooterHUD_BPSetHUDRichTextOverlayUseAutoWrap_Params
{
	struct FHUDRichTextOverlayData                     InOverlay;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               InAutoWrap;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHUDRichTextOverlayData                     OutOverlay;                                                // (Parm, OutParm)
	bool                                               bUpdateAfterSetting;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.BPSetHUDRichTextOverlayScale
struct AShooterHUD_BPSetHUDRichTextOverlayScale_Params
{
	struct FHUDRichTextOverlayData                     InOverlay;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              InScale;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHUDRichTextOverlayData                     OutOverlay;                                                // (Parm, OutParm)
	bool                                               bUpdateAfterSetting;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.BPSetHUDRichTextOverlayPosition
struct AShooterHUD_BPSetHUDRichTextOverlayPosition_Params
{
	struct FHUDRichTextOverlayData                     InOverlay;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector2D                                   InPosition;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHUDRichTextOverlayData                     OutOverlay;                                                // (Parm, OutParm)
	bool                                               bUpdateAfterSetting;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.BPSetHUDRichTextOverlayInstigator
struct AShooterHUD_BPSetHUDRichTextOverlayInstigator_Params
{
	struct FHUDRichTextOverlayData                     InOverlay;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	class AActor*                                      InInstigator;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHUDRichTextOverlayData                     OutOverlay;                                                // (Parm, OutParm)
	bool                                               bUpdateAfterSetting;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.BPSetHUDRichTextOverlayHorizontalWidgetAlignment
struct AShooterHUD_BPSetHUDRichTextOverlayHorizontalWidgetAlignment_Params
{
	struct FHUDRichTextOverlayData                     InOverlay;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<SlateCore_EHorizontalAlignment>        InAlignH;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHUDRichTextOverlayData                     OutOverlay;                                                // (Parm, OutParm)
	bool                                               bUpdateAfterSetting;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.BPSetHUDRichTextOverlayHorizontalScreenAnchor
struct AShooterHUD_BPSetHUDRichTextOverlayHorizontalScreenAnchor_Params
{
	struct FHUDRichTextOverlayData                     InOverlay;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<SlateCore_EHorizontalAlignment>        InAnchorH;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHUDRichTextOverlayData                     OutOverlay;                                                // (Parm, OutParm)
	bool                                               bUpdateAfterSetting;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.BPSetHUDRichTextOverlayDisplayText
struct AShooterHUD_BPSetHUDRichTextOverlayDisplayText_Params
{
	struct FHUDRichTextOverlayData                     InOverlay;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FString                                     InString;                                                  // (Parm, ZeroConstructor)
	struct FHUDRichTextOverlayData                     OutOverlay;                                                // (Parm, OutParm)
	bool                                               bUpdateAfterSetting;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.BPSetHUDRichTextOverlayDefaultTextColor
struct AShooterHUD_BPSetHUDRichTextOverlayDefaultTextColor_Params
{
	struct FHUDRichTextOverlayData                     InOverlay;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FLinearColor                                InColor;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHUDRichTextOverlayData                     OutOverlay;                                                // (Parm, OutParm)
	bool                                               bUpdateAfterSetting;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.BPRemoveHUDRichTextOverlaysByInstigator
struct AShooterHUD_BPRemoveHUDRichTextOverlaysByInstigator_Params
{
	class AActor*                                      ByInstigator;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.BPRemoveHUDRichTextOverlayAtIndex
struct AShooterHUD_BPRemoveHUDRichTextOverlayAtIndex_Params
{
	int                                                index;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.BPRemoveHUDRichTextOverlay
struct AShooterHUD_BPRemoveHUDRichTextOverlay_Params
{
	struct FHUDRichTextOverlayData                     InOverlay;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.ShooterHUD.BPRemoveAllHUDRichTextOverlays
struct AShooterHUD_BPRemoveAllHUDRichTextOverlays_Params
{
};

// Function ShooterGame.ShooterHUD.BPGetHUDRichTextOverlays
struct AShooterHUD_BPGetHUDRichTextOverlays_Params
{
	TArray<struct FHUDRichTextOverlayData>             ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.ShooterHUD.BPAddHUDRichTextOverlayAtIndex
struct AShooterHUD_BPAddHUDRichTextOverlayAtIndex_Params
{
	struct FHUDRichTextOverlayData                     InOverlay;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	int                                                InsertAtIndex;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterHUD.BPAddHUDRichTextOverlay
struct AShooterHUD_BPAddHUDRichTextOverlay_Params
{
	struct FHUDRichTextOverlayData                     InOverlay;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.ShooterHUD.BPAddHUDNotification
struct AShooterHUD_BPAddHUDNotification_Params
{
	struct FString                                     NotificationString;                                        // (Parm, ZeroConstructor)
	struct FColor                                      NotificationColor;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInterface*                          NotificationMaterial;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTexture2D*                                  NotificationTexture;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DisplayTime;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DisplayScale;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsSingleton;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USoundBase*                                  SoundToPlay;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                MessageTypeID;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ItemMsgType;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      ItemClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ItemName;                                                  // (Parm, ZeroConstructor)
	int                                                ItemQuantity;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ItemQuantityFloat;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.UpdateTribeGroupInventoryRank
struct UPrimalInventoryComponent_UpdateTribeGroupInventoryRank_Params
{
	unsigned char                                      NewRank;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.UpdateNetWeaponClipAmmo
struct UPrimalInventoryComponent_UpdateNetWeaponClipAmmo_Params
{
	class UPrimalItem*                                 anItem;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ammo;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.TransferItemToInventory
struct UPrimalInventoryComponent_TransferItemToInventory_Params
{
	class UPrimalInventoryComponent*                   toInventory;                                               // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	int                                                ItemIndex;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.TransferAllItemsToInventory
struct UPrimalInventoryComponent_TransferAllItemsToInventory_Params
{
	class UPrimalInventoryComponent*                   toInventory;                                               // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.TransferAllItemsOfClassToInventory
struct UPrimalInventoryComponent_TransferAllItemsOfClassToInventory_Params
{
	class UPrimalInventoryComponent*                   toInventory;                                               // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class UClass*                                      OfItemClass;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bAllowSubclasses;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.TransferAllItemsOfClassesToInventory
struct UPrimalInventoryComponent_TransferAllItemsOfClassesToInventory_Params
{
	class UPrimalInventoryComponent*                   toInventory;                                               // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	TArray<class UClass*>                              OfItemClasses;                                             // (Parm, ZeroConstructor)
	bool                                               bAllowSubclasses;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.StopAllCraftingRepairing
struct UPrimalInventoryComponent_StopAllCraftingRepairing_Params
{
};

// Function ShooterGame.PrimalInventoryComponent.StaticDropNewItemWithInfo
struct UPrimalInventoryComponent_StaticDropNewItemWithInfo_Params
{
	class AActor*                                      forActor;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FItemNetInfo                                ItemInfo;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
	class UClass*                                      TheDroppedTemplateOverride;                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    DroppedRotationOffset;                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               bOverrideSpawnTransform;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     LocationOverride;                                          // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    RotationOverride;                                          // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               bPreventDropImpulse;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bThrow;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSecondaryAction;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSetItemDropLocation;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UStaticMesh*                                 DroppedMeshOverride;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     DroppedScaleOverride;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInterface*                          DroppedMaterialOverride;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DroppedLifeSpanOverride;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ADroppedItem*                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.StaticDropNewItem
struct UPrimalInventoryComponent_StaticDropNewItem_Params
{
	class AActor*                                      forActor;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      AnItemClass;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ItemQuality;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceNoBlueprint;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                quantityOverride;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceBlueprint;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      TheDroppedTemplateOverride;                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    DroppedRotationOffset;                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               bOverrideSpawnTransform;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     LocationOverride;                                          // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    RotationOverride;                                          // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               bPreventDropImpulse;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bThrow;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSecondaryAction;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSetItemDropLocation;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UStaticMesh*                                 DroppedMeshOverride;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     DroppedScaleOverride;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInterface*                          DroppedMaterialOverride;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DroppedLifeSpanOverride;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ADroppedItem*                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.SetNextItemSpoilingID
struct UPrimalInventoryComponent_SetNextItemSpoilingID_Params
{
	struct FItemNetID                                  NextItemID;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.SetNextItemConsumptionID
struct UPrimalInventoryComponent_SetNextItemConsumptionID_Params
{
	struct FItemNetID                                  NextItemID;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.SetCraftingEnabled
struct UPrimalInventoryComponent_SetCraftingEnabled_Params
{
	bool                                               bEnable;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.ServerSplitItemStack
struct UPrimalInventoryComponent_ServerSplitItemStack_Params
{
	struct FItemNetID                                  ItemId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                AmountToSplit;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.ServerSelectedCustomItemAction
struct UPrimalInventoryComponent_ServerSelectedCustomItemAction_Params
{
	struct FItemNetID                                  ItemId;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FName                                       SelectedOption;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.ServerRequestItems
struct UPrimalInventoryComponent_ServerRequestItems_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bEquippedItems;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsFirstSpawn;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.ServerRepairItem
struct UPrimalInventoryComponent_ServerRepairItem_Params
{
	struct FItemNetID                                  ItemId;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    ByPC;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bRepairIgnoreInventoryRequirement;                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              RepairPercentage;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              RepairSpeedMultiplier;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.ServerRemoveItemFromSlot
struct UPrimalInventoryComponent_ServerRemoveItemFromSlot_Params
{
	struct FItemNetID                                  ItemId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.ServerMergeItemStack
struct UPrimalInventoryComponent_ServerMergeItemStack_Params
{
	struct FItemNetID                                  ItemId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.ServerMakeRecipeItem
struct UPrimalInventoryComponent_ServerMakeRecipeItem_Params
{
	class APrimalStructureItemContainer*               Container;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  NoteToConsume;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      RecipeItemTemplate;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     CustomName;                                                // (Parm, ZeroConstructor)
	struct FString                                     CustomDescription;                                         // (Parm, ZeroConstructor)
	TArray<struct FColor>                              CustomColors;                                              // (ConstParm, Parm, ZeroConstructor)
	TArray<struct FCraftingResourceRequirement>        CustomRequirements;                                        // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.PrimalInventoryComponent.ServerForceMergeItemStack
struct UPrimalInventoryComponent_ServerForceMergeItemStack_Params
{
	struct FItemNetID                                  Item1ID;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  Item2ID;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.ServerCraftItem
struct UPrimalInventoryComponent_ServerCraftItem_Params
{
	struct FItemNetID                                  ItemId;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    ByPC;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.ServerAddItemToSlot
struct UPrimalInventoryComponent_ServerAddItemToSlot_Params
{
	struct FItemNetID                                  ItemId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                SlotIndex;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.RemoveItem
struct UPrimalInventoryComponent_RemoveItem_Params
{
	struct FItemNetID                                  ItemId;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               bDoDrop;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSecondryAction;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceRemoval;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               showHUDMessage;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.RemoteInventoryAllowViewing
struct UPrimalInventoryComponent_RemoteInventoryAllowViewing_Params
{
	class AShooterPlayerController*                    PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MaxAllowedDistanceOffset;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.RemoteInventoryAllowRepairingItems
struct UPrimalInventoryComponent_RemoteInventoryAllowRepairingItems_Params
{
	class AShooterPlayerController*                    PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIgnoreEnabled;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.RemoteInventoryAllowCraftingItems
struct UPrimalInventoryComponent_RemoteInventoryAllowCraftingItems_Params
{
	class AShooterPlayerController*                    PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIgnoreEnabled;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.OverrideUseItem
struct UPrimalInventoryComponent_OverrideUseItem_Params
{
	class UPrimalItem*                                 theItem;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.NotifyClientsDurabilityChange
struct UPrimalInventoryComponent_NotifyClientsDurabilityChange_Params
{
	class UPrimalItem*                                 anItem;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.IsRepairingAllowed
struct UPrimalInventoryComponent_IsRepairingAllowed_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.IsLocalToPlayer
struct UPrimalInventoryComponent_IsLocalToPlayer_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.IsLocal
struct UPrimalInventoryComponent_IsLocal_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.IsCraftingAllowed
struct UPrimalInventoryComponent_IsCraftingAllowed_Params
{
	class UPrimalItem*                                 anItem;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.IsAtMaxInventoryItems
struct UPrimalInventoryComponent_IsAtMaxInventoryItems_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.IsAllowedInventoryAccess
struct UPrimalInventoryComponent_IsAllowedInventoryAccess_Params
{
	class APlayerController*                           ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.InventoryViewersStopLocalSound
struct UPrimalInventoryComponent_InventoryViewersStopLocalSound_Params
{
	class USoundBase*                                  aSound;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.InventoryViewersPlayLocalSound
struct UPrimalInventoryComponent_InventoryViewersPlayLocalSound_Params
{
	class USoundBase*                                  aSound;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bAttach;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.InventoryRemoteViewersChanged__DelegateSignature
struct UPrimalInventoryComponent_InventoryRemoteViewersChanged__DelegateSignature_Params
{
	class UPrimalInventoryComponent*                   inventory;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.InventoryRefresh
struct UPrimalInventoryComponent_InventoryRefresh_Params
{
};

// Function ShooterGame.PrimalInventoryComponent.InventoryItemRemoved__DelegateSignature
struct UPrimalInventoryComponent_InventoryItemRemoved__DelegateSignature_Params
{
	class UPrimalInventoryComponent*                   inventory;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                AmountRemoved;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.InventoryItemAdded__DelegateSignature
struct UPrimalInventoryComponent_InventoryItemAdded__DelegateSignature_Params
{
	class UPrimalInventoryComponent*                   inventory;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                AmountAdded;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bEquippedItem;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.InventoryCustomSortPredicate
struct UPrimalInventoryComponent_InventoryCustomSortPredicate_Params
{
	class UPrimalItem*                                 LeftItem;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 RightItem;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.InventoryCustomFilter
struct UPrimalInventoryComponent_InventoryCustomFilter_Params
{
	TArray<class UPrimalItem*>                         UnfilteredItemsList;                                       // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class UPrimalItem*>                         FilteredItemsList;                                         // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.PrimalInventoryComponent.InitializeInventory
struct UPrimalInventoryComponent_InitializeInventory_Params
{
};

// Function ShooterGame.PrimalInventoryComponent.HasResources
struct UPrimalInventoryComponent_HasResources_Params
{
	TArray<struct FCraftingResourceRequirement>        RequiredResources;                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.HasItemsEquipped
struct UPrimalInventoryComponent_HasItemsEquipped_Params
{
	TArray<class UClass*>                              ItemTemplates;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bRequiresExactClassMatch;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bOnlyArkItems;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bEnsureAllItems;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.GetTotalEquippedItemStat
struct UPrimalInventoryComponent_GetTotalEquippedItemStat_Params
{
	TEnumAsByte<ShooterGame_EPrimalItemStat>           statType;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.GetMaxInventoryItems
struct UPrimalInventoryComponent_GetMaxInventoryItems_Params
{
	bool                                               bIgnoreHiddenDefaultInventory;                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.GetItemTemplateQuantity
struct UPrimalInventoryComponent_GetItemTemplateQuantity_Params
{
	class UClass*                                      ItemTemplate;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 IgnoreItem;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIgnoreBlueprints;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bCheckValidForCrafting;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bRequireExactClassMatch;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceCheckForDupes;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.GetInventoryUpdatedFrame
struct UPrimalInventoryComponent_GetInventoryUpdatedFrame_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.GetGrinderSettings
struct UPrimalInventoryComponent_GetGrinderSettings_Params
{
	int                                                MaxQuantityToGrind;                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              GrindGiveItemsPercent;                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                MaxItemsToGivePerGrind;                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.GetEquippedItemOfType
struct UPrimalInventoryComponent_GetEquippedItemOfType_Params
{
	TEnumAsByte<Engine_EPrimalEquipmentType>           aType;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.GetEquippedItemOfClass
struct UPrimalInventoryComponent_GetEquippedItemOfClass_Params
{
	class UClass*                                      ItemClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.GetEquippedArmorRating
struct UPrimalInventoryComponent_GetEquippedArmorRating_Params
{
	TEnumAsByte<Engine_EPrimalEquipmentType>           equipmentType;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.GenerateCustomCrateItems
struct UPrimalInventoryComponent_GenerateCustomCrateItems_Params
{
	class UClass*                                      SourceClass;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FSupplyCrateItemSet>                 CustomItemSets;                                            // (Parm, ZeroConstructor)
	float                                              CustomMinItemSets;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              CustomMaxItemSets;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              CustomNumItemSetsPower;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bCustomSetsRandomWithoutReplacement;                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UPrimalItem*>                         GeneratedItems;                                            // (Parm, OutParm, ZeroConstructor)
	float                                              MinQualityMultiplier;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MaxQualityMultiplier;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                NumPasses;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              QuantityMultiplier;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              SetPowerWeight;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MaxItemDifficultyClamp;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsMissionReward;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.GenerateCrateItems
struct UPrimalInventoryComponent_GenerateCrateItems_Params
{
	float                                              MinQualityMultiplier;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MaxQualityMultiplier;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                NumPasses;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              QuantityMultiplier;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              SetPowerWeight;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MaxItemDifficultyClamp;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.FindAllItemsOfType
struct UPrimalInventoryComponent_FindAllItemsOfType_Params
{
	class UClass*                                      ItemTemplate;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bRequiresExactClassMatch;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIncludeInventoryItems;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIncludeEquippedItems;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIncludeArkTributeItems;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIncludeSlotItems;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIncludeBlueprints;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIncludeEngrams;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UPrimalItem*>                         ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalInventoryComponent.EjectItem
struct UPrimalInventoryComponent_EjectItem_Params
{
	struct FItemNetID                                  ItemId;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               bPreventImpule;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceEject;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSetItemLocation;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     LocationOverride;                                          // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               showHUDMessage;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      TheDroppedTemplateOverride;                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bAssignToTribeForPickup;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                AssignedTribeID;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ADroppedItem*                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.ConsumeResources
struct UPrimalInventoryComponent_ConsumeResources_Params
{
	TArray<struct FCraftingResourceRequirement>        Resources;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.ConsumeArmorDurability
struct UPrimalInventoryComponent_ConsumeArmorDurability_Params
{
	float                                              ConsumptionAmount;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bAllArmorTypes;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_EPrimalEquipmentType>           SpecificArmorType;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.ClientUpdateFreeCraftingMode
struct UPrimalInventoryComponent_ClientUpdateFreeCraftingMode_Params
{
	bool                                               bNewFreeCraftingModeValue;                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.ClientOnArkTributeItemsAdded
struct UPrimalInventoryComponent_ClientOnArkTributeItemsAdded_Params
{
};

// Function ShooterGame.PrimalInventoryComponent.ClientItemMessageNotification
struct UPrimalInventoryComponent_ClientItemMessageNotification_Params
{
	struct FItemNetID                                  ItemId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_EPrimalItemMessage>        ItemMessageType;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.ClearCraftQueue
struct UPrimalInventoryComponent_ClearCraftQueue_Params
{
	bool                                               bForceClearActiveCraftRepair;                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.CanGrindItems
struct UPrimalInventoryComponent_CanGrindItems_Params
{
	class AShooterPlayerController*                    PC;                                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.CanGrindItem
struct UPrimalInventoryComponent_CanGrindItem_Params
{
	class UPrimalItem*                                 Item;                                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.CanEquipItem
struct UPrimalInventoryComponent_CanEquipItem_Params
{
	class UPrimalItem*                                 anItem;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.BPRequestedInventoryItems
struct UPrimalInventoryComponent_BPRequestedInventoryItems_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.BPRemoteInventoryGetMaxVisibleSlots
struct UPrimalInventoryComponent_BPRemoteInventoryGetMaxVisibleSlots_Params
{
	int                                                NumItems;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsLocal;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.BPRemoteInventoryAllowViewing
struct UPrimalInventoryComponent_BPRemoteInventoryAllowViewing_Params
{
	class AShooterPlayerController*                    PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.BPRemoteInventoryAllowRemoveItems
struct UPrimalInventoryComponent_BPRemoteInventoryAllowRemoveItems_Params
{
	class AShooterPlayerController*                    PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 anItemToTransfer;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.BPRemoteInventoryAllowCrafting
struct UPrimalInventoryComponent_BPRemoteInventoryAllowCrafting_Params
{
	class AShooterPlayerController*                    PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.BPRemoteInventoryAllowAddItems
struct UPrimalInventoryComponent_BPRemoteInventoryAllowAddItems_Params
{
	class AShooterPlayerController*                    PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.BPRemoteInventoryAllowAddItem_SpecificQuantity
struct UPrimalInventoryComponent_BPRemoteInventoryAllowAddItem_SpecificQuantity_Params
{
	class AShooterPlayerController*                    PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 anItem;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                SpecificQuantityIn;                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	int                                                SpecificQuantityOut;                                       // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.BPRemoteInventoryAllowAddItem
struct UPrimalInventoryComponent_BPRemoteInventoryAllowAddItem_Params
{
	class AShooterPlayerController*                    PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 anItem;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.BPPreventEquipItemType
struct UPrimalInventoryComponent_BPPreventEquipItemType_Params
{
	TEnumAsByte<Engine_EPrimalEquipmentType>           equipmentType;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.BPPreventEquipItem
struct UPrimalInventoryComponent_BPPreventEquipItem_Params
{
	class UPrimalItem*                                 theItem;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.BPPreInitDefaultInventory
struct UPrimalInventoryComponent_BPPreInitDefaultInventory_Params
{
};

// Function ShooterGame.PrimalInventoryComponent.BPPostInitDefaultInventory
struct UPrimalInventoryComponent_BPPostInitDefaultInventory_Params
{
};

// Function ShooterGame.PrimalInventoryComponent.BPOverrideItemMinimumUseInterval
struct UPrimalInventoryComponent_BPOverrideItemMinimumUseInterval_Params
{
	class UPrimalItem*                                 theItem;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.BPNotifyItemRemoved
struct UPrimalInventoryComponent_BPNotifyItemRemoved_Params
{
	class UPrimalItem*                                 anItem;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.BPNotifyItemQuantityUpdated
struct UPrimalInventoryComponent_BPNotifyItemQuantityUpdated_Params
{
	class UPrimalItem*                                 anItem;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                amount;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.BPNotifyItemAdded
struct UPrimalInventoryComponent_BPNotifyItemAdded_Params
{
	class UPrimalItem*                                 anItem;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bEquipItem;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.BPIsValidCraftingResource
struct UPrimalInventoryComponent_BPIsValidCraftingResource_Params
{
	class UPrimalItem*                                 theItem;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.BPIsCraftingAllowed
struct UPrimalInventoryComponent_BPIsCraftingAllowed_Params
{
	class UPrimalItem*                                 anItem;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.BPInventoryRefresh
struct UPrimalInventoryComponent_BPInventoryRefresh_Params
{
};

// Function ShooterGame.PrimalInventoryComponent.BPInitializeInventory
struct UPrimalInventoryComponent_BPInitializeInventory_Params
{
};

// Function ShooterGame.PrimalInventoryComponent.BPIncrementItemTemplateQuantity
struct UPrimalInventoryComponent_BPIncrementItemTemplateQuantity_Params
{
	class UClass*                                      ItemTemplate;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                amount;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bReplicateToClient;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsBlueprint;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bRequireExactClassMatch;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsCraftingResourceConsumption;                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsFromUseConsumption;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsArkTributeItem;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 UseSpecificItem;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDontExceedMaxItems;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.BPGetItemOfTemplate
struct UPrimalInventoryComponent_BPGetItemOfTemplate_Params
{
	class UClass*                                      ItemTemplate;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bOnlyInventoryItems;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bOnlyEquippedItems;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               IgnoreItemsWithFullQuantity;                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bFavorSlotItems;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsBlueprint;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bRequiresExactClassMatch;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIgnoreSlotItems;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bOnlyArkItems;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bPreferEngram;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsForCraftingConsumption;                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.BPGetExtraItemDisplay
struct UPrimalInventoryComponent_BPGetExtraItemDisplay_Params
{
	bool                                               bShowExtraItem;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     Description;                                               // (Parm, OutParm, ZeroConstructor)
	struct FString                                     CustomString;                                              // (Parm, OutParm, ZeroConstructor)
	class UTexture2D*                                  EntryIcon;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInterface*                          EntryMaterial;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.BPFindItemWithID
struct UPrimalInventoryComponent_BPFindItemWithID_Params
{
	int                                                ItemID1;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ItemID2;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.BPDropInventoryDeposit
struct UPrimalInventoryComponent_BPDropInventoryDeposit_Params
{
	double                                             DestroyAtTime;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                OverrideMaxItemsDropped;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                               bOverrideDepositLocation;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FVector                                     DepositLocationOverride;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
};

// Function ShooterGame.PrimalInventoryComponent.BPDropForceLocationInventoryDeposit
struct UPrimalInventoryComponent_BPDropForceLocationInventoryDeposit_Params
{
	double                                             DestroyAtTime;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                OverrideMaxItemsDropped;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FVector                                     DepositLocationOverride;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	int                                                DeadPlayerID;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	class APrimalStructureItemContainer*               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.BPCustomRemoteInventoryAllowRemoveItems
struct UPrimalInventoryComponent_BPCustomRemoteInventoryAllowRemoveItems_Params
{
	class AShooterPlayerController*                    PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 anItemToTransfer;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                RequestedQuantity;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bRequestedByPlayer;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bRequestDropping;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.BPCustomRemoteInventoryAllowAddItems
struct UPrimalInventoryComponent_BPCustomRemoteInventoryAllowAddItems_Params
{
	class AShooterPlayerController*                    PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 anItem;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                anItemQuantityOverride;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bRequestedByPlayer;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.BPCreateDropItemInventoryEmpty
struct UPrimalInventoryComponent_BPCreateDropItemInventoryEmpty_Params
{
	double                                             DestroyAtTime;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      OverrideInventoryDepositClass;                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	class APrimalStructureItemContainer*               CopyStructureValues;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	class AActor*                                      GroundIgnoreActor;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	int                                                DeadPlayerID;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	float                                              DropInventoryOnGroundTraceDistance;                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                               bOverrideDepositLocation;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FVector                                     DepositLocationOverride;                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, AdvancedDisplay)
	class APrimalStructureItemContainer*               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.BPCraftingFinishedNotification
struct UPrimalInventoryComponent_BPCraftingFinishedNotification_Params
{
	class UPrimalItem*                                 itemToBeCrafted;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.BPAllowUseInInventory
struct UPrimalInventoryComponent_BPAllowUseInInventory_Params
{
	class UPrimalItem*                                 theItem;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsRemoteInventory;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    ByPC;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.BPAllowAddInventoryItem
struct UPrimalInventoryComponent_BPAllowAddInventoryItem_Params
{
	class UPrimalItem*                                 Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                RequestedQuantity;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bOnlyAddAll;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.BPAccessedInventory
struct UPrimalInventoryComponent_BPAccessedInventory_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.AllowAddInventoryItem_OnlyAddAll
struct UPrimalInventoryComponent_AllowAddInventoryItem_OnlyAddAll_Params
{
	class UPrimalItem*                                 anItem;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.AllowAddInventoryItem_MaxQuantity
struct UPrimalInventoryComponent_AllowAddInventoryItem_MaxQuantity_Params
{
	class UPrimalItem*                                 anItem;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                requestedQuantityIn;                                       // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	int                                                requestedQuantityOut;                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.AllowAddInventoryItem_AnyQuantity
struct UPrimalInventoryComponent_AllowAddInventoryItem_AnyQuantity_Params
{
	class UPrimalItem*                                 anItem;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.AddItemObjectEx
struct UPrimalInventoryComponent_AddItemObjectEx_Params
{
	class UPrimalItem*                                 anItem;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bEquipItem;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bAddToSlot;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDontStack;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bShowHUDNotification;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDontRecalcSpoilingTime;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceIncompleteStacking;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           OwnerPlayer;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bClampStats;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 InsertAfterItem;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bInsertAtItemInstead;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalInventoryComponent.AddItemObject
struct UPrimalInventoryComponent_AddItemObject_Params
{
	class UPrimalItem*                                 anItem;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalPlayerData.SetPlayerHexagonCount
struct UPrimalPlayerData_SetPlayerHexagonCount_Params
{
	int                                                NewHexagonCount;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalPlayerData.SavePlayerData
struct UPrimalPlayerData_SavePlayerData_Params
{
	class UWorld*                                      ForWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalPlayerData.LinkedPlayerIDString
struct UPrimalPlayerData_LinkedPlayerIDString_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalPlayerData.HasUnlockedAllExplorerNotes
struct UPrimalPlayerData_HasUnlockedAllExplorerNotes_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalPlayerData.GetUniqueIdString
struct UPrimalPlayerData_GetUniqueIdString_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalPlayerData.GetPlayerState
struct UPrimalPlayerData_GetPlayerState_Params
{
	class AShooterPlayerState*                         ignorePlayerState;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bOnlyCheckExistingPlayers;                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterPlayerState*                         ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalPlayerData.GetPlayerHexagonCount
struct UPrimalPlayerData_GetPlayerHexagonCount_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalPlayerData.FindCharacterForPlayer
struct UPrimalPlayerData_FindCharacterForPlayer_Params
{
	class UWorld*                                      inWorld;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalPlayerData.BPForceDefeatedBoss
struct UPrimalPlayerData_BPForceDefeatedBoss_Params
{
	int                                                DifficultyIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       BossName;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    PlayerController;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalPlayerData.BPCreatedNewPlayerData
struct UPrimalPlayerData_BPCreatedNewPlayerData_Params
{
};

// Function ShooterGame.PrimalPlayerData.BPApplyToPlayerCharacter
struct UPrimalPlayerData_BPApplyToPlayerCharacter_Params
{
	class AShooterPlayerState*                         ForPlayerState;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           NewPlayerCharacter;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalPlayerData.BPAppliedToPlayerState
struct UPrimalPlayerData_BPAppliedToPlayerState_Params
{
	class AShooterPlayerState*                         ForPlayerState;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.ServerUnlockEngram
struct AShooterPlayerState_ServerUnlockEngram_Params
{
	class UClass*                                      forItemEntry;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bNotifyPlayerHUD;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceUnlock;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.ServerTribeRequestRemoveRankGroup
struct AShooterPlayerState_ServerTribeRequestRemoveRankGroup_Params
{
	int                                                RankGroupIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.ServerTribeRequestNewAlliance
struct AShooterPlayerState_ServerTribeRequestNewAlliance_Params
{
	struct FString                                     AllianceName;                                              // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerState.ServerTribeRequestApplyRankGroupSettings
struct AShooterPlayerState_ServerTribeRequestApplyRankGroupSettings_Params
{
	int                                                RankGroupIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTribeRankGroup                             newGroupSettings;                                          // (Parm)
};

// Function ShooterGame.ShooterPlayerState.ServerTribeRequestAddRankGroup
struct AShooterPlayerState_ServerTribeRequestAddRankGroup_Params
{
	struct FString                                     GroupName;                                                 // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerState.ServerSetSelectedDinoOrderGroup
struct AShooterPlayerState_ServerSetSelectedDinoOrderGroup_Params
{
	int                                                newGroup;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.ServerSetDinoGroupName
struct AShooterPlayerState_ServerSetDinoGroupName_Params
{
	int                                                groupIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     GroupName;                                                 // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerState.ServerSetDefaultItemSlotClass
struct AShooterPlayerState_ServerSetDefaultItemSlotClass_Params
{
	int                                                slotNum;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      ItemClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsEngram;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.ServerRequestTransferOwnershipInMyTribe
struct AShooterPlayerState_ServerRequestTransferOwnershipInMyTribe_Params
{
	int                                                PlayerIndexInTribe;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.ServerRequestSpawnPointsForDownloadedCharacters
struct AShooterPlayerState_ServerRequestSpawnPointsForDownloadedCharacters_Params
{
	uint64_t                                           PlayerDataID;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                IgnoreBedID;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.ServerRequestSetTribeMemberGroupRank
struct AShooterPlayerState_ServerRequestSetTribeMemberGroupRank_Params
{
	int                                                PlayerIndexInTribe;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                RankGroupIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.ServerRequestSetTribeGovernment
struct AShooterPlayerState_ServerRequestSetTribeGovernment_Params
{
	struct FTribeGovernment                            TribeGovernment;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.ServerRequestRenameTribe
struct AShooterPlayerState_ServerRequestRenameTribe_Params
{
	struct FString                                     ServerRequestRenameTribe;                                  // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerState.ServerRequestRemovePlayerIndexFromMyTribe
struct AShooterPlayerState_ServerRequestRemovePlayerIndexFromMyTribe_Params
{
	int                                                PlayerIndexInTribe;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.ServerRequestRemoveAllianceMember
struct AShooterPlayerState_ServerRequestRemoveAllianceMember_Params
{
	uint32_t                                           AllianceID;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint32_t                                           MemberID;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.ServerRequestPromotePlayerInMyTribe
struct AShooterPlayerState_ServerRequestPromotePlayerInMyTribe_Params
{
	int                                                PlayerIndexInTribe;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.ServerRequestPromoteAllianceMember
struct AShooterPlayerState_ServerRequestPromoteAllianceMember_Params
{
	uint32_t                                           AllianceID;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint32_t                                           MemberID;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.ServerRequestMySpawnPoints
struct AShooterPlayerState_ServerRequestMySpawnPoints_Params
{
	int                                                IgnoreBedID;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      FilterClass;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.ServerRequestLeaveTribe
struct AShooterPlayerState_ServerRequestLeaveTribe_Params
{
};

// Function ShooterGame.ShooterPlayerState.ServerRequestLeaveAlliance
struct AShooterPlayerState_ServerRequestLeaveAlliance_Params
{
	uint32_t                                           AllianceID;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.ServerRequestDinoOrderGroups
struct AShooterPlayerState_ServerRequestDinoOrderGroups_Params
{
};

// Function ShooterGame.ShooterPlayerState.ServerRequestDemotePlayerInMyTribe
struct AShooterPlayerState_ServerRequestDemotePlayerInMyTribe_Params
{
	int                                                PlayerIndexInTribe;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.ServerRequestCreateNewTribe
struct AShooterPlayerState_ServerRequestCreateNewTribe_Params
{
	struct FString                                     TribeName;                                                 // (Parm, ZeroConstructor)
	struct FTribeGovernment                            TribeGovernment;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.ServerRequestCreateNewPlayer
struct AShooterPlayerState_ServerRequestCreateNewPlayer_Params
{
	struct FPrimalPlayerCharacterConfigStructReplicated PlayerCharacterConfig;                                     // (Parm)
};

// Function ShooterGame.ShooterPlayerState.ServerRequestApplyEngramPoints
struct AShooterPlayerState_ServerRequestApplyEngramPoints_Params
{
	class UClass*                                      forItemEntry;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.ServerRejectTribeWar
struct AShooterPlayerState_ServerRejectTribeWar_Params
{
	int                                                EnemyTeamID;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.ServerGetServerOptions
struct AShooterPlayerState_ServerGetServerOptions_Params
{
};

// Function ShooterGame.ShooterPlayerState.ServerGetPlayerWhiteListedData
struct AShooterPlayerState_ServerGetPlayerWhiteListedData_Params
{
};

// Function ShooterGame.ShooterPlayerState.ServerGetPlayerConnectedData
struct AShooterPlayerState_ServerGetPlayerConnectedData_Params
{
};

// Function ShooterGame.ShooterPlayerState.ServerGetPlayerBannedData
struct AShooterPlayerState_ServerGetPlayerBannedData_Params
{
};

// Function ShooterGame.ShooterPlayerState.ServerGetPlayerAdministratorData
struct AShooterPlayerState_ServerGetPlayerAdministratorData_Params
{
};

// Function ShooterGame.ShooterPlayerState.ServerGetAllPlayerNamesAndLocations
struct AShooterPlayerState_ServerGetAllPlayerNamesAndLocations_Params
{
};

// Function ShooterGame.ShooterPlayerState.ServerGetAlivePlayerConnectedData
struct AShooterPlayerState_ServerGetAlivePlayerConnectedData_Params
{
};

// Function ShooterGame.ShooterPlayerState.ServerDinoOrderGroup_RemoveEntryByIndex
struct AShooterPlayerState_ServerDinoOrderGroup_RemoveEntryByIndex_Params
{
	int                                                groupIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsClass;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                entryIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.ServerDinoOrderGroup_Clear
struct AShooterPlayerState_ServerDinoOrderGroup_Clear_Params
{
	int                                                groupIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bClearClasses;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bClearChars;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.ServerDinoOrderGroup_AddOrRemoveDinoClass
struct AShooterPlayerState_ServerDinoOrderGroup_AddOrRemoveDinoClass_Params
{
	int                                                groupIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      DinoClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bAdd;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.ServerDinoOrderGroup_AddOrRemoveDinoCharacter
struct AShooterPlayerState_ServerDinoOrderGroup_AddOrRemoveDinoCharacter_Params
{
	int                                                groupIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalDinoCharacter*                        DinoCharacter;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bAdd;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.ServerDeclareTribeWar
struct AShooterPlayerState_ServerDeclareTribeWar_Params
{
	int                                                EnemyTeamID;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                StartDayNum;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                EndDayNumber;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              WarStartTime;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              WarEndTime;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.ServerAcceptTribeWar
struct AShooterPlayerState_ServerAcceptTribeWar_Params
{
	int                                                EnemyTeamID;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.SendTribeInviteData
struct AShooterPlayerState_SendTribeInviteData_Params
{
	struct FTribeData                                  TribeInviteData;                                           // (Parm)
};

// Function ShooterGame.ShooterPlayerState.ResetFlexPipeGlobalCooldown
struct AShooterPlayerState_ResetFlexPipeGlobalCooldown_Params
{
};

// Function ShooterGame.ShooterPlayerState.OnRep_UpdatedEngrams
struct AShooterPlayerState_OnRep_UpdatedEngrams_Params
{
};

// Function ShooterGame.ShooterPlayerState.NotifyUniqueDinoDownloaded
struct AShooterPlayerState_NotifyUniqueDinoDownloaded_Params
{
	struct FString                                     TheDinoName;                                               // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerState.NotifyUniqueDinoDownloadAllowed
struct AShooterPlayerState_NotifyUniqueDinoDownloadAllowed_Params
{
	struct FString                                     TheDinoName;                                               // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerState.NotifyTribememberLeft
struct AShooterPlayerState_NotifyTribememberLeft_Params
{
	struct FString                                     ThePlayerName;                                             // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerState.NotifyTribememberJoined
struct AShooterPlayerState_NotifyTribememberJoined_Params
{
	struct FString                                     ThePlayerName;                                             // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerState.NotifyPlayerLeftTribe
struct AShooterPlayerState_NotifyPlayerLeftTribe_Params
{
	struct FString                                     ThePlayerName;                                             // (Parm, ZeroConstructor)
	struct FString                                     TribeName;                                                 // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerState.NotifyPlayerLeft
struct AShooterPlayerState_NotifyPlayerLeft_Params
{
	struct FString                                     ThePlayerName;                                             // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerState.NotifyPlayerJoinedTribe
struct AShooterPlayerState_NotifyPlayerJoinedTribe_Params
{
	struct FString                                     ThePlayerName;                                             // (Parm, ZeroConstructor)
	struct FString                                     TribeName;                                                 // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerState.NotifyPlayerJoined
struct AShooterPlayerState_NotifyPlayerJoined_Params
{
	struct FString                                     ThePlayerName;                                             // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerState.IsTribeAdmin
struct AShooterPlayerState_IsTribeAdmin_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.IsInTribe
struct AShooterPlayerState_IsInTribe_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.IsFriendly
struct AShooterPlayerState_IsFriendly_Params
{
	int                                                OtherTeam;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.IsDinoInOrderGroup
struct AShooterPlayerState_IsDinoInOrderGroup_Params
{
	int                                                groupIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalDinoCharacter*                        dinoChar;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.IsDinoClassInOrderGroup
struct AShooterPlayerState_IsDinoClassInOrderGroup_Params
{
	int                                                groupIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      DinoClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.IsAllowedToRefreshFlexPipeConnections
struct AShooterPlayerState_IsAllowedToRefreshFlexPipeConnections_Params
{
	float                                              Cooldown;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.IsAlliedWith
struct AShooterPlayerState_IsAlliedWith_Params
{
	int                                                OtherTeam;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.HasEngram
struct AShooterPlayerState_HasEngram_Params
{
	class UClass*                                      ItemClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.GetUniqueIdString
struct AShooterPlayerState_GetUniqueIdString_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.ShooterPlayerState.GetTribeId
struct AShooterPlayerState_GetTribeId_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.GetHexCostToPurchaseNextEngramPoint
struct AShooterPlayerState_GetHexCostToPurchaseNextEngramPoint_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.GetDefaultItemSlotClasses
struct AShooterPlayerState_GetDefaultItemSlotClasses_Params
{
	TArray<class UClass*>                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.ShooterPlayerState.DoRespec
struct AShooterPlayerState_DoRespec_Params
{
	class UPrimalPlayerData*                           ForPlayerData;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           ForCharacte;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSetRespecedAtCharacterLevel;                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.ClientRefreshDinoOrderGroup
struct AShooterPlayerState_ClientRefreshDinoOrderGroup_Params
{
	int                                                groupIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDinoOrderGroup                             groupData;                                                 // (Parm)
	int                                                UseCurrentlySelectedGroup;                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.ClientReceiveSpawnPoints
struct AShooterPlayerState_ClientReceiveSpawnPoints_Params
{
	TArray<struct FSpawnPointInfo>                     SpawnPointsInfos;                                          // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerState.ClientNotifyLevelUpAvailable
struct AShooterPlayerState_ClientNotifyLevelUpAvailable_Params
{
};

// Function ShooterGame.ShooterPlayerState.ClientGetServerOptions
struct AShooterPlayerState_ClientGetServerOptions_Params
{
	struct FServerOptions                              Info;                                                      // (Parm)
};

// Function ShooterGame.ShooterPlayerState.ClientGetPlayerWhiteListedData
struct AShooterPlayerState_ClientGetPlayerWhiteListedData_Params
{
	TArray<struct FAdminPlayerDataInfo>                list;                                                      // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerState.ClientGetPlayerConnectedData
struct AShooterPlayerState_ClientGetPlayerConnectedData_Params
{
	TArray<struct FAdminPlayerDataInfo>                list;                                                      // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerState.ClientGetPlayerBannedData
struct AShooterPlayerState_ClientGetPlayerBannedData_Params
{
	TArray<struct FAdminPlayerDataInfo>                list;                                                      // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerState.ClientGetPlayerAdministratorData
struct AShooterPlayerState_ClientGetPlayerAdministratorData_Params
{
	TArray<struct FAdminPlayerDataInfo>                list;                                                      // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerState.ClientGetAllPlayerNamesAndLocations
struct AShooterPlayerState_ClientGetAllPlayerNamesAndLocations_Params
{
	TArray<struct FAliveNameAndLocation>               list;                                                      // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerState.ClientGetAlivePlayerConnectedData
struct AShooterPlayerState_ClientGetAlivePlayerConnectedData_Params
{
	TArray<struct FAlivePlayerDataInfo>                list;                                                      // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerState.ClearTribe
struct AShooterPlayerState_ClearTribe_Params
{
	bool                                               bDontRemoveFromTribe;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForce;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                           ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.BroadcastDeath
struct AShooterPlayerState_BroadcastDeath_Params
{
	class AShooterPlayerState*                         KillerPlayerState;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UDamageType*                                 KillerDamageType;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterPlayerState*                         KilledPlayerState;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.AllowTribeGroupPermission
struct AShooterPlayerState_AllowTribeGroupPermission_Params
{
	TEnumAsByte<ShooterGame_ETribeGroupPermission>     TribeGroupPermission;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                     OnObject;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.AllowDinoOrderByGroup
struct AShooterPlayerState_AllowDinoOrderByGroup_Params
{
	class APrimalDinoCharacter*                        orderDino;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerState.AddToTribe
struct AShooterPlayerState_AddToTribe_Params
{
	struct FTribeData                                  MyNewTribe;                                                // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               bMergeTribe;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForce;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsFromInvite;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                           InviterPC;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ZoneVolumeReport
struct AShooterPlayerController_ZoneVolumeReport_Params
{
};

// Function ShooterGame.ShooterPlayerController.WritePNTScreenshot
struct AShooterPlayerController_WritePNTScreenshot_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.ShooterPlayerController.ViewingAnUploadTerminal
struct AShooterPlayerController_ViewingAnUploadTerminal_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.UnlockExplorerNote
struct AShooterPlayerController_UnlockExplorerNote_Params
{
	int                                                ExplorerNoteIndex;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               forceShowExplorerNoteUI;                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.UnlockEmote
struct AShooterPlayerController_UnlockEmote_Params
{
	struct FName                                       EmoteName;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.TurnOnGmBuffAndTekArmorAndStatFpsAndAlsoStatUnitBecauseThisIsEasierToTypeOnXbox
struct AShooterPlayerController_TurnOnGmBuffAndTekArmorAndStatFpsAndAlsoStatUnitBecauseThisIsEasierToTypeOnXbox_Params
{
};

// Function ShooterGame.ShooterPlayerController.TryToForceUploadCharacter
struct AShooterPlayerController_TryToForceUploadCharacter_Params
{
};

// Function ShooterGame.ShooterPlayerController.ToggleWeaponAccessory
struct AShooterPlayerController_ToggleWeaponAccessory_Params
{
};

// Function ShooterGame.ShooterPlayerController.ToggleHud
struct AShooterPlayerController_ToggleHud_Params
{
};

// Function ShooterGame.ShooterPlayerController.Tick_UpdatePings
struct AShooterPlayerController_Tick_UpdatePings_Params
{
	float                                              DeltaTime;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.Tick_SearchForPOIs
struct AShooterPlayerController_Tick_SearchForPOIs_Params
{
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.TestPurchaseEP
struct AShooterPlayerController_TestPurchaseEP_Params
{
};

// Function ShooterGame.ShooterPlayerController.TestPhysxPerf
struct AShooterPlayerController_TestPhysxPerf_Params
{
	int                                                RayCount;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DistanceOfRays;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.TestNotification
struct AShooterPlayerController_TestNotification_Params
{
};

// Function ShooterGame.ShooterPlayerController.TestAlarmNotification
struct AShooterPlayerController_TestAlarmNotification_Params
{
	struct FString                                     Title;                                                     // (Parm, ZeroConstructor)
	struct FString                                     Message;                                                   // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.StopSpectating
struct AShooterPlayerController_StopSpectating_Params
{
};

// Function ShooterGame.ShooterPlayerController.StartWhistleSelection
struct AShooterPlayerController_StartWhistleSelection_Params
{
};

// Function ShooterGame.ShooterPlayerController.StartSurfaceCameraForPassenger
struct AShooterPlayerController_StartSurfaceCameraForPassenger_Params
{
	float                                              OnSurfaceTargetYaw;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OnSurfaceTargetPitch;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OnSurfaceTargetRoll;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.StartSurfaceCamera
struct AShooterPlayerController_StartSurfaceCamera_Params
{
	float                                              OnSurfaceTargetYaw;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OnSurfaceTargetPitch;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OnSurfaceTargetRoll;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OnSurfaceCameraInterpolationSpeed;                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               UseSurfaceCameraInterpolation;                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     CameraOffset;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.StartPlacingStructrue
struct AShooterPlayerController_StartPlacingStructrue_Params
{
	class UClass*                                      BuildingStructure;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.StartEmoteSelection
struct AShooterPlayerController_StartEmoteSelection_Params
{
};

// Function ShooterGame.ShooterPlayerController.StartArkGamepadRightShoulder
struct AShooterPlayerController_StartArkGamepadRightShoulder_Params
{
};

// Function ShooterGame.ShooterPlayerController.StartArkGamepadLeftShoulder
struct AShooterPlayerController_StartArkGamepadLeftShoulder_Params
{
};

// Function ShooterGame.ShooterPlayerController.StartArkGamepadFaceButtonTop
struct AShooterPlayerController_StartArkGamepadFaceButtonTop_Params
{
};

// Function ShooterGame.ShooterPlayerController.StartArkGamepadFaceButtonRight
struct AShooterPlayerController_StartArkGamepadFaceButtonRight_Params
{
};

// Function ShooterGame.ShooterPlayerController.StartArkGamepadFaceButtonLeft
struct AShooterPlayerController_StartArkGamepadFaceButtonLeft_Params
{
};

// Function ShooterGame.ShooterPlayerController.StartArkGamepadFaceButtonBottom
struct AShooterPlayerController_StartArkGamepadFaceButtonBottom_Params
{
};

// Function ShooterGame.ShooterPlayerController.StartArkGamepadDpadUp
struct AShooterPlayerController_StartArkGamepadDpadUp_Params
{
};

// Function ShooterGame.ShooterPlayerController.StartArkGamepadDpadRight
struct AShooterPlayerController_StartArkGamepadDpadRight_Params
{
};

// Function ShooterGame.ShooterPlayerController.StartArkGamepadDpadLeft
struct AShooterPlayerController_StartArkGamepadDpadLeft_Params
{
};

// Function ShooterGame.ShooterPlayerController.StartArkGamepadDpadDown
struct AShooterPlayerController_StartArkGamepadDpadDown_Params
{
};

// Function ShooterGame.ShooterPlayerController.StartArkGamepadBackButton
struct AShooterPlayerController_StartArkGamepadBackButton_Params
{
};

// Function ShooterGame.ShooterPlayerController.ShowMyAdminManager
struct AShooterPlayerController_ShowMyAdminManager_Params
{
};

// Function ShooterGame.ShooterPlayerController.ShouldHideGameplayUI
struct AShooterPlayerController_ShouldHideGameplayUI_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.SetPlayerPos
struct AShooterPlayerController_SetPlayerPos_Params
{
	float                                              X;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Y;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Z;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.SetMultiUseWheelCategory
struct AShooterPlayerController_SetMultiUseWheelCategory_Params
{
	int                                                Category;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalBuff*                                 OptionalBuff;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.SetMissionWaypointVisible
struct AShooterPlayerController_SetMissionWaypointVisible_Params
{
	bool                                               bInIsVisible;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.SetMissionWaypointInfo
struct AShooterPlayerController_SetMissionWaypointInfo_Params
{
	struct FString                                     InWaypointTitle;                                           // (Parm, ZeroConstructor)
	struct FVector                                     InWaypointDestination;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       InWaypointID;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.SetInfiniteStats
struct AShooterPlayerController_SetInfiniteStats_Params
{
	bool                                               bInfinite;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.SetGodMode
struct AShooterPlayerController_SetGodMode_Params
{
	bool                                               bEnable;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.SetDoFInterpTime
struct AShooterPlayerController_SetDoFInterpTime_Params
{
	float                                              InterpTime;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.SetControllerGamepadActive
struct AShooterPlayerController_SetControllerGamepadActive_Params
{
	bool                                               bIsActive;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.SetCinematicModeAdvanced
struct AShooterPlayerController_SetCinematicModeAdvanced_Params
{
	bool                                               bInCinematicMode;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bPreventCameraAnimFPV;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSetHUDHidden;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDisableKeymappings;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FName>                               KeyActionNames;                                            // (ConstParm, Parm, ZeroConstructor)
	bool                                               bDisableChat;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.SetCheatPlayer
struct AShooterPlayerController_SetCheatPlayer_Params
{
	bool                                               bEnable;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.SetAutoPlayer
struct AShooterPlayerController_SetAutoPlayer_Params
{
	bool                                               bEnable;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.SetAdminIcon
struct AShooterPlayerController_SetAdminIcon_Params
{
	bool                                               bAdminIcon;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerVerifyStructurePlacementItemData
struct AShooterPlayerController_ServerVerifyStructurePlacementItemData_Params
{
	struct FItemNetID                                  PlaceUsingItemID;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerUploadDino
struct AShooterPlayerController_ServerUploadDino_Params
{
	class APrimalDinoCharacter*                        DownloadedDino;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerUploadCurrentCharacterAndItems
struct AShooterPlayerController_ServerUploadCurrentCharacterAndItems_Params
{
	class UPrimalInventoryComponent*                   InventoryComp;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerUploadCharaterDataToArk
struct AShooterPlayerController_ServerUploadCharaterDataToArk_Params
{
	class UPrimalInventoryComponent*                   InventoryComp;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerUnlockPerMapExplorerNote
struct AShooterPlayerController_ServerUnlockPerMapExplorerNote_Params
{
	int                                                ExplorerNoteIndex;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bAvoidBuff;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerUnbanPlayer
struct AShooterPlayerController_ServerUnbanPlayer_Params
{
	struct FString                                     PlayerSteamName;                                           // (Parm, ZeroConstructor)
	struct FString                                     PlayerSteamID;                                             // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ServerTransferToRemoteInventory
struct AShooterPlayerController_ServerTransferToRemoteInventory_Params
{
	class UPrimalInventoryComponent*                   InventoryComp;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ItemId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bAlsoTryToEqup;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                RequestedQuantity;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerTransferredPlayerConfirmationResult
struct AShooterPlayerController_ServerTransferredPlayerConfirmationResult_Params
{
	bool                                               bAccept;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerTransferFromRemoteInventory
struct AShooterPlayerController_ServerTransferFromRemoteInventory_Params
{
	class UPrimalInventoryComponent*                   InventoryComp;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ItemId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                RequestedQuantity;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ToSlotIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bEquipItem;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerTransferAllToRemoteInventory
struct AShooterPlayerController_ServerTransferAllToRemoteInventory_Params
{
	class UPrimalInventoryComponent*                   InventoryComp;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FString                                     CurrentCustomFolderFilter;                                 // (Parm, ZeroConstructor)
	struct FString                                     CurrentNameFilter;                                         // (Parm, ZeroConstructor)
	struct FString                                     CurrentDestinationFolder;                                  // (Parm, ZeroConstructor)
	bool                                               bNoFolderView;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerTransferAllFromRemoteInventory
struct AShooterPlayerController_ServerTransferAllFromRemoteInventory_Params
{
	class UPrimalInventoryComponent*                   InventoryComp;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FString                                     CurrentCustomFolderFilter;                                 // (Parm, ZeroConstructor)
	struct FString                                     CurrentNameFilter;                                         // (Parm, ZeroConstructor)
	struct FString                                     CurrentDestinationFolder;                                  // (Parm, ZeroConstructor)
	bool                                               bNoFolderView;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerSuicide
struct AShooterPlayerController_ServerSuicide_Params
{
};

// Function ShooterGame.ShooterPlayerController.ServerStopWeaponFire
struct AShooterPlayerController_ServerStopWeaponFire_Params
{
	class AShooterWeapon*                              weapon;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerStopWeaponAltFire
struct AShooterPlayerController_ServerStopWeaponAltFire_Params
{
	class AShooterWeapon*                              weapon;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerStopSpectating
struct AShooterPlayerController_ServerStopSpectating_Params
{
};

// Function ShooterGame.ShooterPlayerController.ServerStayAlive
struct AShooterPlayerController_ServerStayAlive_Params
{
};

// Function ShooterGame.ShooterPlayerController.ServerStartWeaponFire
struct AShooterPlayerController_ServerStartWeaponFire_Params
{
	class AShooterWeapon*                              weapon;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerStartWeaponAltFire
struct AShooterPlayerController_ServerStartWeaponAltFire_Params
{
	class AShooterWeapon*                              weapon;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerSpectateToPlayerByID
struct AShooterPlayerController_ServerSpectateToPlayerByID_Params
{
	uint64_t                                           PlayerId;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerShowMessageOfTheDay
struct AShooterPlayerController_ServerShowMessageOfTheDay_Params
{
};

// Function ShooterGame.ShooterPlayerController.ServerSetVRPlayer
struct AShooterPlayerController_ServerSetVRPlayer_Params
{
	bool                                               bSetVRPlayer;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerSetSupressAdminIcon
struct AShooterPlayerController_ServerSetSupressAdminIcon_Params
{
	bool                                               bSuppress;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerSetSubscribedApp
struct AShooterPlayerController_ServerSetSubscribedApp_Params
{
	int                                                AppID;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bPreventDefaultItems;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerSetMessageOfTheDay
struct AShooterPlayerController_ServerSetMessageOfTheDay_Params
{
	struct FString                                     Message;                                                   // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ServerSetItemBalloonLocation
struct AShooterPlayerController_ServerSetItemBalloonLocation_Params
{
	class APrimalStructureMovingContainer*             ItemBalloon;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FPrimalMapMarkerEntryData                   MapMarker;                                                 // (Parm)
};

// Function ShooterGame.ShooterPlayerController.ServerSendDirectMessage
struct AShooterPlayerController_ServerSendDirectMessage_Params
{
	struct FString                                     PlayerSteamID;                                             // (Parm, ZeroConstructor)
	struct FString                                     Message;                                                   // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ServerSendChatMessage
struct AShooterPlayerController_ServerSendChatMessage_Params
{
	struct FString                                     ChatMessage;                                               // (Parm, ZeroConstructor)
	TEnumAsByte<ShooterGame_EChatSendMode>             SendMode;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerSendArkDataPayloadEnd
struct AShooterPlayerController_ServerSendArkDataPayloadEnd_Params
{
	struct FGuid                                       ID;                                                        // (Parm, ZeroConstructor)
	TEnumAsByte<ShooterGame_EPrimalARKTributeDataType> ArkDataType;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerSendArkDataPayloadBegin
struct AShooterPlayerController_ServerSendArkDataPayloadBegin_Params
{
	struct FGuid                                       ID;                                                        // (Parm, ZeroConstructor)
	TEnumAsByte<ShooterGame_EPrimalARKTributeDataType> ArkDataType;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     DataClass;                                                 // (Parm, ZeroConstructor)
	struct FString                                     TagName;                                                   // (Parm, ZeroConstructor)
	struct FString                                     Name;                                                      // (Parm, ZeroConstructor)
	TArray<struct FString>                             DataStats;                                                 // (ConstParm, Parm, ZeroConstructor)
	uint32_t                                           ID1;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint32_t                                           ID2;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerSendArkDataPayload
struct AShooterPlayerController_ServerSendArkDataPayload_Params
{
	struct FGuid                                       ID;                                                        // (Parm, ZeroConstructor)
	TEnumAsByte<ShooterGame_EPrimalARKTributeDataType> ArkDataType;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<unsigned char>                              DataBytes;                                                 // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ServerSelectedCustomItemAction
struct AShooterPlayerController_ServerSelectedCustomItemAction_Params
{
	class UPrimalInventoryComponent*                   InventoryComp;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ItemId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       SelectedOption;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerSaveWorld
struct AShooterPlayerController_ServerSaveWorld_Params
{
};

// Function ShooterGame.ShooterPlayerController.ServerRequestUpdateActiveMissionTags
struct AShooterPlayerController_ServerRequestUpdateActiveMissionTags_Params
{
};

// Function ShooterGame.ShooterPlayerController.ServerRequestTribeLog
struct AShooterPlayerController_ServerRequestTribeLog_Params
{
};

// Function ShooterGame.ShooterPlayerController.ServerRequestTamingInfoList
struct AShooterPlayerController_ServerRequestTamingInfoList_Params
{
};

// Function ShooterGame.ShooterPlayerController.ServerRequestStructuresPlacedOnFloor
struct AShooterPlayerController_ServerRequestStructuresPlacedOnFloor_Params
{
	TArray<class APrimalStructure*>                    OnStructures;                                              // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ServerRequestShowLeaderboards
struct AShooterPlayerController_ServerRequestShowLeaderboards_Params
{
	class UClass*                                      LeaderboardType;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerRequestSetPin
struct AShooterPlayerController_ServerRequestSetPin_Params
{
	class UObject*                                     forTarget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                PinValue;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsSetting;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                TheCustomIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerRequestRespawnAtPoint
struct AShooterPlayerController_ServerRequestRespawnAtPoint_Params
{
	int                                                SpawnPointID;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                spawnRegionIndex;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerRequestRemoveWeaponClipAmmo
struct AShooterPlayerController_ServerRequestRemoveWeaponClipAmmo_Params
{
	class UPrimalInventoryComponent*                   InventoryComp;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ItemId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerRequestRemoveWeaponAccessoryOnly
struct AShooterPlayerController_ServerRequestRemoveWeaponAccessoryOnly_Params
{
	class UPrimalInventoryComponent*                   InventoryComp;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ItemId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerRequestRemoveItemSkinOnly
struct AShooterPlayerController_ServerRequestRemoveItemSkinOnly_Params
{
	class UPrimalInventoryComponent*                   InventoryComp;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ItemId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerRequestRemoveItemSkin
struct AShooterPlayerController_ServerRequestRemoveItemSkin_Params
{
	class UPrimalInventoryComponent*                   InventoryComp;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ItemId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerRequestRemoveDinoFromTamingListByID
struct AShooterPlayerController_ServerRequestRemoveDinoFromTamingListByID_Params
{
	int                                                InID1;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                InID2;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerRequestRemoteDropAllItems
struct AShooterPlayerController_ServerRequestRemoteDropAllItems_Params
{
	class UPrimalInventoryComponent*                   InventoryComp;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FString                                     CurrentCustomFolderFilter;                                 // (Parm, ZeroConstructor)
	struct FString                                     CurrentNameFilter;                                         // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ServerRequestPlaceStructure
struct AShooterPlayerController_ServerRequestPlaceStructure_Params
{
	int                                                StructureIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     BuildLocation;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    BuildRotation;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    PlayerViewRotation;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                       AttachToPawn;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalDinoCharacter*                        DinoCharacter;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       BoneName;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  PlaceUsingItemID;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSnapped;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsCheat;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsFlipped;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                SnapPointCycle;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerRequestMyTribeOnlineList
struct AShooterPlayerController_ServerRequestMyTribeOnlineList_Params
{
};

// Function ShooterGame.ShooterPlayerController.ServerRequestLevelUp
struct AShooterPlayerController_ServerRequestLevelUp_Params
{
	class UPrimalCharacterStatusComponent*             forStatusComp;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> ValueType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerRequestInventoryUseItemWithItem
struct AShooterPlayerController_ServerRequestInventoryUseItemWithItem_Params
{
	class UPrimalInventoryComponent*                   InventoryComp;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ItemID1;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ItemID2;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                AdditionalData;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerRequestInventoryUseItemWithActor
struct AShooterPlayerController_ServerRequestInventoryUseItemWithActor_Params
{
	class AActor*                                      anActor;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalInventoryComponent*                   InventoryComp;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ItemID1;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                AdditionalData;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerRequestInventoryUseItem
struct AShooterPlayerController_ServerRequestInventoryUseItem_Params
{
	class UPrimalInventoryComponent*                   InventoryComp;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ItemId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerRequestInventorySwapItems
struct AShooterPlayerController_ServerRequestInventorySwapItems_Params
{
	class UPrimalInventoryComponent*                   InventoryComp;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ItemID1;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ItemID2;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerRequestFastTravelToPoint
struct AShooterPlayerController_ServerRequestFastTravelToPoint_Params
{
	int                                                fromSpawnPointID;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                SpawnPointID;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerRequestDropAllItems
struct AShooterPlayerController_ServerRequestDropAllItems_Params
{
	struct FString                                     CurrentCustomFolderFilter;                                 // (Parm, ZeroConstructor)
	struct FString                                     CurrentNameFilter;                                         // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ServerRequestDownloadPlayerCharacter
struct AShooterPlayerController_ServerRequestDownloadPlayerCharacter_Params
{
	struct FArkTributePlayerData                       DownloadedCharacter;                                       // (Parm)
	int                                                SpawnPointID;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                spawnRegionIndex;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerRequestDownloadDino
struct AShooterPlayerController_ServerRequestDownloadDino_Params
{
	struct FARKTributeDino                             DownloadedDino;                                            // (Parm)
};

// Function ShooterGame.ShooterPlayerController.ServerRequestDinoCharStats
struct AShooterPlayerController_ServerRequestDinoCharStats_Params
{
	class APrimalDinoCharacter*                        theDinoChar;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerRequestDinoAncestors
struct AShooterPlayerController_ServerRequestDinoAncestors_Params
{
	class APrimalDinoCharacter*                        ForDino;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerRequestCreateMissionDataBuff
struct AShooterPlayerController_ServerRequestCreateMissionDataBuff_Params
{
};

// Function ShooterGame.ShooterPlayerController.ServerRequestActorItems
struct AShooterPlayerController_ServerRequestActorItems_Params
{
	class UPrimalInventoryComponent*                   forInventory;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	bool                                               bInventoryItems;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsFirstSpawn;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerRepeatMultiUse
struct AShooterPlayerController_ServerRepeatMultiUse_Params
{
	class UObject*                                     ForObject;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                UseIndex;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerRepairItem
struct AShooterPlayerController_ServerRepairItem_Params
{
	class UPrimalInventoryComponent*                   InventoryComp;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ItemId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerRemoveSteamItemSucceeded
struct AShooterPlayerController_ServerRemoveSteamItemSucceeded_Params
{
};

// Function ShooterGame.ShooterPlayerController.ServerRemoveSteamItem
struct AShooterPlayerController_ServerRemoveSteamItem_Params
{
	uint32_t                                           ItemdDefId;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerRemovePawnItem
struct AShooterPlayerController_ServerRemovePawnItem_Params
{
	struct FItemNetID                                  ItemId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSecondryAction;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerRemovePassenger
struct AShooterPlayerController_ServerRemovePassenger_Params
{
};

// Function ShooterGame.ShooterPlayerController.ServerRemoveAdminPlayer
struct AShooterPlayerController_ServerRemoveAdminPlayer_Params
{
	struct FString                                     PlayerSteamName;                                           // (Parm, ZeroConstructor)
	struct FString                                     PlayerSteamID;                                             // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ServerReleaseSeatingStructure
struct AShooterPlayerController_ServerReleaseSeatingStructure_Params
{
};

// Function ShooterGame.ShooterPlayerController.ServerRefreshSteamInventory
struct AShooterPlayerController_ServerRefreshSteamInventory_Params
{
};

// Function ShooterGame.ShooterPlayerController.ServerRecieveSpectatorLocationAndRotation
struct AShooterPlayerController_ServerRecieveSpectatorLocationAndRotation_Params
{
	struct FVector                                     spectatorLocation;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    spectatorRotation;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerReadMessageOFTheDay
struct AShooterPlayerController_ServerReadMessageOFTheDay_Params
{
};

// Function ShooterGame.ShooterPlayerController.ServerProcessItemNetExecCommandUnreliableBP
struct AShooterPlayerController_ServerProcessItemNetExecCommandUnreliableBP_Params
{
	class UPrimalInventoryComponent*                   forInventory;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ForItemID;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsEquippedItem;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       CommandName;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBPNetExecParams                            ExecParams;                                                // (Parm)
};

// Function ShooterGame.ShooterPlayerController.ServerProcessItemNetExecCommandBP
struct AShooterPlayerController_ServerProcessItemNetExecCommandBP_Params
{
	class UPrimalInventoryComponent*                   forInventory;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ForItemID;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsEquippedItem;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       CommandName;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBPNetExecParams                            ExecParams;                                                // (Parm)
};

// Function ShooterGame.ShooterPlayerController.ServerPaint
struct AShooterPlayerController_ServerPaint_Params
{
	class UStructurePaintingComponent*                 Structure;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	TArray<struct FPaintItem>                          Paints;                                                    // (ConstParm, Parm, ZeroConstructor, ContainsInstancedReference)
	bool                                               bLastBatch;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bFromLoadFile;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerNotifyEditText
struct AShooterPlayerController_ServerNotifyEditText_Params
{
	struct FString                                     TextToUse;                                                 // (Parm, ZeroConstructor)
	bool                                               checkedBox;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      ForObjectClass;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint32_t                                           ExtraID1;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint32_t                                           ExtraID2;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                     ForObject;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerMultiUse
struct AShooterPlayerController_ServerMultiUse_Params
{
	class UObject*                                     ForObject;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                UseIndex;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerLoadWorld
struct AShooterPlayerController_ServerLoadWorld_Params
{
};

// Function ShooterGame.ShooterPlayerController.ServerLoadUploadedDinos
struct AShooterPlayerController_ServerLoadUploadedDinos_Params
{
};

// Function ShooterGame.ShooterPlayerController.ServerLoadUploadedCharacters
struct AShooterPlayerController_ServerLoadUploadedCharacters_Params
{
};

// Function ShooterGame.ShooterPlayerController.ServerLoadArkInventoryItems
struct AShooterPlayerController_ServerLoadArkInventoryItems_Params
{
	TArray<struct FItemNetInfo>                        ArkInventoryItems;                                         // (ConstParm, Parm, ZeroConstructor)
	bool                                               bFinalBatch;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerListPlayers
struct AShooterPlayerController_ServerListPlayers_Params
{
};

// Function ShooterGame.ShooterPlayerController.ServerKickPlayer
struct AShooterPlayerController_ServerKickPlayer_Params
{
	struct FString                                     PlayerSteamName;                                           // (Parm, ZeroConstructor)
	struct FString                                     PlayerSteamID;                                             // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ServerInventoryClearCraftQueue
struct AShooterPlayerController_ServerInventoryClearCraftQueue_Params
{
	class UPrimalInventoryComponent*                   InventoryComp;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerGrindItemInRemoteInventory
struct AShooterPlayerController_ServerGrindItemInRemoteInventory_Params
{
	class UPrimalInventoryComponent*                   InventoryComp;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ItemId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               grindStack;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerGlobalCommand
struct AShooterPlayerController_ServerGlobalCommand_Params
{
	struct FString                                     Msg;                                                       // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ServerGetOriginalHairColor
struct AShooterPlayerController_ServerGetOriginalHairColor_Params
{
};

// Function ShooterGame.ShooterPlayerController.ServerGetMessageOfTheDay
struct AShooterPlayerController_ServerGetMessageOfTheDay_Params
{
};

// Function ShooterGame.ShooterPlayerController.ServerEquipToRemoteInventory
struct AShooterPlayerController_ServerEquipToRemoteInventory_Params
{
	class UPrimalInventoryComponent*                   InventoryComp;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ItemId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerEquipPawnItem
struct AShooterPlayerController_ServerEquipPawnItem_Params
{
	struct FItemNetID                                  ItemId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerDropFromRemoteInventory
struct AShooterPlayerController_ServerDropFromRemoteInventory_Params
{
	class UPrimalInventoryComponent*                   InventoryComp;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ItemId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerDropAllNotReadyForUploadItems
struct AShooterPlayerController_ServerDropAllNotReadyForUploadItems_Params
{
};

// Function ShooterGame.ShooterPlayerController.ServerDPC
struct AShooterPlayerController_ServerDPC_Params
{
};

// Function ShooterGame.ShooterPlayerController.ServerDownloadTransferredPlayer
struct AShooterPlayerController_ServerDownloadTransferredPlayer_Params
{
	int                                                SpawnPointID;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                spawnPointRegionIndex;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerDisallowPlayerToJoinNoCheck
struct AShooterPlayerController_ServerDisallowPlayerToJoinNoCheck_Params
{
	struct FString                                     PlayerId;                                                  // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ServerDeleteItemFromCustomFolder
struct AShooterPlayerController_ServerDeleteItemFromCustomFolder_Params
{
	class UPrimalInventoryComponent*                   forInventory;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FString                                     CFolderName;                                               // (Parm, ZeroConstructor)
	int                                                InventoryCompType;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ItemId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerDeleteCustomFolder
struct AShooterPlayerController_ServerDeleteCustomFolder_Params
{
	class UPrimalInventoryComponent*                   forInventory;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FString                                     CFolderName;                                               // (Parm, ZeroConstructor)
	int                                                InventoryCompType;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerDataSetRPC
struct AShooterPlayerController_ServerDataSetRPC_Params
{
	TArray<struct FDataSet>                            dataSets;                                                  // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ServerCycleSpectator
struct AShooterPlayerController_ServerCycleSpectator_Params
{
	bool                                               bNext;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerCraftItem
struct AShooterPlayerController_ServerCraftItem_Params
{
	class UPrimalInventoryComponent*                   InventoryComp;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ItemId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerCheckUnfreeze
struct AShooterPlayerController_ServerCheckUnfreeze_Params
{
};

// Function ShooterGame.ShooterPlayerController.ServerCheckIsValidPlayerToDownload
struct AShooterPlayerController_ServerCheckIsValidPlayerToDownload_Params
{
	struct FArkTributePlayerData                       PlayerData;                                                // (ConstParm, Parm)
};

// Function ShooterGame.ShooterPlayerController.ServerCharacterUploadWithItems_UploadItem
struct AShooterPlayerController_ServerCharacterUploadWithItems_UploadItem_Params
{
	uint64_t                                           PlayerDataID;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FItemNetInfo                                InvItem;                                                   // (Parm)
};

// Function ShooterGame.ShooterPlayerController.ServerCharacterUploadWithItems_Start
struct AShooterPlayerController_ServerCharacterUploadWithItems_Start_Params
{
	uint64_t                                           PlayerDataID;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FArkTributePlayerData                       PlayerData;                                                // (Parm)
};

// Function ShooterGame.ShooterPlayerController.ServerCharacterUploadWithItems_FinishAndCreateCharacter
struct AShooterPlayerController_ServerCharacterUploadWithItems_FinishAndCreateCharacter_Params
{
	uint64_t                                           PlayerDataID;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerCharacterUploadWithItems_CharaterPayload
struct AShooterPlayerController_ServerCharacterUploadWithItems_CharaterPayload_Params
{
	uint64_t                                           PlayerDataID;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<unsigned char>                              PlayerDataChunk;                                           // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ServerBanPlayer
struct AShooterPlayerController_ServerBanPlayer_Params
{
	struct FString                                     PlayerSteamName;                                           // (Parm, ZeroConstructor)
	struct FString                                     PlayerSteamID;                                             // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ServerAsyncLoadArkInventoryItems
struct AShooterPlayerController_ServerAsyncLoadArkInventoryItems_Params
{
	TArray<struct FItemNetInfo>                        ArkInventoryItems;                                         // (ConstParm, Parm, ZeroConstructor)
	bool                                               bFinalBatch;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerAllowPlayerToJoinNoCheck
struct AShooterPlayerController_ServerAllowPlayerToJoinNoCheck_Params
{
	struct FString                                     PlayerId;                                                  // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ServerAddItemToCustomFolder
struct AShooterPlayerController_ServerAddItemToCustomFolder_Params
{
	class UPrimalInventoryComponent*                   forInventory;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FString                                     CFolderName;                                               // (Parm, ZeroConstructor)
	int                                                InventoryCompType;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ItemId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerAddItemToArkInventory
struct AShooterPlayerController_ServerAddItemToArkInventory_Params
{
	class UPrimalInventoryComponent*                   InventoryComp;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ItemId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                RequestedQuantity;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerAddItemFromArkInventory
struct AShooterPlayerController_ServerAddItemFromArkInventory_Params
{
	class UPrimalInventoryComponent*                   InventoryComp;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ItemId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                RequestedQuantity;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerAddAdminPlayer
struct AShooterPlayerController_ServerAddAdminPlayer_Params
{
	struct FString                                     PlayerSteamName;                                           // (Parm, ZeroConstructor)
	struct FString                                     PlayerSteamID;                                             // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ServerAddAchievementID
struct AShooterPlayerController_ServerAddAchievementID_Params
{
	struct FString                                     AchievementID;                                             // (Parm, ZeroConstructor)
	bool                                               bIsOnSpawn;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerActorViewRemoteInventory
struct AShooterPlayerController_ServerActorViewRemoteInventory_Params
{
	class UPrimalInventoryComponent*                   InventoryComp;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ServerActorCloseRemoteInventory
struct AShooterPlayerController_ServerActorCloseRemoteInventory_Params
{
	class UPrimalInventoryComponent*                   InventoryComp;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.Server_RespondToPing
struct AShooterPlayerController_Server_RespondToPing_Params
{
	struct FReplicatePingData                          RespondToPingData;                                         // (ConstParm, Parm, ContainsInstancedReference)
};

// Function ShooterGame.ShooterPlayerController.Server_Ping
struct AShooterPlayerController_Server_Ping_Params
{
	struct FReplicatePingData                          WithPingData;                                              // (ConstParm, Parm, ContainsInstancedReference)
};

// Function ShooterGame.ShooterPlayerController.SendAlarmNotification
struct AShooterPlayerController_SendAlarmNotification_Params
{
	struct FString                                     SteamID;                                                   // (Parm, ZeroConstructor)
	struct FString                                     Title;                                                     // (Parm, ZeroConstructor)
	struct FString                                     Message;                                                   // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.SCP
struct AShooterPlayerController_SCP_Params
{
};

// Function ShooterGame.ShooterPlayerController.SameLinkedId
struct AShooterPlayerController_SameLinkedId_Params
{
	int64_t                                            Value;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.RPCStayAlive
struct AShooterPlayerController_RPCStayAlive_Params
{
};

// Function ShooterGame.ShooterPlayerController.RespondToPing
struct AShooterPlayerController_RespondToPing_Params
{
	struct FReplicatePingData                          RespondToPingData;                                         // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};

// Function ShooterGame.ShooterPlayerController.RequestSpectator
struct AShooterPlayerController_RequestSpectator_Params
{
	struct FString                                     InSpectatorPass;                                           // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.RemoveItemSucceeded
struct AShooterPlayerController_RemoveItemSucceeded_Params
{
};

// Function ShooterGame.ShooterPlayerController.QuitToMainMenu
struct AShooterPlayerController_QuitToMainMenu_Params
{
};

// Function ShooterGame.ShooterPlayerController.PurchaseEngramPoint
struct AShooterPlayerController_PurchaseEngramPoint_Params
{
	int                                                NumPointsToPurchase;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.PrintColors
struct AShooterPlayerController_PrintColors_Params
{
};

// Function ShooterGame.ShooterPlayerController.PlayHitMarkerStructureAlly
struct AShooterPlayerController_PlayHitMarkerStructureAlly_Params
{
};

// Function ShooterGame.ShooterPlayerController.PlayHitMarkerStructure
struct AShooterPlayerController_PlayHitMarkerStructure_Params
{
};

// Function ShooterGame.ShooterPlayerController.PlayHitMarkerCharacter
struct AShooterPlayerController_PlayHitMarkerCharacter_Params
{
	bool                                               bHitFriendlyTarget;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitMarkerSettings                          HitMarkerSettings;                                         // (ConstParm, Parm)
};

// Function ShooterGame.ShooterPlayerController.PlayerCommand
struct AShooterPlayerController_PlayerCommand_Params
{
	struct FString                                     TheCommand;                                                // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.ShooterPlayerController.PingNearbyPlayers
struct AShooterPlayerController_PingNearbyPlayers_Params
{
	struct FReplicatePingData                          WithPingData;                                              // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};

// Function ShooterGame.ShooterPlayerController.OnWhistlePress
struct AShooterPlayerController_OnWhistlePress_Params
{
};

// Function ShooterGame.ShooterPlayerController.OnToggleInGameMenu
struct AShooterPlayerController_OnToggleInGameMenu_Params
{
};

// Function ShooterGame.ShooterPlayerController.OnToggleDoFMenu
struct AShooterPlayerController_OnToggleDoFMenu_Params
{
};

// Function ShooterGame.ShooterPlayerController.OnStopTargeting
struct AShooterPlayerController_OnStopTargeting_Params
{
};

// Function ShooterGame.ShooterPlayerController.OnStopFire
struct AShooterPlayerController_OnStopFire_Params
{
};

// Function ShooterGame.ShooterPlayerController.OnStartTargeting
struct AShooterPlayerController_OnStartTargeting_Params
{
};

// Function ShooterGame.ShooterPlayerController.OnStartFire
struct AShooterPlayerController_OnStartFire_Params
{
};

// Function ShooterGame.ShooterPlayerController.OnServerRefreshSteamInventoryFinished
struct AShooterPlayerController_OnServerRefreshSteamInventoryFinished_Params
{
	bool                                               bSuccess;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint64_t                                           SteamID;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.OnRefreshSteamInventoryToCheckConsumeFinished
struct AShooterPlayerController_OnRefreshSteamInventoryToCheckConsumeFinished_Params
{
	bool                                               bSuccess;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint64_t                                           SteamID;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.OnRefreshSteamInventoryFinished
struct AShooterPlayerController_OnRefreshSteamInventoryFinished_Params
{
	bool                                               bSuccess;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint64_t                                           SteamID;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.OnPingUp
struct AShooterPlayerController_OnPingUp_Params
{
};

// Function ShooterGame.ShooterPlayerController.OnPingDown
struct AShooterPlayerController_OnPingDown_Params
{
};

// Function ShooterGame.ShooterPlayerController.OnLoadArkTributePlayersDataFinished
struct AShooterPlayerController_OnLoadArkTributePlayersDataFinished_Params
{
	bool                                               Success;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FArkTributePlayerData>               PlayersData;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                FailureResponseCode;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.OnLevelView
struct AShooterPlayerController_OnLevelView_Params
{
};

// Function ShooterGame.ShooterPlayerController.OnFirstSaveAfterCharacterDownloadFinished
struct AShooterPlayerController_OnFirstSaveAfterCharacterDownloadFinished_Params
{
	bool                                               Success;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.OnEmoteKey2Release
struct AShooterPlayerController_OnEmoteKey2Release_Params
{
};

// Function ShooterGame.ShooterPlayerController.OnEmoteKey2Press
struct AShooterPlayerController_OnEmoteKey2Press_Params
{
};

// Function ShooterGame.ShooterPlayerController.OnEmoteKey1Release
struct AShooterPlayerController_OnEmoteKey1Release_Params
{
};

// Function ShooterGame.ShooterPlayerController.OnEmoteKey1Press
struct AShooterPlayerController_OnEmoteKey1Press_Params
{
};

// Function ShooterGame.ShooterPlayerController.OnDisableSpectator
struct AShooterPlayerController_OnDisableSpectator_Params
{
};

// Function ShooterGame.ShooterPlayerController.OnCurrentCharacterAndItemsUploaded
struct AShooterPlayerController_OnCurrentCharacterAndItemsUploaded_Params
{
	bool                                               Success;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.OnConsumeItemFinished
struct AShooterPlayerController_OnConsumeItemFinished_Params
{
	bool                                               bSuccess;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint64_t                                           SteamID;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.OnClientReceiveStructuresPlacedOnFloor__DelegateSignature
struct AShooterPlayerController_OnClientReceiveStructuresPlacedOnFloor__DelegateSignature_Params
{
	class APrimalStructure*                            Structure;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class APrimalStructure*>                    StructuresPlacedOnFloor;                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function ShooterGame.ShooterPlayerController.OnArkTributeSaved
struct AShooterPlayerController_OnArkTributeSaved_Params
{
	bool                                               Success;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.OnAddItemFinished
struct AShooterPlayerController_OnAddItemFinished_Params
{
	bool                                               bSuccess;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<uint64_t>                                   SteamItemUserIDs;                                          // (Parm, ZeroConstructor)
	uint64_t                                           SteamID;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.OnAddedItemsToAllClustersInventory
struct AShooterPlayerController_OnAddedItemsToAllClustersInventory_Params
{
	bool                                               Success;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     UserId;                                                    // (Parm, ZeroConstructor)
	TArray<int>                                        MasterIndexNum;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function ShooterGame.ShooterPlayerController.NotifyTribeWarStatus
struct AShooterPlayerController_NotifyTribeWarStatus_Params
{
	struct FString                                     EnemyTribeString;                                          // (Parm, ZeroConstructor)
	int                                                StatusType;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.NotifyPawnBuffsOfDamageEvent
struct AShooterPlayerController_NotifyPawnBuffsOfDamageEvent_Params
{
	class AActor*                                      DamagedActor;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DamageAmount;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.ShooterPlayerController.LockEmote
struct AShooterPlayerController_LockEmote_Params
{
	struct FName                                       EmoteName;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.LinkedPlayerIDString
struct AShooterPlayerController_LinkedPlayerIDString_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.ShooterPlayerController.LevelView
struct AShooterPlayerController_LevelView_Params
{
};

// Function ShooterGame.ShooterPlayerController.LeaveMeAlone
struct AShooterPlayerController_LeaveMeAlone_Params
{
};

// Function ShooterGame.ShooterPlayerController.IsViewingInventoryUI
struct AShooterPlayerController_IsViewingInventoryUI_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.IsTribeAdmin
struct AShooterPlayerController_IsTribeAdmin_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.IsSpectator
struct AShooterPlayerController_IsSpectator_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.IsRemoteControlling
struct AShooterPlayerController_IsRemoteControlling_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.IsPlayerViewingPing
struct AShooterPlayerController_IsPlayerViewingPing_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FPingData                                   CheckPingData;                                             // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.IsPingedItem
struct AShooterPlayerController_IsPingedItem_Params
{
	class UPrimitiveComponent*                         PingComponent;                                             // (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.IsPawnAcknowledged
struct AShooterPlayerController_IsPawnAcknowledged_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.IsJumpInputPressed
struct AShooterPlayerController_IsJumpInputPressed_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.IsInTribe
struct AShooterPlayerController_IsInTribe_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.IsInputPressed
struct AShooterPlayerController_IsInputPressed_Params
{
	struct FName                                       InputName;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       GamepadInputName;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.IsHudVisible
struct AShooterPlayerController_IsHudVisible_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.IsGameInputAllowed
struct AShooterPlayerController_IsGameInputAllowed_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.IsFirstLocalPlayerOrLivingLocalPlayer
struct AShooterPlayerController_IsFirstLocalPlayerOrLivingLocalPlayer_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.IsFirstLocalPlayer
struct AShooterPlayerController_IsFirstLocalPlayer_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.IsEmoteUnlocked
struct AShooterPlayerController_IsEmoteUnlocked_Params
{
	struct FName                                       EmoteName;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.IsAtPersonalTameLimit
struct AShooterPlayerController_IsAtPersonalTameLimit_Params
{
	bool                                               bIsForStructure;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.IsAltFireInputPressed
struct AShooterPlayerController_IsAltFireInputPressed_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.InitPing
struct AShooterPlayerController_InitPing_Params
{
	struct FPingData                                   ForPingData;                                               // (Parm, OutParm, ContainsInstancedReference)
	struct FReplicatePingData                          InitFromData;                                              // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.InitCharacterPainting
struct AShooterPlayerController_InitCharacterPainting_Params
{
	class APrimalCharacter*                            Char;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.InfiniteStats
struct AShooterPlayerController_InfiniteStats_Params
{
};

// Function ShooterGame.ShooterPlayerController.HideRiders
struct AShooterPlayerController_HideRiders_Params
{
	bool                                               bDoHide;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.HasGodMode
struct AShooterPlayerController_HasGodMode_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.HasBestScoreForMission
struct AShooterPlayerController_HasBestScoreForMission_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.GlobalCommand
struct AShooterPlayerController_GlobalCommand_Params
{
	struct FString                                     Msg;                                                       // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.GiveSlotItemNum
struct AShooterPlayerController_GiveSlotItemNum_Params
{
	int                                                MasterIndexNum;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                slotNum;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                quantityOverride;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.GiveSlotItem
struct AShooterPlayerController_GiveSlotItem_Params
{
	struct FString                                     blueprintPath;                                             // (Parm, ZeroConstructor)
	int                                                slotNum;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                quantityOverride;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.GiveColors
struct AShooterPlayerController_GiveColors_Params
{
	int                                                Quantity;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.GetTamedDinosNearBy
struct AShooterPlayerController_GetTamedDinosNearBy_Params
{
	TArray<TWeakObjectPtr<class APrimalDinoCharacter>> Dinos;                                                     // (Parm, OutParm, ZeroConstructor)
	float                                              RangeRadius;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     NearLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.GetSubscribedAppIds
struct AShooterPlayerController_GetSubscribedAppIds_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.GetShooterHUD
struct AShooterPlayerController_GetShooterHUD_Params
{
	class AShooterHUD*                                 ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.GetPlayerCharacterName
struct AShooterPlayerController_GetPlayerCharacterName_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.ShooterPlayerController.GetPlayerCharacter
struct AShooterPlayerController_GetPlayerCharacter_Params
{
	class AShooterCharacter*                           ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.GetPingTitleForActor
struct AShooterPlayerController_GetPingTitleForActor_Params
{
	class AActor*                                      forActor;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.ShooterPlayerController.GetPingIconForComponent
struct AShooterPlayerController_GetPingIconForComponent_Params
{
	class UPrimitiveComponent*                         ForComponent;                                              // (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class UTexture2D*                                  ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.GetPersonalTameLimitString
struct AShooterPlayerController_GetPersonalTameLimitString_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.ShooterPlayerController.GetPawnInventoryComponent
struct AShooterPlayerController_GetPawnInventoryComponent_Params
{
	class UPrimalInventoryComponent*                   ReturnValue;                                               // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.GetNearbyPOIs
struct AShooterPlayerController_GetNearbyPOIs_Params
{
	TArray<struct FPointOfInterestData_ForCompanion>   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.ShooterPlayerController.GetLinkedPlayerID
struct AShooterPlayerController_GetLinkedPlayerID_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.GetInventoryUISelectedItemRemote
struct AShooterPlayerController_GetInventoryUISelectedItemRemote_Params
{
	class UPrimalItem*                                 ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.GetInventoryUISelectedItemLocal
struct AShooterPlayerController_GetInventoryUISelectedItemLocal_Params
{
	class UPrimalItem*                                 ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.GetHeldItemSlots
struct AShooterPlayerController_GetHeldItemSlots_Params
{
	TArray<unsigned char>                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.ShooterPlayerController.GetExplorerNoteEntry
struct AShooterPlayerController_GetExplorerNoteEntry_Params
{
	int                                                ExplorerNoteIndex;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FExplorerNoteEntry                          ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.ShooterPlayerController.GetControllerPlayer
struct AShooterPlayerController_GetControllerPlayer_Params
{
	class AShooterCharacter*                           ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.GetBestScoreForMission
struct AShooterPlayerController_GetBestScoreForMission_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLeaderboardRow                             ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.ShooterPlayerController.GetAllMatinees
struct AShooterPlayerController_GetAllMatinees_Params
{
};

// Function ShooterGame.ShooterPlayerController.GetAllAimedHarvestActors
struct AShooterPlayerController_GetAllAimedHarvestActors_Params
{
	float                                              MaxDistance;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                              OutHarvestActors;                                          // (Parm, OutParm, ZeroConstructor)
	TArray<class UActorComponent*>                     OutHarvestComponents;                                      // (Parm, OutParm, ZeroConstructor, ContainsInstancedReference)
	TArray<int>                                        OutHitBodyIndices;                                         // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.GetActiveMission
struct AShooterPlayerController_GetActiveMission_Params
{
	class AMissionType*                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.FormatTextWithKeyBindings
struct AShooterPlayerController_FormatTextWithKeyBindings_Params
{
	struct FString                                     InText;                                                    // (Parm, ZeroConstructor)
	bool                                               bIgnoreMarkup;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.ShooterPlayerController.FlushPrimalStats
struct AShooterPlayerController_FlushPrimalStats_Params
{
};

// Function ShooterGame.ShooterPlayerController.FlushLevelStreaming
struct AShooterPlayerController_FlushLevelStreaming_Params
{
};

// Function ShooterGame.ShooterPlayerController.FinalFlushLevelStreaming
struct AShooterPlayerController_FinalFlushLevelStreaming_Params
{
};

// Function ShooterGame.ShooterPlayerController.EnvQA
struct AShooterPlayerController_EnvQA_Params
{
};

// Function ShooterGame.ShooterPlayerController.EndWhistleSelection
struct AShooterPlayerController_EndWhistleSelection_Params
{
};

// Function ShooterGame.ShooterPlayerController.EndSurfaceCamera
struct AShooterPlayerController_EndSurfaceCamera_Params
{
};

// Function ShooterGame.ShooterPlayerController.EndEmoteSelection
struct AShooterPlayerController_EndEmoteSelection_Params
{
};

// Function ShooterGame.ShooterPlayerController.EndArkGamepadRightShoulder
struct AShooterPlayerController_EndArkGamepadRightShoulder_Params
{
};

// Function ShooterGame.ShooterPlayerController.EndArkGamepadLeftShoulder
struct AShooterPlayerController_EndArkGamepadLeftShoulder_Params
{
};

// Function ShooterGame.ShooterPlayerController.EndArkGamepadFaceButtonTop
struct AShooterPlayerController_EndArkGamepadFaceButtonTop_Params
{
};

// Function ShooterGame.ShooterPlayerController.EndArkGamepadFaceButtonRight
struct AShooterPlayerController_EndArkGamepadFaceButtonRight_Params
{
};

// Function ShooterGame.ShooterPlayerController.EndArkGamepadFaceButtonLeft
struct AShooterPlayerController_EndArkGamepadFaceButtonLeft_Params
{
};

// Function ShooterGame.ShooterPlayerController.EndArkGamepadFaceButtonBottom
struct AShooterPlayerController_EndArkGamepadFaceButtonBottom_Params
{
};

// Function ShooterGame.ShooterPlayerController.EndArkGamepadDpadRight
struct AShooterPlayerController_EndArkGamepadDpadRight_Params
{
};

// Function ShooterGame.ShooterPlayerController.EndArkGamepadDpadLeft
struct AShooterPlayerController_EndArkGamepadDpadLeft_Params
{
};

// Function ShooterGame.ShooterPlayerController.EndArkGamepadDpadDown
struct AShooterPlayerController_EndArkGamepadDpadDown_Params
{
};

// Function ShooterGame.ShooterPlayerController.EndArkGamepadBackButton
struct AShooterPlayerController_EndArkGamepadBackButton_Params
{
};

// Function ShooterGame.ShooterPlayerController.EndAArkGamepadDpadUp
struct AShooterPlayerController_EndAArkGamepadDpadUp_Params
{
};

// Function ShooterGame.ShooterPlayerController.EnableSpectator
struct AShooterPlayerController_EnableSpectator_Params
{
};

// Function ShooterGame.ShooterPlayerController.DoServerCheckUnfreeze
struct AShooterPlayerController_DoServerCheckUnfreeze_Params
{
};

// Function ShooterGame.ShooterPlayerController.DoPlayerCommand
struct AShooterPlayerController_DoPlayerCommand_Params
{
	struct FString                                     TheCommand;                                                // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.DoPingTrace
struct AShooterPlayerController_DoPingTrace_Params
{
	struct FReplicatePingData                          NewPing;                                                   // (Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                               bIsResponding;                                             // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.DoesPlayerOwnPing
struct AShooterPlayerController_DoesPlayerOwnPing_Params
{
	class AShooterPlayerController*                    PlayerPC;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint32_t                                           PingOwnerID;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.DoCrash
struct AShooterPlayerController_DoCrash_Params
{
};

// Function ShooterGame.ShooterPlayerController.DisableSurfaceCameraInterpolation
struct AShooterPlayerController_DisableSurfaceCameraInterpolation_Params
{
};

// Function ShooterGame.ShooterPlayerController.DisableEnemyInvisible
struct AShooterPlayerController_DisableEnemyInvisible_Params
{
};

// Function ShooterGame.ShooterPlayerController.DebugStructures
struct AShooterPlayerController_DebugStructures_Params
{
};

// Function ShooterGame.ShooterPlayerController.DebugCheckSeven
struct AShooterPlayerController_DebugCheckSeven_Params
{
	bool                                               bEnable;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.CopyWorldBuffStatus
struct AShooterPlayerController_CopyWorldBuffStatus_Params
{
};

// Function ShooterGame.ShooterPlayerController.CopyCoordsToClipboard
struct AShooterPlayerController_CopyCoordsToClipboard_Params
{
};

// Function ShooterGame.ShooterPlayerController.ConditonalEndGamepadModiferState
struct AShooterPlayerController_ConditonalEndGamepadModiferState_Params
{
};

// Function ShooterGame.ShooterPlayerController.ClientUsedActorItem
struct AShooterPlayerController_ClientUsedActorItem_Params
{
	class UPrimalInventoryComponent*                   forInventory;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ItemId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientUploadedDinosLoaded
struct AShooterPlayerController_ClientUploadedDinosLoaded_Params
{
	TArray<struct FARKTributeDinoListing>              UploadedDinosDataListings;                                 // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ClientUploadedCharactersLoaded
struct AShooterPlayerController_ClientUploadedCharactersLoaded_Params
{
	bool                                               Success;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FArkTributePlayerDataListing>        UploadedCharactersDataListings;                            // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ClientUploadDino
struct AShooterPlayerController_ClientUploadDino_Params
{
	class APrimalDinoCharacter*                        DownloadedDino;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientUpdateItemWeaponClipAmmo
struct AShooterPlayerController_ClientUpdateItemWeaponClipAmmo_Params
{
	class UPrimalInventoryComponent*                   forInventory;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ItemId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ammo;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientUpdateItemQuantity
struct AShooterPlayerController_ClientUpdateItemQuantity_Params
{
	class UPrimalInventoryComponent*                   forInventory;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ItemId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ItemQuantity;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientUpdateItemDurability
struct AShooterPlayerController_ClientUpdateItemDurability_Params
{
	class UPrimalInventoryComponent*                   forInventory;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ItemId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ItemDurability;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientUpdateItemCustomData
struct AShooterPlayerController_ClientUpdateItemCustomData_Params
{
	class UPrimalInventoryComponent*                   forInventory;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ItemId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FCustomItemData                             InData;                                                    // (Parm)
};

// Function ShooterGame.ShooterPlayerController.ClientUpdateInventoryCraftQueue
struct AShooterPlayerController_ClientUpdateInventoryCraftQueue_Params
{
	class UPrimalInventoryComponent*                   forInventory;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	TArray<struct FItemCraftQueueEntry>                CraftQueueEntries;                                         // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ClientUnlockExplorerNote
struct AShooterPlayerController_ClientUnlockExplorerNote_Params
{
	int                                                ExplorerNoteIndex;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               forceShowExplorerNoteUI;                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientUnlockAchievement
struct AShooterPlayerController_ClientUnlockAchievement_Params
{
	struct FString                                     AchievementID;                                             // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ClientTeleportSpectator
struct AShooterPlayerController_ClientTeleportSpectator_Params
{
	struct FVector                                     Location;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint64_t                                           PlayerId;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientSwapActorItems
struct AShooterPlayerController_ClientSwapActorItems_Params
{
	class UPrimalInventoryComponent*                   forInventory;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ItemID1;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ItemID2;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientStopLocalSound
struct AShooterPlayerController_ClientStopLocalSound_Params
{
	class USoundBase*                                  aSound;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientStartSurfaceCameraForPassenger
struct AShooterPlayerController_ClientStartSurfaceCameraForPassenger_Params
{
	float                                              Yaw;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Pitch;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Roll;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bInvertTurnInput;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientStartReceivingTribeLog
struct AShooterPlayerController_ClientStartReceivingTribeLog_Params
{
};

// Function ShooterGame.ShooterPlayerController.ClientStartReceivingActorItems
struct AShooterPlayerController_ClientStartReceivingActorItems_Params
{
	class UPrimalInventoryComponent*                   forInventory;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	bool                                               bEquippedItems;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientShowTransferredPlayerConfirmationDialog
struct AShooterPlayerController_ClientShowTransferredPlayerConfirmationDialog_Params
{
};

// Function ShooterGame.ShooterPlayerController.ClientShowSpawnUIForTransferringPlayer
struct AShooterPlayerController_ClientShowSpawnUIForTransferringPlayer_Params
{
	class UClass*                                      NewHUDClass;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint64_t                                           TransferingPlayerID;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bUseTimer;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientShowSpawnUI
struct AShooterPlayerController_ClientShowSpawnUI_Params
{
	float                                              Delay;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientShowPaintingUI
struct AShooterPlayerController_ClientShowPaintingUI_Params
{
	class UObject*                                     ObjectToPaint;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientShowLeaderboard
struct AShooterPlayerController_ClientShowLeaderboard_Params
{
	class UClass*                                      LeaderboardType;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FLeaderboardRow>                     LeaderboardRows;                                           // (ConstParm, Parm, ZeroConstructor)
	bool                                               bPlayerHasValidLatestScore;                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLeaderboardRow                             LatestPlayerScore;                                         // (Parm)
};

// Function ShooterGame.ShooterPlayerController.ClientShowCharacterCreationUI
struct AShooterPlayerController_ClientShowCharacterCreationUI_Params
{
	bool                                               bShowDownloadCharacter;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientSetSpectatorLocation
struct AShooterPlayerController_ClientSetSpectatorLocation_Params
{
	struct FVector                                     NewLocation;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientSetPersonalDinoTameCount
struct AShooterPlayerController_ClientSetPersonalDinoTameCount_Params
{
	int                                                NewPersonalDinoTameCount;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientSetHUDAndInitUIScenes
struct AShooterPlayerController_ClientSetHUDAndInitUIScenes_Params
{
	class UClass*                                      NewHUDClass;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientSetControlRotation
struct AShooterPlayerController_ClientSetControlRotation_Params
{
	struct FRotator                                    NewRotation;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientSetCanEnableCheats
struct AShooterPlayerController_ClientSetCanEnableCheats_Params
{
	bool                                               bIsPossible;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientSetArkTributeLimits
struct AShooterPlayerController_ClientSetArkTributeLimits_Params
{
	bool                                               LimitItems;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               LimitDinos;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               LimitCharacters;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                MaxItems;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                MaxDinos;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                MaxCharacters;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientServerSOTFNotificationCustom
struct AShooterPlayerController_ClientServerSOTFNotificationCustom_Params
{
	struct FString                                     MessageText;                                               // (Parm, ZeroConstructor)
	struct FLinearColor                                MessageColor;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DisplayScale;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DisplayTime;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTexture2D*                                  MessageIcon;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USoundBase*                                  SoundToPlay;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientServerSOTFNotification
struct AShooterPlayerController_ClientServerSOTFNotification_Params
{
	TEnumAsByte<ShooterGame_ESTOFNotificationType>     NotificationType;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     MessageText;                                               // (Parm, ZeroConstructor)
	struct FLinearColor                                MessageColor;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DisplayScale;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DisplayTime;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTexture2D*                                  MessageIcon;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USoundBase*                                  SoundToPlay;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bLastPlayer;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     TribeName;                                                 // (Parm, ZeroConstructor)
	TArray<struct FString>                             PlayerNames;                                               // (ConstParm, Parm, ZeroConstructor)
	struct FString                                     DeathReason;                                               // (Parm, ZeroConstructor)
	TArray<struct FPrimalPlayerCharacterConfigStructReplicated> DeadPlayersData;                                           // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ClientServerNotificationSingle
struct AShooterPlayerController_ClientServerNotificationSingle_Params
{
	struct FString                                     MessageText;                                               // (Parm, ZeroConstructor)
	struct FLinearColor                                MessageColor;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DisplayScale;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DisplayTime;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTexture2D*                                  MessageIcon;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USoundBase*                                  SoundToPlay;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                MessageTypeID;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientServerNotification
struct AShooterPlayerController_ClientServerNotification_Params
{
	struct FString                                     MessageText;                                               // (Parm, ZeroConstructor)
	struct FLinearColor                                MessageColor;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DisplayScale;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DisplayTime;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTexture2D*                                  MessageIcon;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USoundBase*                                  SoundToPlay;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientServerChatMessage
struct AShooterPlayerController_ClientServerChatMessage_Params
{
	struct FString                                     MessageText;                                               // (Parm, ZeroConstructor)
	struct FLinearColor                                MessageColor;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsBold;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientServerChatDirectMessage
struct AShooterPlayerController_ClientServerChatDirectMessage_Params
{
	struct FString                                     MessageText;                                               // (Parm, ZeroConstructor)
	struct FLinearColor                                MessageColor;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsBold;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientSendItemNetExecCommandToServer
struct AShooterPlayerController_ClientSendItemNetExecCommandToServer_Params
{
	class UPrimalItem*                                 ForItem;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       CommandName;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBPNetExecParams                            ExecParams;                                                // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               bIsReliable;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientSendFolderData
struct AShooterPlayerController_ClientSendFolderData_Params
{
	class UPrimalInventoryComponent*                   forInventory;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	TArray<struct FServerCustomFolder>                 ServerCustomFolder;                                        // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ClientSendArkDataPayloadEnd
struct AShooterPlayerController_ClientSendArkDataPayloadEnd_Params
{
	struct FGuid                                       ID;                                                        // (Parm, ZeroConstructor)
	TEnumAsByte<ShooterGame_EPrimalARKTributeDataType> ArkDataType;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint64_t                                           PlayerDataID;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientSendArkDataPayloadBegin
struct AShooterPlayerController_ClientSendArkDataPayloadBegin_Params
{
	struct FGuid                                       ID;                                                        // (Parm, ZeroConstructor)
	TEnumAsByte<ShooterGame_EPrimalARKTributeDataType> ArkDataType;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     DataClass;                                                 // (Parm, ZeroConstructor)
	struct FString                                     TagName;                                                   // (Parm, ZeroConstructor)
	struct FString                                     Name;                                                      // (Parm, ZeroConstructor)
	TArray<struct FString>                             DataStats;                                                 // (ConstParm, Parm, ZeroConstructor)
	uint32_t                                           ID1;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint32_t                                           ID2;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientSendArkDataPayload
struct AShooterPlayerController_ClientSendArkDataPayload_Params
{
	struct FGuid                                       ID;                                                        // (Parm, ZeroConstructor)
	TEnumAsByte<ShooterGame_EPrimalARKTributeDataType> ArkDataType;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<unsigned char>                              DataBytes;                                                 // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ClientRunLocalConsoleCommand
struct AShooterPlayerController_ClientRunLocalConsoleCommand_Params
{
	struct FString                                     Command;                                                   // (Parm, ZeroConstructor)
	bool                                               bWriteToLog;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientResetRespawningFlag
struct AShooterPlayerController_ClientResetRespawningFlag_Params
{
};

// Function ShooterGame.ShooterPlayerController.ClientRequestSpectatorLocationAndRotation
struct AShooterPlayerController_ClientRequestSpectatorLocationAndRotation_Params
{
};

// Function ShooterGame.ShooterPlayerController.ClientRemoveItemFromSteamInventory
struct AShooterPlayerController_ClientRemoveItemFromSteamInventory_Params
{
	TArray<uint64_t>                                   ItemSteamUserID;                                           // (ConstParm, Parm, ZeroConstructor)
	int                                                Quantity;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientRemoveItemFromArk
struct AShooterPlayerController_ClientRemoveItemFromArk_Params
{
	class UPrimalInventoryComponent*                   forInventory;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  RemovedItemID;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientRemoveActorItem
struct AShooterPlayerController_ClientRemoveActorItem_Params
{
	class UPrimalInventoryComponent*                   forInventory;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ItemId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               showHUDMessage;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientRefreshSteamInventoryFinished
struct AShooterPlayerController_ClientRefreshSteamInventoryFinished_Params
{
	bool                                               bSuccess;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientReceiveTribeLog
struct AShooterPlayerController_ClientReceiveTribeLog_Params
{
	struct FString                                     LogString;                                                 // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ClientReceiveTamingInfoList
struct AShooterPlayerController_ClientReceiveTamingInfoList_Params
{
	TArray<struct FTamingDinoInfo>                     InfoList;                                                  // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ClientReceiveStructuresPlacedOnFloor
struct AShooterPlayerController_ClientReceiveStructuresPlacedOnFloor_Params
{
	TArray<struct FStructuresOnFloor>                  Structures;                                                // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ClientReceiveOriginalHairColor
struct AShooterPlayerController_ClientReceiveOriginalHairColor_Params
{
	struct FLinearColor                                HairColor;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientReceiveMyTribeOnlineList
struct AShooterPlayerController_ClientReceiveMyTribeOnlineList_Params
{
	TArray<uint32_t>                                   OnlinePlayerIDs;                                           // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ClientReceiveDinoCharStats
struct AShooterPlayerController_ClientReceiveDinoCharStats_Params
{
	class APrimalDinoCharacter*                        theDinoChar;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<float>                                      CurValues;                                                 // (ConstParm, Parm, ZeroConstructor)
	TArray<float>                                      MaxValues;                                                 // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ClientReceiveDinoAncestors
struct AShooterPlayerController_ClientReceiveDinoAncestors_Params
{
	class APrimalDinoCharacter*                        ForDino;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FDinoAncestorsEntry>                 DinoAncestors;                                             // (ConstParm, Parm, ZeroConstructor)
	TArray<struct FDinoAncestorsEntry>                 DinoAncestorsMale;                                         // (ConstParm, Parm, ZeroConstructor)
	int                                                RandomMutationsFemale;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                RandomMutationsMale;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientReceiveActiveMissionTags
struct AShooterPlayerController_ClientReceiveActiveMissionTags_Params
{
	TArray<struct FName>                               MissionTags;                                               // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ClientProcessItemNetExecCommandUnreliableBP
struct AShooterPlayerController_ClientProcessItemNetExecCommandUnreliableBP_Params
{
	class UPrimalInventoryComponent*                   forInventory;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ForItemID;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsEquippedItem;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       CommandName;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBPNetExecParams                            ExecParams;                                                // (Parm)
};

// Function ShooterGame.ShooterPlayerController.ClientProcessItemNetExecCommandBP
struct AShooterPlayerController_ClientProcessItemNetExecCommandBP_Params
{
	class UPrimalInventoryComponent*                   forInventory;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ForItemID;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsEquippedItem;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       CommandName;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBPNetExecParams                            ExecParams;                                                // (Parm)
};

// Function ShooterGame.ShooterPlayerController.ClientPlayLocalSound
struct AShooterPlayerController_ClientPlayLocalSound_Params
{
	class USoundBase*                                  aSound;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bAttach;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientPlayerIsValidToDownload
struct AShooterPlayerController_ClientPlayerIsValidToDownload_Params
{
	bool                                               bIsValid;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FArkTributePlayerData                       PlayerData;                                                // (ConstParm, Parm)
};

// Function ShooterGame.ShooterPlayerController.ClientOnStartDownloadTransferredPlayerCharacter
struct AShooterPlayerController_ClientOnStartDownloadTransferredPlayerCharacter_Params
{
};

// Function ShooterGame.ShooterPlayerController.ClientOnEndDownloadTransferredPlayerCharacter
struct AShooterPlayerController_ClientOnEndDownloadTransferredPlayerCharacter_Params
{
	bool                                               Success;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                FailureResponseCode;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     FailureResponseMessage;                                    // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ClientOnDropAllNotReadyForUploadItemsFinished
struct AShooterPlayerController_ClientOnDropAllNotReadyForUploadItemsFinished_Params
{
};

// Function ShooterGame.ShooterPlayerController.ClientOnCurrentCharacterAndItemsUploaded
struct AShooterPlayerController_ClientOnCurrentCharacterAndItemsUploaded_Params
{
	uint64_t                                           TransferringPlayerDataId;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientOnAddedItemsToAllClustersInventory
struct AShooterPlayerController_ClientOnAddedItemsToAllClustersInventory_Params
{
	bool                                               Success;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     UserId;                                                    // (Parm, ZeroConstructor)
	TArray<int>                                        MasterIndexNum;                                            // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ClientNotifyUnlockHairStyleOrEmote
struct AShooterPlayerController_ClientNotifyUnlockHairStyleOrEmote_Params
{
	struct FName                                       HairstyleOrEmoteName;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientNotifyUnlockedEngram
struct AShooterPlayerController_ClientNotifyUnlockedEngram_Params
{
	class UClass*                                      ItemClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bTekGram;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientNotifyUnlockedAllExplorerNotes
struct AShooterPlayerController_ClientNotifyUnlockedAllExplorerNotes_Params
{
};

// Function ShooterGame.ShooterPlayerController.ClientNotifyTribeXP
struct AShooterPlayerController_ClientNotifyTribeXP_Params
{
	float                                              HowMuch;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientNotifyTorpidityIncrease
struct AShooterPlayerController_ClientNotifyTorpidityIncrease_Params
{
};

// Function ShooterGame.ShooterPlayerController.ClientNotifyTamedDino
struct AShooterPlayerController_ClientNotifyTamedDino_Params
{
	class UClass*                                      DinoClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientNotifySummonedDino
struct AShooterPlayerController_ClientNotifySummonedDino_Params
{
	class UClass*                                      DinoClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientNotifyShowProfileRequest
struct AShooterPlayerController_ClientNotifyShowProfileRequest_Params
{
	struct FUniqueNetIdRepl                            ProfileId;                                                 // (Parm)
};

// Function ShooterGame.ShooterPlayerController.ClientNotifyRemotePlayerDeath
struct AShooterPlayerController_ClientNotifyRemotePlayerDeath_Params
{
	struct FString                                     PlayerName;                                                // (Parm, ZeroConstructor)
	struct FString                                     AttackerName;                                              // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ClientNotifyPlayerKill
struct AShooterPlayerController_ClientNotifyPlayerKill_Params
{
	class AActor*                                      PlayerPawn;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                       VictimPawn;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientNotifyPlayerDeathReason
struct AShooterPlayerController_ClientNotifyPlayerDeathReason_Params
{
	struct FString                                     ReasonString;                                              // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ClientNotifyPlayerDeath
struct AShooterPlayerController_ClientNotifyPlayerDeath_Params
{
	class APawn*                                       InstigatingPawn;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientNotifyPaintFinished
struct AShooterPlayerController_ClientNotifyPaintFinished_Params
{
	bool                                               bSuccess;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientNotifyMessageOfTheDay
struct AShooterPlayerController_ClientNotifyMessageOfTheDay_Params
{
	struct FString                                     Message;                                                   // (Parm, ZeroConstructor)
	float                                              timeToDisplay;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientNotifyListenServerOutOfRange
struct AShooterPlayerController_ClientNotifyListenServerOutOfRange_Params
{
};

// Function ShooterGame.ShooterPlayerController.ClientNotifyLevelUp
struct AShooterPlayerController_ClientNotifyLevelUp_Params
{
	class APrimalCharacter*                            forChar;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                NewLevel;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientNotifyHitHarvest
struct AShooterPlayerController_ClientNotifyHitHarvest_Params
{
};

// Function ShooterGame.ShooterPlayerController.ClientNotifyEditText
struct AShooterPlayerController_ClientNotifyEditText_Params
{
	class UClass*                                      ForObjectClass;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint32_t                                           ExtraID1;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint32_t                                           ExtraID2;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                     ForObject;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientNotifyDinoKill
struct AShooterPlayerController_ClientNotifyDinoKill_Params
{
	class APrimalDinoCharacter*                        InstigatingPawn;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                       VictimPawn;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientNotifyDinoDeath
struct AShooterPlayerController_ClientNotifyDinoDeath_Params
{
	struct FString                                     DinoName;                                                  // (Parm, ZeroConstructor)
	struct FString                                     AttackerName;                                              // (Parm, ZeroConstructor)
	bool                                               bIsVehicle;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientNotifyDefeatedDino
struct AShooterPlayerController_ClientNotifyDefeatedDino_Params
{
	class UClass*                                      DinoClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientNotifyCantHitHarvest
struct AShooterPlayerController_ClientNotifyCantHitHarvest_Params
{
};

// Function ShooterGame.ShooterPlayerController.ClientNotifyCantHarvest
struct AShooterPlayerController_ClientNotifyCantHarvest_Params
{
};

// Function ShooterGame.ShooterPlayerController.ClientNotifyAdmin
struct AShooterPlayerController_ClientNotifyAdmin_Params
{
};

// Function ShooterGame.ShooterPlayerController.ClientLoadArkItems
struct AShooterPlayerController_ClientLoadArkItems_Params
{
	class UPrimalInventoryComponent*                   forInventory;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	TArray<struct FItemNetInfo>                        itemInfos;                                                 // (ConstParm, Parm, ZeroConstructor)
	bool                                               bClear;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bFinalBatch;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientInsertActorItem
struct AShooterPlayerController_ClientInsertActorItem_Params
{
	class UPrimalInventoryComponent*                   forInventory;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetInfo                                ItemInfo;                                                  // (Parm)
	struct FItemNetID                                  InsertAfterItemID;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientHUDNotificationTypeParams
struct AShooterPlayerController_ClientHUDNotificationTypeParams_Params
{
	int                                                MessageType;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                MessageType1;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                MessageParam2;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                     ObjectParam1;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientGetMessageOfTheDay
struct AShooterPlayerController_ClientGetMessageOfTheDay_Params
{
	struct FString                                     Message;                                                   // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ClientFinishedReceivingActorItems
struct AShooterPlayerController_ClientFinishedReceivingActorItems_Params
{
	class UPrimalInventoryComponent*                   forInventory;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	bool                                               bEquippedItems;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientFinishedLoadArkItems
struct AShooterPlayerController_ClientFinishedLoadArkItems_Params
{
	class UPrimalInventoryComponent*                   forInventory;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientFailedToAddItemFromArkInventory
struct AShooterPlayerController_ClientFailedToAddItemFromArkInventory_Params
{
};

// Function ShooterGame.ShooterPlayerController.ClientFailedRemoveSaddle
struct AShooterPlayerController_ClientFailedRemoveSaddle_Params
{
};

// Function ShooterGame.ShooterPlayerController.ClientEndReceivingTribeLog
struct AShooterPlayerController_ClientEndReceivingTribeLog_Params
{
};

// Function ShooterGame.ShooterPlayerController.ClientDrawBrushComponentInGame
struct AShooterPlayerController_ClientDrawBrushComponentInGame_Params
{
	class UBrushComponent*                             BrushComponent;                                            // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	float                                              Duration;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDrawSolidBox;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientDownloadPlayerCharacterRequestFinished
struct AShooterPlayerController_ClientDownloadPlayerCharacterRequestFinished_Params
{
	bool                                               Success;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientDownloadDinoRequestFinished
struct AShooterPlayerController_ClientDownloadDinoRequestFinished_Params
{
	bool                                               Success;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientDoMultiUse
struct AShooterPlayerController_ClientDoMultiUse_Params
{
	class UObject*                                     ForObject;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                UseIndex;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientDataSetRPC
struct AShooterPlayerController_ClientDataSetRPC_Params
{
	TArray<struct FDataSet>                            dataSets;                                                  // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ClientCollectedAchievementItem
struct AShooterPlayerController_ClientCollectedAchievementItem_Params
{
	class UClass*                                      ItemClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientChatMessage
struct AShooterPlayerController_ClientChatMessage_Params
{
	struct FChatMessage                                Chat;                                                      // (Parm)
};

// Function ShooterGame.ShooterPlayerController.ClientAddItemToArk
struct AShooterPlayerController_ClientAddItemToArk_Params
{
	class UPrimalInventoryComponent*                   forInventory;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetInfo                                ItemInfo;                                                  // (Parm)
	bool                                               bFromLoad;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientAddFolderToInventoryComponent
struct AShooterPlayerController_ClientAddFolderToInventoryComponent_Params
{
	class UPrimalInventoryComponent*                   forInventory;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FString                                     NewCustomFolderName;                                       // (Parm, ZeroConstructor)
	int                                                InventoryCompType;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientAddFloatingText
struct AShooterPlayerController_ClientAddFloatingText_Params
{
	struct FVector_NetQuantize                         AtLocation;                                                // (Parm)
	struct FString                                     FloatingTextString;                                        // (Parm, ZeroConstructor)
	struct FColor                                      FloatingTextColor;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ScaleX;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ScaleY;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              TextLifeSpan;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     TextVelocity;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MinScale;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              FadeInTime;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              FadeOutTime;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientAddFloatingDamageText
struct AShooterPlayerController_ClientAddFloatingDamageText_Params
{
	struct FVector_NetQuantize                         AtLocation;                                                // (Parm)
	int                                                DamageAmount;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                FromTeamID;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.ClientAddActorItemToFolder
struct AShooterPlayerController_ClientAddActorItemToFolder_Params
{
	class UPrimalInventoryComponent*                   forInventory;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetInfo                                ItemInfo;                                                  // (Parm)
	bool                                               bEquipItem;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ShowHUDNotification;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ToFolder;                                                  // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.ClientAddActorItem
struct AShooterPlayerController_ClientAddActorItem_Params
{
	class UPrimalInventoryComponent*                   forInventory;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FItemNetInfo                                ItemInfo;                                                  // (Parm)
	bool                                               bEquipItem;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ShowHUDNotification;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.Client_ReceivePingResponse
struct AShooterPlayerController_Client_ReceivePingResponse_Params
{
	struct FReplicatePingData                          ResponseData;                                              // (ConstParm, Parm, ContainsInstancedReference)
	class AShooterCharacter*                           RespondingPlayer;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.Client_ReceivePing
struct AShooterPlayerController_Client_ReceivePing_Params
{
	struct FReplicatePingData                          ReceivedPingData;                                          // (ConstParm, Parm, ContainsInstancedReference)
};

// Function ShooterGame.ShooterPlayerController.Client_ReceiveBuffFromDayCycle
struct AShooterPlayerController_Client_ReceiveBuffFromDayCycle_Params
{
	class UClass*                                      GiveBuffClass;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ADayCycleManager*                            FromDayCycle;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.CheckRequestSpectator
struct AShooterPlayerController_CheckRequestSpectator_Params
{
	struct FString                                     InSpectatorPass;                                           // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.CheckForPlayerInventory
struct AShooterPlayerController_CheckForPlayerInventory_Params
{
};

// Function ShooterGame.ShooterPlayerController.CheckforOrbiting
struct AShooterPlayerController_CheckforOrbiting_Params
{
};

// Function ShooterGame.ShooterPlayerController.CheckCheatsPassword
struct AShooterPlayerController_CheckCheatsPassword_Params
{
	struct FString                                     pass;                                                      // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.CheckCanEnableCheats
struct AShooterPlayerController_CheckCanEnableCheats_Params
{
};

// Function ShooterGame.ShooterPlayerController.Cheat
struct AShooterPlayerController_Cheat_Params
{
	struct FString                                     Msg;                                                       // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterPlayerController.CCC
struct AShooterPlayerController_CCC_Params
{
};

// Function ShooterGame.ShooterPlayerController.CanPingPlayer
struct AShooterPlayerController_CanPingPlayer_Params
{
	class AShooterCharacter*                           ForPlayer;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.CanDoPlayerCharacterInput
struct AShooterPlayerController_CanDoPlayerCharacterInput_Params
{
	bool                                               bIgnoreCurrentWeapon;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bWeaponForcesMountedWeaponry;                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.BPServerHandleDataSetRPC
struct AShooterPlayerController_BPServerHandleDataSetRPC_Params
{
	TArray<struct FDataSet>                            dataSets;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function ShooterGame.ShooterPlayerController.BPClientUnlockExplorerNote
struct AShooterPlayerController_BPClientUnlockExplorerNote_Params
{
	int                                                ExplorerNoteIndex;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               forceShowExplorerNoteUI;                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.BPClientHandleDataSetRPC
struct AShooterPlayerController_BPClientHandleDataSetRPC_Params
{
	TArray<struct FDataSet>                            dataSets;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function ShooterGame.ShooterPlayerController.BPCheckClientPossession
struct AShooterPlayerController_BPCheckClientPossession_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.BPCheckCanDinoSpawnFromLocation
struct AShooterPlayerController_BPCheckCanDinoSpawnFromLocation_Params
{
	class UClass*                                      DinoClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     CheckLocation;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.BPActivatedMultiUseSelection
struct AShooterPlayerController_BPActivatedMultiUseSelection_Params
{
};

// Function ShooterGame.ShooterPlayerController.AutoCycle
struct AShooterPlayerController_AutoCycle_Params
{
	float                                              Duration;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.AttemptTransferRedownload
struct AShooterPlayerController_AttemptTransferRedownload_Params
{
};

// Function ShooterGame.ShooterPlayerController.AsyncLoadInventory
struct AShooterPlayerController_AsyncLoadInventory_Params
{
};

// Function ShooterGame.ShooterPlayerController.AllowTribeGroupPermission
struct AShooterPlayerController_AllowTribeGroupPermission_Params
{
	TEnumAsByte<ShooterGame_ETribeGroupPermission>     TribeGroupPermission;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                     OnObject;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerController.AdminCheat
struct AShooterPlayerController_AdminCheat_Params
{
	struct FString                                     Msg;                                                       // (Parm, ZeroConstructor)
};

// Function ShooterGame.BeamWeaponComponent.UpdateBeamVisuals
struct UBeamWeaponComponent_UpdateBeamVisuals_Params
{
};

// Function ShooterGame.BeamWeaponComponent.StopFiring
struct UBeamWeaponComponent_StopFiring_Params
{
};

// Function ShooterGame.BeamWeaponComponent.StartFiring
struct UBeamWeaponComponent_StartFiring_Params
{
};

// Function ShooterGame.BeamWeaponComponent.StartCharging
struct UBeamWeaponComponent_StartCharging_Params
{
};

// Function ShooterGame.BeamWeaponComponent.SetTarget
struct UBeamWeaponComponent_SetTarget_Params
{
	class AActor*                                      Target;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.BeamWeaponComponent.GetTarget
struct UBeamWeaponComponent_GetTarget_Params
{
	class AActor*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.BeamWeaponComponent.GetParticleSystem
struct UBeamWeaponComponent_GetParticleSystem_Params
{
	class UParticleSystemComponent*                    ReturnValue;                                               // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.BeamWeaponComponent.GetLastStoppedFiringTime
struct UBeamWeaponComponent_GetLastStoppedFiringTime_Params
{
	double                                             ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.BeamWeaponComponent.GetIsFiring
struct UBeamWeaponComponent_GetIsFiring_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.BeamWeaponComponent.GetIsCharging
struct UBeamWeaponComponent_GetIsCharging_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.BeamWeaponComponent.GetImpactParticleSystem
struct UBeamWeaponComponent_GetImpactParticleSystem_Params
{
	class UParticleSystemComponent*                    ReturnValue;                                               // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.BeamWeaponComponent.GetChargeupParticleSystem
struct UBeamWeaponComponent_GetChargeupParticleSystem_Params
{
	class UParticleSystemComponent*                    ReturnValue;                                               // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.BeamWeaponComponent.GetBeamEndLocation
struct UBeamWeaponComponent_GetBeamEndLocation_Params
{
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.BeamWeaponComponent.BeamStoppedFiringEvent__DelegateSignature
struct UBeamWeaponComponent_BeamStoppedFiringEvent__DelegateSignature_Params
{
	class UBeamWeaponComponent*                        BeamComponent;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.BeamWeaponController.StopFiringBeams
struct UBeamWeaponController_StopFiringBeams_Params
{
};

// Function ShooterGame.BeamWeaponController.StartChargingBeams
struct UBeamWeaponController_StartChargingBeams_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.BeamWeaponController.StartChargingBeam
struct UBeamWeaponController_StartChargingBeam_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.BeamWeaponController.OnBeamStoppedFiringHandler
struct UBeamWeaponController_OnBeamStoppedFiringHandler_Params
{
	class UBeamWeaponComponent*                        BeamWeaponComp;                                            // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.BeamWeaponController.GetBeamWeaponComponents
struct UBeamWeaponController_GetBeamWeaponComponents_Params
{
	TArray<class UBeamWeaponComponent*>                ReturnValue;                                               // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference)
};

// Function ShooterGame.BeamWeaponController.FireBeams
struct UBeamWeaponController_FireBeams_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.BeamWeaponController.FireBeam
struct UBeamWeaponController_FireBeam_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.BeamWeaponController.BeamsStoppedFiringEvent__DelegateSignature
struct UBeamWeaponController_BeamsStoppedFiringEvent__DelegateSignature_Params
{
};

// Function ShooterGame.BiomeZoneVolume.OnEndOverlap
struct ABiomeZoneVolume_OnEndOverlap_Params
{
	class AActor*                                      Actor;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.BiomeZoneVolume.OnBeginOverlap
struct ABiomeZoneVolume_OnBeginOverlap_Params
{
	class AActor*                                      Actor;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.BiomeZoneVolume.IsPointUnderwater
struct ABiomeZoneVolume_IsPointUnderwater_Params
{
	class UWorld*                                      ForWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     AtPoint;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bFastPath;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MinimumWaterHeight;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIgnoreVacuumStructures;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIgnorePainCausingVolumes;                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.BiomeZoneVolume.IsPointInVacuumBase
struct ABiomeZoneVolume_IsPointInVacuumBase_Params
{
	class UWorld*                                      ForWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     AtPoint;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.BiomeZoneVolume.GetPhysicsVolumeAtLocation
struct ABiomeZoneVolume_GetPhysicsVolumeAtLocation_Params
{
	class UWorld*                                      ForWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     AtPoint;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bFastPath;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APhysicsVolume*                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.BiomeZoneVolume.GetBiomeZoneVolume
struct ABiomeZoneVolume_GetBiomeZoneVolume_Params
{
	class UWorld*                                      World;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Location;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	class ABiomeZoneVolume*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.BiomeZoneVolume.GetAllBiomeZones
struct ABiomeZoneVolume_GetAllBiomeZones_Params
{
	class UWorld*                                      World;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class ABiomeZoneVolume*>                    BiomeZones;                                                // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.BiomeZoneVolumeEffectUtility.SpawnRelevantEffect
struct UBiomeZoneVolumeEffectUtility_SpawnRelevantEffect_Params
{
	TArray<struct FBiomeZoneVolumeEffect>              Effects;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class AActor*                                      AttachTo;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Location;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               bIsImpactActor;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.BiomeZoneVolumeEffectUtility.SpawnImpactEffect
struct UBiomeZoneVolumeEffectUtility_SpawnImpactEffect_Params
{
	class UWorld*                                      World;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                                  HitResult;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FBiomeZoneImpactEffect                      ImpactEffect;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
	class AActor*                                      Owner;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.BiomeZoneVolumeEffectUtility.GetRelevantEffect
struct UBiomeZoneVolumeEffectUtility_GetRelevantEffect_Params
{
	TArray<struct FBiomeZoneVolumeEffect>              Effects;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class AActor*                                      SourceActor;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ForLocation;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               bIsImpactActor;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBiomeZoneVolumeEffect                      ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.TerrainGenerator.VoroniModule
struct UTerrainGenerator_VoroniModule_Params
{
	int                                                Seed;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Frequency;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              displacement;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.TurbulenceModule
struct UTerrainGenerator_TurbulenceModule_Params
{
	class UGeneratorModule*                            Source;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                Seed;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Frequency;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Power;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Roughness;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.ToFloatMap
struct UTerrainGenerator_ToFloatMap_Params
{
	class UFloatMap*                                   Destination;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            Module;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               IsTemporary;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFloatMap*                                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.ThresholdModule
struct UTerrainGenerator_ThresholdModule_Params
{
	class UGeneratorModule*                            Source;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Power;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Range;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Threshold;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.TerraceModule
struct UTerrainGenerator_TerraceModule_Params
{
	class UGeneratorModule*                            Source;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<float>                                      Control;                                                   // (Parm, ZeroConstructor)
	class UGeneratorModule*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.Spread
struct UTerrainGenerator_Spread_Params
{
	class UFloatMap*                                   Destination;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFloatMap*                                   Source;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                SpreadIteration;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              SpreadStrength;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFloatMap*                                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.SpawnActorOnLandscape
struct UTerrainGenerator_SpawnActorOnLandscape_Params
{
	class UClass*                                      ActorClass;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Position;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    Rotation;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Scale;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     OffsetVector;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.SpawnActor
struct UTerrainGenerator_SpawnActor_Params
{
	class UClass*                                      ActorClass;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Position;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    Rotation;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Scale;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.SlopeModule
struct UTerrainGenerator_SlopeModule_Params
{
	class UGeneratorModule*                            Source;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.ShrinkMask
struct UTerrainGenerator_ShrinkMask_Params
{
	class UFloatMap*                                   Source;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFloatMap*                                   Destination;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                Iterations;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFloatMap*                                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.SetAsTemporary
struct UTerrainGenerator_SetAsTemporary_Params
{
	class UFloatMap*                                   Destination;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFloatMap*                                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.SelectModule
struct UTerrainGenerator_SelectModule_Params
{
	class UGeneratorModule*                            First;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            Second;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            Control;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Lower;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Upper;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              EdgeFalloff;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.ScaleFloatMap
struct UTerrainGenerator_ScaleFloatMap_Params
{
	class UFloatMap*                                   Source;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Scale;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bClearSourceData;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFloatMap*                                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.ScaleBiasModule
struct UTerrainGenerator_ScaleBiasModule_Params
{
	class UGeneratorModule*                            Source;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Scale;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Bias;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.Scale
struct UTerrainGenerator_Scale_Params
{
	class UFloatMap*                                   Source;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Scale;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bClearSourceData;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFloatMap*                                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.SampleFloatMapModule
struct UTerrainGenerator_SampleFloatMapModule_Params
{
	class UFloatMap*                                   Source;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.RidgedMultiModule
struct UTerrainGenerator_RidgedMultiModule_Params
{
	int                                                Seed;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Frequency;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OctaveCount;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Lacunarity;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.Resize
struct UTerrainGenerator_Resize_Params
{
	class UFloatMap*                                   Source;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                NewSize;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bClearSourceData;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFloatMap*                                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.PreGenerateTerrain
struct UTerrainGenerator_PreGenerateTerrain_Params
{
};

// Function ShooterGame.TerrainGenerator.PowerModule
struct UTerrainGenerator_PowerModule_Params
{
	class UGeneratorModule*                            First;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            Second;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.PostCreateTerrain
struct UTerrainGenerator_PostCreateTerrain_Params
{
};

// Function ShooterGame.TerrainGenerator.Populate
struct UTerrainGenerator_Populate_Params
{
	TArray<struct FObjectListItem>                     ObjectsList;                                               // (Parm, ZeroConstructor)
	class UObjectMap*                                  Destination;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            Probability;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MinDistance;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              FixedZ;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                MaximumCount;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                Step;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               SingleThread;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObjectMap*                                  ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.PointSampleFloatMapModule
struct UTerrainGenerator_PointSampleFloatMapModule_Params
{
	class UFloatMap*                                   Source;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.Pixelate
struct UTerrainGenerator_Pixelate_Params
{
	class UFloatMap*                                   Source;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                CellSize;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFloatMap*                                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.PerlinModule
struct UTerrainGenerator_PerlinModule_Params
{
	int                                                Seed;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Frequency;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OctaveCount;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Persistence;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Lacunarity;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.OneMinusModule
struct UTerrainGenerator_OneMinusModule_Params
{
	class UGeneratorModule*                            Source;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.Normalize
struct UTerrainGenerator_Normalize_Params
{
	class UFloatMap*                                   Source;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFloatMap*                                   Destination;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Minimum;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Maximum;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFloatMap*                                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.MultiplyModule
struct UTerrainGenerator_MultiplyModule_Params
{
	class UGeneratorModule*                            First;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            Second;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.MinModule
struct UTerrainGenerator_MinModule_Params
{
	class UGeneratorModule*                            First;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            Second;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.MergeObjectMaps
struct UTerrainGenerator_MergeObjectMaps_Params
{
	class UObjectMap*                                  First;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObjectMap*                                  Second;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                CellsToClear;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObjectMap*                                  ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.MaxModule
struct UTerrainGenerator_MaxModule_Params
{
	class UGeneratorModule*                            First;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            Second;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.LinearModule
struct UTerrainGenerator_LinearModule_Params
{
	class UGeneratorModule*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.LinearCurveModule
struct UTerrainGenerator_LinearCurveModule_Params
{
	class UGeneratorModule*                            First;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<float>                                      Input;                                                     // (Parm, ZeroConstructor)
	TArray<float>                                      Output;                                                    // (Parm, ZeroConstructor)
	class UGeneratorModule*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.LerpModule
struct UTerrainGenerator_LerpModule_Params
{
	class UGeneratorModule*                            First;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            Second;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            Alpha;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.InvertModule
struct UTerrainGenerator_InvertModule_Params
{
	class UGeneratorModule*                            Source;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.GetPositionRelativeToTerrian
struct UTerrainGenerator_GetPositionRelativeToTerrian_Params
{
	struct FVector                                     Location;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.GetLocationOnLandscape
struct UTerrainGenerator_GetLocationOnLandscape_Params
{
	struct FVector                                     Position;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.GenerateTerrain
struct UTerrainGenerator_GenerateTerrain_Params
{
	class UFloatMap*                                   HeightMap;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FString>                             WeightmapsNames;                                           // (Parm, OutParm, ZeroConstructor)
	TArray<class UByteMap*>                            WeightMaps;                                                // (Parm, OutParm, ZeroConstructor)
	class UObjectMap*                                  ObjectMap;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObjectMap*                                  BiomeMap;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObjectMap*                                  NPCMap;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInterface*                          LandscapeMaterial;                                         // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObjectMap*                                  PerComponentMaterialOverride;                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObjectMap*                                  SupplyDropsMap;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObjectMap*                                  SupplyDropsPointsMap;                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FBiomeMiniMap>                       BiomesMiniMap;                                             // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.TerrainGenerator.GenerateHeightMapFromMask
struct UTerrainGenerator_GenerateHeightMapFromMask_Params
{
	class UFloatMap*                                   Source;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFloatMap*                                   Destination;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                Iterations;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFloatMap*                                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.FloodFill
struct UTerrainGenerator_FloodFill_Params
{
	class UFloatMap*                                   Source;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              X;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Y;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Value;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.FillObjectMap
struct UTerrainGenerator_FillObjectMap_Params
{
	TArray<struct FObjectListItem>                     ObjectsList;                                               // (Parm, ZeroConstructor)
	class UObjectMap*                                  Destination;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            Probability;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MinDistance;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              FixedZ;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                MaximumCount;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                Step;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               SingleThread;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObjectMap*                                  ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.ExponentModule
struct UTerrainGenerator_ExponentModule_Params
{
	class UGeneratorModule*                            Source;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Exponent;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.EvaluateModules
struct UTerrainGenerator_EvaluateModules_Params
{
	class UFloatMap*                                   Destination;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            Module;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFloatMap*                                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.Erosion
struct UTerrainGenerator_Erosion_Params
{
	class UFloatMap*                                   HeightMap;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFloatMap*                                   Destination;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                IterationStep;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              SoilCarryCapacity;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              WaterEvaporationSpeed;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ErosionSpeed;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DepositionSpeed;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DirectionInertia;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MinimumSlope;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Gravity;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MinHeightForErosion;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DepositionStrength;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ErosionStrength;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFloatMap*                                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.EnlargeMask
struct UTerrainGenerator_EnlargeMask_Params
{
	class UFloatMap*                                   Source;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFloatMap*                                   Destination;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                Iterations;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFloatMap*                                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.DisplaceModule
struct UTerrainGenerator_DisplaceModule_Params
{
	class UGeneratorModule*                            Source;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            X;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            Y;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            Z;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.DeleteTemporaryMaps
struct UTerrainGenerator_DeleteTemporaryMaps_Params
{
};

// Function ShooterGame.TerrainGenerator.CurveModule
struct UTerrainGenerator_CurveModule_Params
{
	class UGeneratorModule*                            Source;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<float>                                      Input;                                                     // (Parm, ZeroConstructor)
	TArray<float>                                      Output;                                                    // (Parm, ZeroConstructor)
	class UGeneratorModule*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.CreateWater
struct UTerrainGenerator_CreateWater_Params
{
	class UClass*                                      WaterPlane;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      WaterFloorPlane;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              SurfaceLevel;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              FloorLevel;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.CreateObjectMapWithSize
struct UTerrainGenerator_CreateObjectMapWithSize_Params
{
	int                                                Width;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                Height;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObjectMap*                                  ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.CreateObjectMap
struct UTerrainGenerator_CreateObjectMap_Params
{
	int                                                NewSizeX;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                NewSizeY;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObjectMap*                                  ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.CreateFloatMap
struct UTerrainGenerator_CreateFloatMap_Params
{
	int                                                SizeX;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                SizeY;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               IsTemporary;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFloatMap*                                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.Copy
struct UTerrainGenerator_Copy_Params
{
	class UFloatMap*                                   Source;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFloatMap*                                   Destination;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFloatMap*                                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.ConvertFloatMapToByteMap
struct UTerrainGenerator_ConvertFloatMapToByteMap_Params
{
	class UFloatMap*                                   FloatMap;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bClearFloatMap;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UByteMap*                                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.ConstModule
struct UTerrainGenerator_ConstModule_Params
{
	float                                              Value;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.ClampModule
struct UTerrainGenerator_ClampModule_Params
{
	class UGeneratorModule*                            Source;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Lower;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Upper;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.CircularMaskModule
struct UTerrainGenerator_CircularMaskModule_Params
{
	struct FVector2D                                   Center;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              CircleRadius;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Exp;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                Seed;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Frequency;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OctaveCount;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Persistence;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Lacunarity;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              NoiseAmplitude;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.Cavity
struct UTerrainGenerator_Cavity_Params
{
	class UFloatMap*                                   Destination;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFloatMap*                                   Source;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               Concave;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Intensity;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Threshold;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                SpreadIteration;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              SpreadStrength;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFloatMap*                                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.Blur
struct UTerrainGenerator_Blur_Params
{
	class UFloatMap*                                   First;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bHorizontal;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bVertical;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               additive;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Intensity;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFloatMap*                                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.BlendModule
struct UTerrainGenerator_BlendModule_Params
{
	class UGeneratorModule*                            First;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            Second;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            Control;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.BillowModule
struct UTerrainGenerator_BillowModule_Params
{
	int                                                Seed;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Frequency;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OctaveCount;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Persistence;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Lacunarity;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.AddModule
struct UTerrainGenerator_AddModule_Params
{
	class UGeneratorModule*                            First;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            Second;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainGenerator.AbsModule
struct UTerrainGenerator_AbsModule_Params
{
	class UGeneratorModule*                            Source;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGeneratorModule*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ByteMap.Init
struct UByteMap_Init_Params
{
	int                                                InSizeX;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                InSizeY;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ByteMap.GetSizeY
struct UByteMap_GetSizeY_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ByteMap.GetSizeX
struct UByteMap_GetSizeX_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ByteMap.GetSize
struct UByteMap_GetSize_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ByteMap.Delete
struct UByteMap_Delete_Params
{
};

// Function ShooterGame.CharacterViewPanelWidget.RefreshPreviewWidget
struct UCharacterViewPanelWidget_RefreshPreviewWidget_Params
{
};

// Function ShooterGame.ContextMenu.SetActiveItem
struct UContextMenu_SetActiveItem_Params
{
	class UContextMenuItem*                            Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu.PopulateContextMenuCustom__DelegateSignature
struct UContextMenu_PopulateContextMenuCustom__DelegateSignature_Params
{
	class UContextMenu*                                ContextMenu;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       MenuName;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu.PopulateContextMenu__DelegateSignature
struct UContextMenu_PopulateContextMenu__DelegateSignature_Params
{
	class UContextMenu*                                ContextMenu;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu.GetActiveItem
struct UContextMenu_GetActiveItem_Params
{
	class UContextMenuItem*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu.CloseMenu
struct UContextMenu_CloseMenu_Params
{
	bool                                               CloseParents;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu.ActiveMenuItemChanged__DelegateSignature
struct UContextMenu_ActiveMenuItemChanged__DelegateSignature_Params
{
	class UContextMenu*                                menu;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UContextMenuItem*                            newItem;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UContextMenuItem*                            oldItem;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenuItem.SetSubmenuEnabled
struct UContextMenuItem_SetSubmenuEnabled_Params
{
	bool                                               bEnabled;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenuItem.SetShortcutKey
struct UContextMenuItem_SetShortcutKey_Params
{
	int                                                ComboKeyIdx;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FKey                                        Key;                                                       // (Parm)
};

// Function ShooterGame.ContextMenuItem.SetJustification
struct UContextMenuItem_SetJustification_Params
{
	TEnumAsByte<Slate_ETextJustify>                    Value;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenuItem.SetCaption
struct UContextMenuItem_SetCaption_Params
{
	struct FText                                       caption;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.ContextMenuItem.OnGetContextMenuContent
struct UContextMenuItem_OnGetContextMenuContent_Params
{
	class UWidget*                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenuItem.OnButtonClickedEventObjectCustom__DelegateSignature
struct UContextMenuItem_OnButtonClickedEventObjectCustom__DelegateSignature_Params
{
	class UContextMenuItem*                            ContextMenuItem;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       SelectedOption;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenuItem.OnButtonClickedEventObject__DelegateSignature
struct UContextMenuItem_OnButtonClickedEventObject__DelegateSignature_Params
{
	class UContextMenuItem*                            ContextMenuItem;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenuItem.OnButtonClicked
struct UContextMenuItem_OnButtonClicked_Params
{
};

// Function ShooterGame.ContextMenuItem.OnActiveMenuItemChanged
struct UContextMenuItem_OnActiveMenuItemChanged_Params
{
	class UContextMenu*                                ContextMenu;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UContextMenuItem*                            NewActiveItem;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UContextMenuItem*                            OldActiveItem;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenuItem.GetSubmenuEnabled
struct UContextMenuItem_GetSubmenuEnabled_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenuItem.GetSubmenuContentCustom__DelegateSignature
struct UContextMenuItem_GetSubmenuContentCustom__DelegateSignature_Params
{
	class UContextMenuItem*                            ContextMenuItem;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       SelectedOption;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	class UContextMenu*                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenuItem.GetSubmenuContent__DelegateSignature
struct UContextMenuItem_GetSubmenuContent__DelegateSignature_Params
{
	class UContextMenuItem*                            ContextMenuItem;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UContextMenu*                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenuItem.GetJustification
struct UContextMenuItem_GetJustification_Params
{
	TEnumAsByte<Slate_ETextJustify>                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenuItem.GetCaption
struct UContextMenuItem_GetCaption_Params
{
	struct FText                                       ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.ContextMenu_DinoGroupEntry.PopulateRootMenu
struct UContextMenu_DinoGroupEntry_PopulateRootMenu_Params
{
	class UContextMenu*                                ContextMenu;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_DinoGroupEntry.HandleActionSetGroup
struct UContextMenu_DinoGroupEntry_HandleActionSetGroup_Params
{
	class UContextMenuItem*                            Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_DinoGroupEntry.HandleActionRemoveDino
struct UContextMenu_DinoGroupEntry_HandleActionRemoveDino_Params
{
	class UContextMenuItem*                            Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_DinoGroupEntry.HandleActionRemoveClass
struct UContextMenu_DinoGroupEntry_HandleActionRemoveClass_Params
{
	class UContextMenuItem*                            Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_InventorySort.PopulateRootMenu
struct UContextMenu_InventorySort_PopulateRootMenu_Params
{
	class UContextMenu*                                ContextMenu;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_InventorySort.HandleActionWeight
struct UContextMenu_InventorySort_HandleActionWeight_Params
{
	class UContextMenuItem*                            Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_InventorySort.HandleActionUnsort
struct UContextMenu_InventorySort_HandleActionUnsort_Params
{
	class UContextMenuItem*                            Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_InventorySort.HandleActionSpoilTimer
struct UContextMenu_InventorySort_HandleActionSpoilTimer_Params
{
	class UContextMenuItem*                            Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_InventorySort.HandleActionAlphabetical
struct UContextMenu_InventorySort_HandleActionAlphabetical_Params
{
	class UContextMenuItem*                            Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.PopulateSubmenuSplitStack
struct UContextMenu_PrimalItem_PopulateSubmenuSplitStack_Params
{
	class UContextMenu*                                ContextMenu;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.PopulateSubmenuSplitAmount
struct UContextMenu_PrimalItem_PopulateSubmenuSplitAmount_Params
{
	class UContextMenu*                                ContextMenu;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.PopulateSubmenuRemove
struct UContextMenu_PrimalItem_PopulateSubmenuRemove_Params
{
	class UContextMenu*                                ContextMenu;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.PopulateSubmenuCustom
struct UContextMenu_PrimalItem_PopulateSubmenuCustom_Params
{
	class UContextMenu*                                ContextMenu;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       ContextItemName;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.PopulateSubmenuCraftAmount
struct UContextMenu_PrimalItem_PopulateSubmenuCraftAmount_Params
{
	class UContextMenu*                                ContextMenu;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.PopulateRootMenu
struct UContextMenu_PrimalItem_PopulateRootMenu_Params
{
	class UContextMenu*                                ContextMenu;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.PopulateFolderMenu
struct UContextMenu_PrimalItem_PopulateFolderMenu_Params
{
	class UContextMenu*                                ContextMenu;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.PopulateCraftMenu
struct UContextMenu_PrimalItem_PopulateCraftMenu_Params
{
	class UContextMenu*                                ContextMenu;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.HandleSplitAmountValueCommit
struct UContextMenu_PrimalItem_HandleSplitAmountValueCommit_Params
{
	class UContextMenuItem_Spinner*                    Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                InValue;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<SlateCore_ETextCommit>                 CommitMethod;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.HandleOnGetSubmenuSplitStackContent
struct UContextMenu_PrimalItem_HandleOnGetSubmenuSplitStackContent_Params
{
	class UContextMenuItem*                            MenuItem;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UContextMenu*                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.HandleOnGetSubmenuSplitAmountContent
struct UContextMenu_PrimalItem_HandleOnGetSubmenuSplitAmountContent_Params
{
	class UContextMenuItem*                            MenuItem;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UContextMenu*                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.HandleOnGetSubmenuRemoveContent
struct UContextMenu_PrimalItem_HandleOnGetSubmenuRemoveContent_Params
{
	class UContextMenuItem*                            MenuItem;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UContextMenu*                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.HandleOnGetSubmenuCustomContent
struct UContextMenu_PrimalItem_HandleOnGetSubmenuCustomContent_Params
{
	class UContextMenuItem*                            MenuItem;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       ContextItemName;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	class UContextMenu*                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.HandleOnGetSubmenuCraftContent
struct UContextMenu_PrimalItem_HandleOnGetSubmenuCraftContent_Params
{
	class UContextMenuItem*                            MenuItem;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UContextMenu*                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.HandleOnGetSubmenuCraftAmountContent
struct UContextMenu_PrimalItem_HandleOnGetSubmenuCraftAmountContent_Params
{
	class UContextMenuItem*                            MenuItem;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UContextMenu*                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.HandleCraftAmountValueCommit
struct UContextMenu_PrimalItem_HandleCraftAmountValueCommit_Params
{
	class UContextMenuItem_Spinner*                    Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                InValue;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<SlateCore_ETextCommit>                 CommitMethod;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.HandleActionUse
struct UContextMenu_PrimalItem_HandleActionUse_Params
{
	class UContextMenuItem*                            Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.HandleActionUnequip
struct UContextMenu_PrimalItem_HandleActionUnequip_Params
{
	class UContextMenuItem*                            Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.HandleActionTransfer
struct UContextMenu_PrimalItem_HandleActionTransfer_Params
{
	class UContextMenuItem*                            Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.HandleActionSplitOne
struct UContextMenu_PrimalItem_HandleActionSplitOne_Params
{
	class UContextMenuItem*                            Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.HandleActionSplitHalf
struct UContextMenu_PrimalItem_HandleActionSplitHalf_Params
{
	class UContextMenuItem*                            Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.HandleActionSplitAmount
struct UContextMenu_PrimalItem_HandleActionSplitAmount_Params
{
	class UContextMenuItem*                            Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.HandleActionSplitAll
struct UContextMenu_PrimalItem_HandleActionSplitAll_Params
{
	class UContextMenuItem*                            Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.HandleActionRepair
struct UContextMenu_PrimalItem_HandleActionRepair_Params
{
	class UContextMenuItem*                            Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.HandleActionRenameFolder
struct UContextMenu_PrimalItem_HandleActionRenameFolder_Params
{
	class UContextMenuItem*                            Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.HandleActionRemoveSkin
struct UContextMenu_PrimalItem_HandleActionRemoveSkin_Params
{
	class UContextMenuItem*                            Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.HandleActionRemoveAmmo
struct UContextMenu_PrimalItem_HandleActionRemoveAmmo_Params
{
	class UContextMenuItem*                            Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.HandleActionRemoveAccessory
struct UContextMenu_PrimalItem_HandleActionRemoveAccessory_Params
{
	class UContextMenuItem*                            Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.HandleActionFavorite
struct UContextMenu_PrimalItem_HandleActionFavorite_Params
{
	class UContextMenuItem*                            Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.HandleActionEquipAllInFolder
struct UContextMenu_PrimalItem_HandleActionEquipAllInFolder_Params
{
	class UContextMenuItem*                            Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.HandleActionEquip
struct UContextMenu_PrimalItem_HandleActionEquip_Params
{
	class UContextMenuItem*                            Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.HandleActionDiscard
struct UContextMenu_PrimalItem_HandleActionDiscard_Params
{
	class UContextMenuItem*                            Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.HandleActionDeleteFolder
struct UContextMenu_PrimalItem_HandleActionDeleteFolder_Params
{
	class UContextMenuItem*                            Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.HandleActionCustom
struct UContextMenu_PrimalItem_HandleActionCustom_Params
{
	class UContextMenuItem*                            Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       ContextItemName;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.HandleActionCraftOne
struct UContextMenu_PrimalItem_HandleActionCraftOne_Params
{
	class UContextMenuItem*                            Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.HandleActionCraftAmount
struct UContextMenu_PrimalItem_HandleActionCraftAmount_Params
{
	class UContextMenuItem*                            Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenu_PrimalItem.HandleActionCraftAll
struct UContextMenu_PrimalItem_HandleActionCraftAll_Params
{
	class UContextMenuItem*                            Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenuItem_Spinner.SetValue
struct UContextMenuItem_Spinner_SetValue_Params
{
	int                                                newValue;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenuItem_Spinner.SetMinValue
struct UContextMenuItem_Spinner_SetMinValue_Params
{
	int                                                newValue;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenuItem_Spinner.SetMaxValue
struct UContextMenuItem_Spinner_SetMaxValue_Params
{
	int                                                newValue;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenuItem_Spinner.OnSpinnerValueCommitedEvent__DelegateSignature
struct UContextMenuItem_Spinner_OnSpinnerValueCommitedEvent__DelegateSignature_Params
{
	class UContextMenuItem_Spinner*                    Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                InValue;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<SlateCore_ETextCommit>                 CommitMethod;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenuItem_Spinner.HandleOnTextCommited
struct UContextMenuItem_Spinner_HandleOnTextCommited_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<SlateCore_ETextCommit>                 CommitMethod;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenuItem_Spinner.HandleOnTextChanged
struct UContextMenuItem_Spinner_HandleOnTextChanged_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.ContextMenuItem_Spinner.HandleOnButtonIncreaseClicked
struct UContextMenuItem_Spinner_HandleOnButtonIncreaseClicked_Params
{
};

// Function ShooterGame.ContextMenuItem_Spinner.HandleOnButtonDecreaseClicked
struct UContextMenuItem_Spinner_HandleOnButtonDecreaseClicked_Params
{
};

// Function ShooterGame.ContextMenuItem_Spinner.GetValue
struct UContextMenuItem_Spinner_GetValue_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenuItem_Spinner.GetMinValue
struct UContextMenuItem_Spinner_GetMinValue_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ContextMenuItem_Spinner.GetMaxValue
struct UContextMenuItem_Spinner_GetMaxValue_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomActorList.DestroyActors
struct ACustomActorList_DestroyActors_Params
{
};

// Function ShooterGame.PointOfInterestManagerList.ScanForAllValidPointsOfInterest
struct APointOfInterestManagerList_ScanForAllValidPointsOfInterest_Params
{
};

// Function ShooterGame.PointOfInterestManagerList.ReConstructPointsInList
struct APointOfInterestManagerList_ReConstructPointsInList_Params
{
};

// Function ShooterGame.PointOfInterestManagerList.PopulatePointsActorList
struct APointOfInterestManagerList_PopulatePointsActorList_Params
{
};

// Function ShooterGame.PointOfInterestManagerList.ManualAddPointOfInterestActor
struct APointOfInterestManagerList_ManualAddPointOfInterestActor_Params
{
	class AActor*                                      AddActor;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PointOfInterestManagerList.CheckListForTagCollisions
struct APointOfInterestManagerList_CheckListForTagCollisions_Params
{
	class AActor*                                      ForSpecificActor;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomButtonWidget.SetToggledState
struct UCustomButtonWidget_SetToggledState_Params
{
	bool                                               IsToggled;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomButtonWidget.SetIsToggleButton
struct UCustomButtonWidget_SetIsToggleButton_Params
{
	bool                                               IsToggle;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomButtonWidget.GetToggledState
struct UCustomButtonWidget_GetToggledState_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomButtonWidget.GetIsToggleButton
struct UCustomButtonWidget_GetIsToggleButton_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomCanvasWidget.OnDraggedClickedEventObject__DelegateSignature
struct UCustomCanvasWidget_OnDraggedClickedEventObject__DelegateSignature_Params
{
	class UWidget*                                     draggeddWidget;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.DataListEntryButton.OnGetContextMenuContent
struct UDataListEntryButton_OnGetContextMenuContent_Params
{
	class UWidget*                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.DataListEntryButton.ClickedSecondaryButton
struct UDataListEntryButton_ClickedSecondaryButton_Params
{
	class UWidget*                                     clickedWidget;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.DataListEntryButton.ClickedButton
struct UDataListEntryButton_ClickedButton_Params
{
	class UWidget*                                     clickedWidget;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.DataListEntryButton_PrimalItem.HandleOnContextMenuIsOpenChanged
struct UDataListEntryButton_PrimalItem_HandleOnContextMenuIsOpenChanged_Params
{
	bool                                               bIsOpen;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.DamageVolumeBase.OnEndOverlap
struct ADamageVolumeBase_OnEndOverlap_Params
{
	class AActor*                                      Actor;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.DamageVolumeBase.OnBeginOverlap
struct ADamageVolumeBase_OnBeginOverlap_Params
{
	class AActor*                                      Actor;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.DataListEntryWidget.OnDraggedClickedEventObject
struct UDataListEntryWidget_OnDraggedClickedEventObject_Params
{
	class UWidget*                                     draggeddWidget;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.DataListEntryWidget.InitializeMeDefaults
struct UDataListEntryWidget_InitializeMeDefaults_Params
{
};

// Function ShooterGame.DataListEntryWidget.GetDataListButton
struct UDataListEntryWidget_GetDataListButton_Params
{
	class UDataListEntryButton*                        ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.DayCycleManager.ShooterCharacterSpawned
struct ADayCycleManager_ShooterCharacterSpawned_Params
{
	class AShooterCharacter*                           TheShooterCharacter;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.DayCycleManager.ShooterCharacterPossessed
struct ADayCycleManager_ShooterCharacterPossessed_Params
{
	class AShooterCharacter*                           TheShooterCharacter;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.DayCycleManager.IsRainingAtLocation
struct ADayCycleManager_IsRainingAtLocation_Params
{
	struct FVector                                     Location;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.DayCycleManager.IsDaytime
struct ADayCycleManager_IsDaytime_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.DayCycleManager.GetWindAtLocation
struct ADayCycleManager_GetWindAtLocation_Params
{
	struct FVector                                     AtLocation;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalCharacter*                            ForPrimalCharacter;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.DayCycleManager.GetWaterLineStartZ
struct ADayCycleManager_GetWaterLineStartZ_Params
{
	struct FVector                                     AtLocation;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.DayCycleManager.GetTemperatureAtLocation
struct ADayCycleManager_GetTemperatureAtLocation_Params
{
	struct FVector                                     AtLocation;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalCharacter*                            ForPrimalCharacter;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.DayCycleManager.GetPreventBuffClassesInDayCycleLevel
struct ADayCycleManager_GetPreventBuffClassesInDayCycleLevel_Params
{
	TArray<class UClass*>                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.DayCycleManager.GetDeepWaterStartZ
struct ADayCycleManager_GetDeepWaterStartZ_Params
{
	struct FVector                                     AtLocation;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.DayCycleManager.GetDayNumberString
struct ADayCycleManager_GetDayNumberString_Params
{
	bool                                               bIncludeDayString;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.DayCycleManager.DayCycleManagerStartNighttime__DelegateSignature
struct ADayCycleManager_DayCycleManagerStartNighttime__DelegateSignature_Params
{
};

// Function ShooterGame.DayCycleManager.DayCycleManagerStartDaytime__DelegateSignature
struct ADayCycleManager_DayCycleManagerStartDaytime__DelegateSignature_Params
{
};

// Function ShooterGame.DayCycleManager.DayCycleManagerOnDayChange__DelegateSignature
struct ADayCycleManager_DayCycleManagerOnDayChange__DelegateSignature_Params
{
	int                                                DayNumber;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.DayCycleManager.BPPostDrawSpawnMap
struct ADayCycleManager_BPPostDrawSpawnMap_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UCanvas*                                     ItemCanvas;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                                   ItemCanvasSize;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.DayCycleManager.BPOverrideItemAutoDecreaseDurability
struct ADayCycleManager_BPOverrideItemAutoDecreaseDurability_Params
{
	class UPrimalItem*                                 anItem;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.DayCycleManager.BPOverrideGameStateMatineePlayRate
struct ADayCycleManager_BPOverrideGameStateMatineePlayRate_Params
{
	class AActor*                                      forMatinee;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InPlayRate;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.DayCycleManager.BPOnDCMCheat
struct ADayCycleManager_BPOnDCMCheat_Params
{
	struct FName                                       CheatName;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Value;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.DayCycleManager.BPGetAdditionalMapMarkers
struct ADayCycleManager_BPGetAdditionalMapMarkers_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FPrimalMapMarkerEntryData>           ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.DayCycleManager.BPAllowSpawningCrate
struct ADayCycleManager_BPAllowSpawningCrate_Params
{
	class UClass*                                      CrateType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.DayCycleManager.BPAdjustTemperature
struct ADayCycleManager_BPAdjustTemperature_Params
{
	float                                              TemperatureIn;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABiomeZoneVolume*                            BiomeZoneVolume;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     AtLocation;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	class APrimalCharacter*                            ForPrimalCharacter;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.DayCycleManager.AttemptWeaponFiring
struct ADayCycleManager_AttemptWeaponFiring_Params
{
	class AShooterWeapon*                              theWeapon;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.DayCycleManager.AllowWeaponFiring
struct ADayCycleManager_AllowWeaponFiring_Params
{
	class AActor*                                      theWeaponOrStructure;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.DayCycleManager.AllowStructureActivation
struct ADayCycleManager_AllowStructureActivation_Params
{
	class APrimalStructure*                            theStructure;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.DayCycleManager.AdjustStructureItemInsulation
struct ADayCycleManager_AdjustStructureItemInsulation_Params
{
	class AShooterCharacter*                           forCharacter;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 ForPrimalItem;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_EPrimalItemStat>           TypeInsulation;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              insulationValue;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.DestroyedMeshActor.SetNoCollisionProfile
struct ADestroyedMeshActor_SetNoCollisionProfile_Params
{
};

// Function ShooterGame.DroppedItem.ResetLifeSpan
struct ADroppedItem_ResetLifeSpan_Params
{
	float                                              NewLifeSpan;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.DroppedItem.KeepPhysicsActiveForDuration
struct ADroppedItem_KeepPhysicsActiveForDuration_Params
{
	float                                              Duration;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.DroppedItem.IsAllowedToPickupItem
struct ADroppedItem_IsAllowedToPickupItem_Params
{
	class APlayerController*                           PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.DroppedItem.FreezePhysics
struct ADroppedItem_FreezePhysics_Params
{
};

// Function ShooterGame.DroppedItem.ForceSleep
struct ADroppedItem_ForceSleep_Params
{
};

// Function ShooterGame.DroppedItem.BPOnItemPickedUp
struct ADroppedItem_BPOnItemPickedUp_Params
{
	class APlayerController*                           ByPC;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 InventoryItem;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.DroppedItemEgg.NetSpawnDinoEmitter
struct ADroppedItemEgg_NetSpawnDinoEmitter_Params
{
};

// Function ShooterGame.DroppedItemTorch.OnRep_FireIsOn
struct ADroppedItemTorch_OnRep_FireIsOn_Params
{
};

// Function ShooterGame.DroppedItemMission.GetOwnerMission
struct ADroppedItemMission_GetOwnerMission_Params
{
	class AMissionType*                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FadingDestructibleActor.SetupFade
struct AFadingDestructibleActor_SetupFade_Params
{
};

// Function ShooterGame.FloatMap.Init
struct UFloatMap_Init_Params
{
	int                                                InSizeX;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                InSizeY;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FloatMap.GetSizeY
struct UFloatMap_GetSizeY_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FloatMap.GetSizeX
struct UFloatMap_GetSizeX_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FloatMap.GetSize
struct UFloatMap_GetSize_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FloatMap.Delete
struct UFloatMap_Delete_Params
{
};

// Function ShooterGame.FlockingBehavior.UpdateFlockComponentLocations_ParticleBoids
struct UFlockingBehavior_UpdateFlockComponentLocations_ParticleBoids_Params
{
	TArray<struct FBoid>                               BoidArray;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class UParticleSystemComponent*>            ComponentArray;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference)
};

// Function ShooterGame.FlockingBehavior.UpdateFlockComponentLocations
struct UFlockingBehavior_UpdateFlockComponentLocations_Params
{
	TArray<struct FBoid>                               BoidArray;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class UStaticMeshComponent*>                ComponentArray;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference)
};

// Function ShooterGame.FlockingBehavior.UpdateBoidComponentLocation
struct UFlockingBehavior_UpdateBoidComponentLocation_Params
{
	struct FBoid                                       ThisBoid;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
	class USceneComponent*                             Comp;                                                      // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FlockingBehavior.TickPersistentFlockData
struct UFlockingBehavior_TickPersistentFlockData_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFlockPersistentData                        InOutFlockData;                                            // (Parm, OutParm, ReferenceParm)
	TArray<struct FBoid>                               BoidArray;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                MaxNumTracesPerSecond;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDrawDebug;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FlockingBehavior.SetAvoidanceAreaTransform
struct UFlockingBehavior_SetAvoidanceAreaTransform_Params
{
	struct FAvoidanceArea                              InOutAvoidanceArea;                                        // (Parm, OutParm, ReferenceParm)
	struct UObject_FTransform                          NewTransform;                                              // (Parm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FlockingBehavior.SetAvoidanceAreaArrayTransform
struct UFlockingBehavior_SetAvoidanceAreaArrayTransform_Params
{
	TArray<struct FAvoidanceArea>                      InOutAvoidanceAreas;                                       // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct UObject_FTransform                          NewTransform;                                              // (Parm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FlockingBehavior.MakeIndexArray
struct UFlockingBehavior_MakeIndexArray_Params
{
	int                                                StartIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                NumIndices;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int>                                        OutIndexArray;                                             // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.FlockingBehavior.IsPointInsideAvoidanceArea
struct UFlockingBehavior_IsPointInsideAvoidanceArea_Params
{
	struct FAvoidanceArea                              Area;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector                                     WorldLocation;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FlockingBehavior.IsPointInsideAnyAvoidanceArea
struct UFlockingBehavior_IsPointInsideAnyAvoidanceArea_Params
{
	TArray<struct FAvoidanceArea>                      Areas;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector                                     WorldLocation;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FlockingBehavior.InterpVectorArrayToSphere
struct UFlockingBehavior_InterpVectorArrayToSphere_Params
{
	TArray<struct FVector>                             InOutVectorArray;                                          // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector                                     Origin;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                NumRows;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_ESimpleCurve>              LatitudeDistribution;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InterpSpeedMin;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InterpSpeedMax;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FlockingBehavior.InterpVectorArrayToRandom
struct UFlockingBehavior_InterpVectorArrayToRandom_Params
{
	TArray<struct FVector>                             InOutVectorArray;                                          // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector                                     Origin;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MinRadius;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MaxRadius;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                RandomSeed;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InterpSpeedMin;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InterpSpeedMax;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FlockingBehavior.InterpVectorArrayToGrid
struct UFlockingBehavior_InterpVectorArrayToGrid_Params
{
	TArray<struct FVector>                             InOutVectorArray;                                          // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector                                     Origin;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    Rotation;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              HorizSize;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              VertSize;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                NumRows;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                NumCols;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InterpSpeedMin;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InterpSpeedMax;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FlockingBehavior.InterpVectorArrayToCircle
struct UFlockingBehavior_InterpVectorArrayToCircle_Params
{
	TArray<struct FVector>                             InOutVectorArray;                                          // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector                                     Origin;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    Rotation;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InterpSpeedMin;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InterpSpeedMax;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FlockingBehavior.InterpVectorArray
struct UFlockingBehavior_InterpVectorArray_Params
{
	TArray<struct FVector>                             InOutVectorArray;                                          // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FVector>                             RelativeTargetLocations;                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector                                     Origin;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    Rotation;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InterpSpeedMin;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InterpSpeedMax;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FlockingBehavior.InterpBoidArrayToSphere
struct UFlockingBehavior_InterpBoidArrayToSphere_Params
{
	TArray<struct FBoid>                               InOutBoidArray;                                            // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct UObject_FTransform                          WorldTransform;                                            // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                NumRows;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_ESimpleCurve>              LatitudeDistribution;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InterpSpeedMin;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InterpSpeedMax;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FlockingBehavior.InterpBoidArrayToRandom
struct UFlockingBehavior_InterpBoidArrayToRandom_Params
{
	TArray<struct FBoid>                               InOutBoidArray;                                            // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct UObject_FTransform                          WorldTransform;                                            // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              MinRadius;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MaxRadius;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                RandomSeed;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InterpSpeedMin;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InterpSpeedMax;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FlockingBehavior.InterpBoidArrayToGrid
struct UFlockingBehavior_InterpBoidArrayToGrid_Params
{
	TArray<struct FBoid>                               InOutBoidArray;                                            // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct UObject_FTransform                          WorldTransform;                                            // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    Rotation;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              HorizSize;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              VertSize;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                NumRows;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                NumCols;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InterpSpeedMin;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InterpSpeedMax;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FlockingBehavior.InterpBoidArrayToCircle
struct UFlockingBehavior_InterpBoidArrayToCircle_Params
{
	TArray<struct FBoid>                               InOutBoidArray;                                            // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct UObject_FTransform                          WorldTransform;                                            // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    CircleRotation;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InterpSpeedMin;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InterpSpeedMax;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FlockingBehavior.InterpBoidArray
struct UFlockingBehavior_InterpBoidArray_Params
{
	TArray<struct FBoid>                               InOutBoidArray;                                            // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FBoid>                               RelativeTargetLocations;                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct UObject_FTransform                          WorldTransform;                                            // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    Rotation;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InterpSpeedMin;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InterpSpeedMax;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FlockingBehavior.GetFlockRadius
struct UFlockingBehavior_GetFlockRadius_Params
{
	TArray<struct FBoid>                               BoidArray;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector                                     FlockCentroid;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               bIgnoreLeaders;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FlockingBehavior.GetFlockMembersOfType
struct UFlockingBehavior_GetFlockMembersOfType_Params
{
	TArray<struct FBoid>                               BoidArray;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<ShooterGame_EBoidType>                 BoidType;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int>                                        OutIndices;                                                // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.FlockingBehavior.GetFlockCentroid
struct UFlockingBehavior_GetFlockCentroid_Params
{
	TArray<struct FBoid>                               BoidArray;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bIgnoreLeaders;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FlockingBehavior.GetClosestSurfacePointOnAvoidanceArea
struct UFlockingBehavior_GetClosestSurfacePointOnAvoidanceArea_Params
{
	struct FAvoidanceArea                              Area;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector                                     Loc;                                                       // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FlockingBehavior.GetAvoidanceDirection
struct UFlockingBehavior_GetAvoidanceDirection_Params
{
	struct FAvoidanceArea                              Area;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector                                     CurrentLoc;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     CurrentDir;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FlockingBehavior.GetAvoidanceAreaWorldLocation
struct UFlockingBehavior_GetAvoidanceAreaWorldLocation_Params
{
	struct FAvoidanceArea                              Area;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FlockingBehavior.FlockTickSphereFormation
struct UFlockingBehavior_FlockTickSphereFormation_Params
{
	TArray<struct FBoid>                               InOutBoidArray;                                            // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FFlockPersistentData                        InOutFlockData;                                            // (Parm, OutParm, ReferenceParm)
	bool                                               bUseBoidIndexWhitelist;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int>                                        BoidIndexWhitelist;                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct UObject_FTransform                          WorldTransform;                                            // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FBoidBehavior                               Behavior;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              MinInterpDistance;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                NumRows;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_ESimpleCurve>              LatitudeDistribution;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              HelixSpeed;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FlockingBehavior.FlockTickLeaders
struct UFlockingBehavior_FlockTickLeaders_Params
{
	TArray<struct FBoid>                               InOutBoidArray;                                            // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FFlockPersistentData                        InOutFlockData;                                            // (Parm, OutParm, ReferenceParm)
	bool                                               bUseBoidIndexWhitelist;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int>                                        BoidIndexWhitelist;                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct UObject_FTransform                          ParentTransform;                                           // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              LeaderInterpSpeed;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              LeaderAreaWidth;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FlockingBehavior.FlockTickGridFormation
struct UFlockingBehavior_FlockTickGridFormation_Params
{
	TArray<struct FBoid>                               InOutBoidArray;                                            // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FFlockPersistentData                        InOutFlockData;                                            // (Parm, OutParm, ReferenceParm)
	bool                                               bUseBoidIndexWhitelist;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int>                                        BoidIndexWhitelist;                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct UObject_FTransform                          WorldTransform;                                            // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FBoidBehavior                               Behavior;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              MinInterpDistance;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    GridRotation;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              GridHorizSize;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              GridVertSize;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                GridNumRows;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                GridNumCols;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FlockingBehavior.FlockTickFollowersAndFreeAgents
struct UFlockingBehavior_FlockTickFollowersAndFreeAgents_Params
{
	TArray<struct FBoid>                               InOutBoidArray;                                            // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FFlockPersistentData                        InOutFlockData;                                            // (Parm, OutParm, ReferenceParm)
	bool                                               bUseBoidIndexWhitelist;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int>                                        BoidIndexWhitelist;                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBoidBehavior                               Behavior;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.FlockingBehavior.FlockTickCircleFormation
struct UFlockingBehavior_FlockTickCircleFormation_Params
{
	TArray<struct FBoid>                               InOutBoidArray;                                            // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FFlockPersistentData                        InOutFlockData;                                            // (Parm, OutParm, ReferenceParm)
	bool                                               bUseBoidIndexWhitelist;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int>                                        BoidIndexWhitelist;                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct UObject_FTransform                          WorldTransform;                                            // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FBoidBehavior                               Behavior;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FRotator                                    CircleRotation;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              CircleRadius;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MinInterpDistance;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FlockingBehavior.FlockSetMaxSpeedAndForce
struct UFlockingBehavior_FlockSetMaxSpeedAndForce_Params
{
	TArray<struct FBoid>                               InOutBoidArray;                                            // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bUseBoidIndexWhitelist;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int>                                        BoidIndexWhitelist;                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector2D                                   MaxSpeedRange;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                                   MaxForceRange;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FlockingBehavior.FlockCreate
struct UFlockingBehavior_FlockCreate_Params
{
	TArray<struct FBoid>                               NewBoids;                                                  // (Parm, OutParm, ZeroConstructor)
	struct UObject_FTransform                          WorldTransform;                                            // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	int                                                NumFlockBoids;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                NumLeaderBoids;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InitialSpawnRadius;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                                   MaxSpeedRange;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                                   MaxForceRange;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                                   TurnRateRange;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FlockingBehavior.DrawDebugAvoidanceArea
struct UFlockingBehavior_DrawDebugAvoidanceArea_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FAvoidanceArea                              Area;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              DrawDuration;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FlockingBehavior.BoidTick
struct UFlockingBehavior_BoidTick_Params
{
	int                                                BoidIndex;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FBoid>                               InOutBoidArray;                                            // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FFlockPersistentData                        InOutFlockData;                                            // (Parm, OutParm, ReferenceParm)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBoidBehavior                               Behavior;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.FlockingBehavior.BoidStopTargeting
struct UFlockingBehavior_BoidStopTargeting_Params
{
	int                                                BoidIndex;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FBoid>                               InOutBoidArray;                                            // (Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function ShooterGame.FlockingBehavior.BoidSetTarget
struct UFlockingBehavior_BoidSetTarget_Params
{
	int                                                BoidIndex;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FBoid>                               InOutBoidArray;                                            // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector                                     TargetWorldLocation;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FlockingBehavior.BoidSetAlive
struct UFlockingBehavior_BoidSetAlive_Params
{
	int                                                BoidIndex;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FBoid>                               InOutBoidArray;                                            // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bIsAlive;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FlockingBehavior.BoidMoveTo
struct UFlockingBehavior_BoidMoveTo_Params
{
	int                                                BoidIndex;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FBoid>                               InOutBoidArray;                                            // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FFlockPersistentData                        InOutFlockData;                                            // (Parm, OutParm, ReferenceParm)
	struct FBoidBehavior                               Behavior;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     NewWorldLocation;                                          // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              TargetDistanceThreshold;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bUseIterp;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InterpSpeed;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.FlockingBehavior.AddAvoidanceAreaToFlockData
struct UFlockingBehavior_AddAvoidanceAreaToFlockData_Params
{
	struct FFlockPersistentData                        InOutFlockData;                                            // (Parm, OutParm, ReferenceParm)
	struct FAvoidanceArea                              Area;                                                      // (Parm)
};

// Function ShooterGame.HexagonTradableOption.GetItemCost
struct UHexagonTradableOption_GetItemCost_Params
{
	class AShooterPlayerController*                    PlayerController;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HexagonTradableOption.BPOverrideTradeAction
struct UHexagonTradableOption_BPOverrideTradeAction_Params
{
	class AShooterPlayerController*                    PlayerController;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HexagonTradableOption.BPGetItemCost
struct UHexagonTradableOption_BPGetItemCost_Params
{
	class AShooterPlayerController*                    PlayerController;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HexagonTradableOption.BPAllowedToBePurchased
struct UHexagonTradableOption_BPAllowedToBePurchased_Params
{
	class AShooterPlayerController*                    PlayerController;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HexagonTradableOption.AllowedToBePurchased
struct UHexagonTradableOption_AllowedToBePurchased_Params
{
	class AShooterPlayerController*                    PlayerController;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HexagonVFXActor.SetVolume
struct AHexagonVFXActor_SetVolume_Params
{
	float                                              NewVolume;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HexagonVFXActor.HoverThenAttract
struct AHexagonVFXActor_HoverThenAttract_Params
{
};

// Function ShooterGame.HexagonVFXActor.BeginMovingDirectlyToActor
struct AHexagonVFXActor_BeginMovingDirectlyToActor_Params
{
};

// Function ShooterGame.HordeCrateManager.ForceStartHorde
struct AHordeCrateManager_ForceStartHorde_Params
{
	class AActor*                                      SpawnNetwork;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      ActorClass;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                DifficultyIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HordeCrateManager.BPForceStartHorde
struct AHordeCrateManager_BPForceStartHorde_Params
{
	class AActor*                                      SpawnNetwork;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      ActorClass;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                DifficultyIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDElementBarWidget.UpdateBoostIconVisibility
struct UHUDElementBarWidget_UpdateBoostIconVisibility_Params
{
};

// Function ShooterGame.JsonObject.SetVectorField
struct UJsonObject_SetVectorField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	struct FVector                                     Value;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
};

// Function ShooterGame.JsonObject.SetVectorArrayField
struct UJsonObject_SetVectorArrayField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	TArray<struct FVector>                             Value;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
};

// Function ShooterGame.JsonObject.SetStructField
struct UJsonObject_SetStructField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	class UProperty*                                   Value;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
};

// Function ShooterGame.JsonObject.SetStringField
struct UJsonObject_SetStringField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	struct FString                                     Value;                                                     // (Parm, ZeroConstructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
};

// Function ShooterGame.JsonObject.SetStringArrayField
struct UJsonObject_SetStringArrayField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	TArray<struct FString>                             Value;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
};

// Function ShooterGame.JsonObject.SetRotatorField
struct UJsonObject_SetRotatorField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	struct FRotator                                    Value;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
};

// Function ShooterGame.JsonObject.SetRotatorArrayField
struct UJsonObject_SetRotatorArrayField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	TArray<struct FRotator>                            Value;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
};

// Function ShooterGame.JsonObject.SetNullField
struct UJsonObject_SetNullField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
};

// Function ShooterGame.JsonObject.SetJsonObjectField
struct UJsonObject_SetJsonObjectField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	class UJsonObject*                                 Object;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
};

// Function ShooterGame.JsonObject.SetJsonObjectArrayField
struct UJsonObject_SetJsonObjectArrayField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	TArray<class UJsonObject*>                         Value;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
};

// Function ShooterGame.JsonObject.SetIntField
struct UJsonObject_SetIntField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	int                                                Value;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
};

// Function ShooterGame.JsonObject.SetIntArrayField
struct UJsonObject_SetIntArrayField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	TArray<int>                                        Value;                                                     // (Parm, ZeroConstructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
};

// Function ShooterGame.JsonObject.SetFloatField
struct UJsonObject_SetFloatField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	float                                              Value;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
};

// Function ShooterGame.JsonObject.SetFloatArrayField
struct UJsonObject_SetFloatArrayField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	TArray<float>                                      Value;                                                     // (Parm, ZeroConstructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
};

// Function ShooterGame.JsonObject.SetDoubleField
struct UJsonObject_SetDoubleField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	double                                             Value;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
};

// Function ShooterGame.JsonObject.SetDoubleArrayField
struct UJsonObject_SetDoubleArrayField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	TArray<double>                                     Value;                                                     // (Parm, ZeroConstructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
};

// Function ShooterGame.JsonObject.SetByteField
struct UJsonObject_SetByteField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	unsigned char                                      Value;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
};

// Function ShooterGame.JsonObject.SetByteArrayField
struct UJsonObject_SetByteArrayField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	TArray<unsigned char>                              Value;                                                     // (Parm, ZeroConstructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
};

// Function ShooterGame.JsonObject.SetBoolField
struct UJsonObject_SetBoolField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	bool                                               Value;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
};

// Function ShooterGame.JsonObject.SetBoolArrayField
struct UJsonObject_SetBoolArrayField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	TArray<bool>                                       Value;                                                     // (Parm, ZeroConstructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
};

// Function ShooterGame.JsonObject.JsonSerialize
struct UJsonObject_JsonSerialize_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.JsonObject.JsonDeserialize
struct UJsonObject_JsonDeserialize_Params
{
	struct FString                                     JsonData;                                                  // (Parm, ZeroConstructor)
	struct FString                                     OutErrorMessage;                                           // (Parm, OutParm, ZeroConstructor)
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UJsonObject*                                 ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.JsonObject.IsNullField
struct UJsonObject_IsNullField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.JsonObject.GetVectorField
struct UJsonObject_GetVectorField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	struct FVector                                     OutValue;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.JsonObject.GetVectorArrayField
struct UJsonObject_GetVectorArrayField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	TArray<struct FVector>                             OutValue;                                                  // (Parm, OutParm, ZeroConstructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.JsonObject.GetStructField
struct UJsonObject_GetStructField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	class UProperty*                                   DestStruct;                                                // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.JsonObject.GetStringField
struct UJsonObject_GetStringField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	struct FString                                     OutValue;                                                  // (Parm, OutParm, ZeroConstructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.JsonObject.GetStringArrayField
struct UJsonObject_GetStringArrayField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	TArray<struct FString>                             OutValue;                                                  // (Parm, OutParm, ZeroConstructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.JsonObject.GetRotatorField
struct UJsonObject_GetRotatorField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	struct FRotator                                    OutValue;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.JsonObject.GetRotatorArrayField
struct UJsonObject_GetRotatorArrayField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	TArray<struct FRotator>                            OutValue;                                                  // (Parm, OutParm, ZeroConstructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.JsonObject.GetKeys
struct UJsonObject_GetKeys_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	TArray<struct FString>                             OutValue;                                                  // (Parm, OutParm, ZeroConstructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.JsonObject.GetJsonObjectField
struct UJsonObject_GetJsonObjectField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	class UJsonObject*                                 OutObject;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.JsonObject.GetJsonObjectArrayField
struct UJsonObject_GetJsonObjectArrayField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	TArray<class UJsonObject*>                         OutValue;                                                  // (Parm, OutParm, ZeroConstructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.JsonObject.GetIntField
struct UJsonObject_GetIntField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	int                                                OutValue;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.JsonObject.GetIntArrayField
struct UJsonObject_GetIntArrayField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	TArray<int>                                        OutValue;                                                  // (Parm, OutParm, ZeroConstructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.JsonObject.GetFloatField
struct UJsonObject_GetFloatField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	float                                              OutValue;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.JsonObject.GetFloatArrayField
struct UJsonObject_GetFloatArrayField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	TArray<float>                                      OutValue;                                                  // (Parm, OutParm, ZeroConstructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.JsonObject.GetDoubleField
struct UJsonObject_GetDoubleField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	double                                             OutValue;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.JsonObject.GetDoubleArrayField
struct UJsonObject_GetDoubleArrayField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	TArray<double>                                     OutValue;                                                  // (Parm, OutParm, ZeroConstructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.JsonObject.GetByteField
struct UJsonObject_GetByteField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	unsigned char                                      OutValue;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.JsonObject.GetByteArrayField
struct UJsonObject_GetByteArrayField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	TArray<unsigned char>                              OutValue;                                                  // (Parm, OutParm, ZeroConstructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.JsonObject.GetBoolField
struct UJsonObject_GetBoolField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	bool                                               OutValue;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.JsonObject.GetBoolArrayField
struct UJsonObject_GetBoolArrayField_Params
{
	struct FString                                     Key;                                                       // (Parm, ZeroConstructor)
	TArray<bool>                                       OutValue;                                                  // (Parm, OutParm, ZeroConstructor)
	bool                                               bForceSingleKey;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FString                                     Delimiter;                                                 // (Parm, ZeroConstructor, AdvancedDisplay)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.JsonObject.CreateJsonObject
struct UJsonObject_CreateJsonObject_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UJsonObject*                                 ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.JsonObject.CompareJsonValues
struct UJsonObject_CompareJsonValues_Params
{
	class UJsonObject*                                 A;                                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UJsonObject*                                 B;                                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.Leaderboard.GetLeaderboardRows
struct ULeaderboard_GetLeaderboardRows_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      LeaderboardType;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FLeaderboardRow>                     LeaderboardRows;                                           // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.Leaderboard.FormatLeaderboardRows
struct ULeaderboard_FormatLeaderboardRows_Params
{
	class UClass*                                      LeaderboardType;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FLeaderboardRow>                     Rows;                                                      // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FLeaderboardDisplayRow>              DisplayRows;                                               // (Parm, OutParm, ZeroConstructor)
	struct FString                                     PlayerNetIDString;                                         // (Parm, ZeroConstructor)
};

// Function ShooterGame.Leaderboard.FormatLeaderboardRow
struct ULeaderboard_FormatLeaderboardRow_Params
{
	class UClass*                                      LeaderboardType;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLeaderboardRow                             Row;                                                       // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FLeaderboardDisplayRow                      DisplayRow;                                                // (Parm, OutParm)
	struct FString                                     PlayerNetIDString;                                         // (Parm, ZeroConstructor)
};

// Function ShooterGame.Leaderboard.CountLeaderboardRows
struct ULeaderboard_CountLeaderboardRows_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      LeaderboardType;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.Leaderboard.BPGetLeaderboardRows
struct ULeaderboard_BPGetLeaderboardRows_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterGameMode*                            GameMode;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FLeaderboardRow>                     LeaderboardRows;                                           // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.Leaderboard.BPFormatLeaderboardRow
struct ULeaderboard_BPFormatLeaderboardRow_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                index;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLeaderboardRow                             DatabaseRow;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FLeaderboardDisplayRow                      ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.Leaderboard.BPCountLeaderboardRows
struct ULeaderboard_BPCountLeaderboardRows_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterGameMode*                            GameMode;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.Leaderboard.BPAddLeaderboardRow
struct ULeaderboard_BPAddLeaderboardRow_Params
{
	class AShooterGameMode*                            GameMode;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLeaderboardRow                             NewRow;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.Leaderboard.AddLeaderboardRow
struct ULeaderboard_AddLeaderboardRow_Params
{
	class UWorld*                                      WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      LeaderboardType;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLeaderboardRow                             NewRow;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionModuleBase.BPGetTargetingDesire
struct UMissionModuleBase_BPGetTargetingDesire_Params
{
	class APrimalDinoCharacter*                        MissionDino;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      forTarget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ForTargetingDesireValue;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionModuleInterface.RunMissionModule
struct UMissionModuleInterface_RunMissionModule_Params
{
	class UClass*                                      ModuleClass;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UNewMissionModuleBase*                       ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionPrerequisite.IsSatisfied
struct UMissionPrerequisite_IsSatisfied_Params
{
	class APlayerController*                           Controller;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           PlayerPawn;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalBuff_MissionData*                     PlayerMissionData;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     OutReason;                                                 // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionRequirementEntryWidget.SetDisplayText
struct UMissionRequirementEntryWidget_SetDisplayText_Params
{
	struct FString                                     Text;                                                      // (Parm, ZeroConstructor)
};

// Function ShooterGame.MissionRequirementEntryWidget.SetCustomTag
struct UMissionRequirementEntryWidget_SetCustomTag_Params
{
	struct FName                                       Tag;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionRequirementEntryWidget.Initialize
struct UMissionRequirementEntryWidget_Initialize_Params
{
};

// Function ShooterGame.MissionServerSidePoint.SetTriggerKey
struct AMissionServerSidePoint_SetTriggerKey_Params
{
	struct FName                                       NewTriggerKey;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionSpline.SpawnerUpdate
struct AMissionSpline_SpawnerUpdate_Params
{
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionSpline.FindLocationAndDirectionClosestToWorldLocation
struct AMissionSpline_FindLocationAndDirectionClosestToWorldLocation_Params
{
	struct FVector                                     WorldLocation;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     OutLocation;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     OutDirection;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OutSplineKey;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TargetableInterface.ToUObject
struct UTargetableInterface_ToUObject_Params
{
	class UObject*                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalTargetableActor.PlayHitEffectRadial
struct APrimalTargetableActor_PlayHitEffectRadial_Params
{
	float                                              DamageTaken;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRadialDamageEvent                          DamageEvent;                                               // (Parm)
	class APawn*                                       PawnInstigator;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalTargetableActor.PlayHitEffectPoint
struct APrimalTargetableActor_PlayHitEffectPoint_Params
{
	float                                              DamageTaken;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FPointDamageEvent                           DamageEvent;                                               // (Parm)
	class APawn*                                       PawnInstigator;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalTargetableActor.PlayHitEffectGeneric
struct APrimalTargetableActor_PlayHitEffectGeneric_Params
{
	float                                              DamageTaken;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (Parm)
	class APawn*                                       PawnInstigator;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalTargetableActor.PlayDyingRadial
struct APrimalTargetableActor_PlayDyingRadial_Params
{
	float                                              KillingDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRadialDamageEvent                          DamageEvent;                                               // (Parm)
	class APawn*                                       InstigatingPawn;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalTargetableActor.PlayDyingPoint
struct APrimalTargetableActor_PlayDyingPoint_Params
{
	float                                              KillingDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FPointDamageEvent                           DamageEvent;                                               // (Parm)
	class APawn*                                       InstigatingPawn;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalTargetableActor.PlayDyingGeneric
struct APrimalTargetableActor_PlayDyingGeneric_Params
{
	float                                              KillingDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (Parm)
	class APawn*                                       InstigatingPawn;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalTargetableActor.OverrideDestroyedMeshTextures
struct APrimalTargetableActor_OverrideDestroyedMeshTextures_Params
{
	class UMeshComponent*                              MeshComp;                                                  // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalTargetableActor.OnRep_ReplicatedHealth
struct APrimalTargetableActor_OnRep_ReplicatedHealth_Params
{
};

// Function ShooterGame.PrimalTargetableActor.NetUpdatedHealth
struct APrimalTargetableActor_NetUpdatedHealth_Params
{
	int                                                NewHealth;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalTargetableActor.IsInvincible
struct APrimalTargetableActor_IsInvincible_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalTargetableActor.HarvestingDepleted
struct APrimalTargetableActor_HarvestingDepleted_Params
{
	class UPrimalHarvestingComponent*                  fromComponent;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalTargetableActor.GetMaxHealth
struct APrimalTargetableActor_GetMaxHealth_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalTargetableActor.GetDescriptiveName
struct APrimalTargetableActor_GetDescriptiveName_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalTargetableActor.BPSupressImpactEffects
struct APrimalTargetableActor_BPSupressImpactEffects_Params
{
	float                                              DamageTaken;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	class APawn*                                       PawnInstigator;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsLocalPath;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                         HitComponent;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalTargetableActor.BPHitEffect
struct APrimalTargetableActor_BPHitEffect_Params
{
	float                                              DamageTaken;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	class APawn*                                       PawnInstigator;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsLocalPath;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                         HitComponent;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FVector                                     DamageLoc;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    HitNormal;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalTargetableActor.BPDied
struct APrimalTargetableActor_BPDied_Params
{
	float                                              KillingDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	class AController*                                 Killer;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalTargetableActor.BPAdjustDamage
struct APrimalTargetableActor_BPAdjustDamage_Params
{
	float                                              IncomingDamage;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                TheDamageEvent;                                            // (Parm)
	class AController*                                 EventInstigator;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsPointDamage;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                                  PointHitInfo;                                              // (Parm)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.UpdateTribeGroupStructureRank
struct APrimalStructure_UpdateTribeGroupStructureRank_Params
{
	unsigned char                                      NewRank;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.UpdateStencilValuesWithStenilDepth
struct APrimalStructure_UpdateStencilValuesWithStenilDepth_Params
{
	TEnumAsByte<ShooterGame_EStencilAlliance>          InAlliance;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.UpdateStencilValues
struct APrimalStructure_UpdateStencilValues_Params
{
};

// Function ShooterGame.PrimalStructure.UpdatedHealth
struct APrimalStructure_UpdatedHealth_Params
{
	bool                                               bDoReplication;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.TickPlacingStructure
struct APrimalStructure_TickPlacingStructure_Params
{
	class APrimalStructurePlacer*                      PlacerActor;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.StartRepair
struct APrimalStructure_StartRepair_Params
{
};

// Function ShooterGame.PrimalStructure.SetVariant
struct APrimalStructure_SetVariant_Params
{
	int                                                VariantIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceSet;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.SetupDynamicMeshMaterials
struct APrimalStructure_SetupDynamicMeshMaterials_Params
{
	class UMeshComponent*                              MeshComp;                                                  // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.SetStructureColorValue
struct APrimalStructure_SetStructureColorValue_Params
{
	int                                                ColorRegionIndex;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                SetVal;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.SetStaticMobility
struct APrimalStructure_SetStaticMobility_Params
{
};

// Function ShooterGame.PrimalStructure.SetPreventSaving
struct APrimalStructure_SetPreventSaving_Params
{
	bool                                               bPrevent;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.SetHarvestingActive
struct APrimalStructure_SetHarvestingActive_Params
{
	bool                                               bActive;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bOverrideBaseHealth;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              BaseHarvestHealthMult;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bAssignToTribe;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                AssignedToTribeID;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.SetEnabledPrimarySnappedStructureParent
struct APrimalStructure_SetEnabledPrimarySnappedStructureParent_Params
{
	bool                                               bEnabled;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.SetEnabled
struct APrimalStructure_SetEnabled_Params
{
	bool                                               bEnabled;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.SetDynamicMobility
struct APrimalStructure_SetDynamicMobility_Params
{
};

// Function ShooterGame.PrimalStructure.SetContainerActive
struct APrimalStructure_SetContainerActive_Params
{
	bool                                               bNewActive;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.SetBoundsScale
struct APrimalStructure_SetBoundsScale_Params
{
	float                                              NewScale;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.SetBedEnabled
struct APrimalStructure_SetBedEnabled_Params
{
	bool                                               bEnabled;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.RefreshStructurePlacement
struct APrimalStructure_RefreshStructurePlacement_Params
{
	class APlayerController*                           PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     AtLocation;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    AtRotation;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    PlayerViewRotation;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                       AttachToPawn;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       BoneName;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bFlipped;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.PreviewCulledStructures
struct APrimalStructure_PreviewCulledStructures_Params
{
	TArray<class APrimalStructure*>                    InOutStructuresOnFloor;                                    // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class APrimalStructure*>                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalStructure.PrepareAsPlacementPreview
struct APrimalStructure_PrepareAsPlacementPreview_Params
{
};

// Function ShooterGame.PrimalStructure.PickupStructureAndDependingLinkedStructures
struct APrimalStructure_PickupStructureAndDependingLinkedStructures_Params
{
	class APlayerController*                           ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.PickupStructure
struct APrimalStructure_PickupStructure_Params
{
	bool                                               bIsQuickPickup;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.OverrideOwner
struct APrimalStructure_OverrideOwner_Params
{
	class AActor*                                      NewOwner;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ForceOnlyRelevantToOwner;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.OnStructurePlacementRefreshed
struct APrimalStructure_OnStructurePlacementRefreshed_Params
{
};

// Function ShooterGame.PrimalStructure.OnRep_StructureColors
struct APrimalStructure_OnRep_StructureColors_Params
{
};

// Function ShooterGame.PrimalStructure.OnRep_CurrentVariant
struct APrimalStructure_OnRep_CurrentVariant_Params
{
};

// Function ShooterGame.PrimalStructure.NonPlayerFinalStructurePlacement
struct APrimalStructure_NonPlayerFinalStructurePlacement_Params
{
	int                                                PlacementTargetingTeam;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                PlacementOwningPlayerID;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     PlacementOwningPlayerName;                                 // (Parm, ZeroConstructor)
	class APrimalStructure*                            ForcePrimaryParent;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.NetUpdateTeamAndOwnerName
struct APrimalStructure_NetUpdateTeamAndOwnerName_Params
{
	int                                                NewTeam;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     NewOwnerName;                                              // (Parm, ZeroConstructor)
};

// Function ShooterGame.PrimalStructure.NetUpdateOriginalOwnerNameAndID
struct APrimalStructure_NetUpdateOriginalOwnerNameAndID_Params
{
	int                                                NewOriginalOwnerID;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     NewOriginalOwnerName;                                      // (Parm, ZeroConstructor)
};

// Function ShooterGame.PrimalStructure.NetSpawnCoreStructureDeathActor
struct APrimalStructure_NetSpawnCoreStructureDeathActor_Params
{
};

// Function ShooterGame.PrimalStructure.NetSetIgnoreDestructionEffects
struct APrimalStructure_NetSetIgnoreDestructionEffects_Params
{
	bool                                               bNewIgnoreDestructionEffects;                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.NetResetClientReceivedStructuersPlacedOnFloors
struct APrimalStructure_NetResetClientReceivedStructuersPlacedOnFloors_Params
{
};

// Function ShooterGame.PrimalStructure.NetDoSpawnEffects
struct APrimalStructure_NetDoSpawnEffects_Params
{
};

// Function ShooterGame.PrimalStructure.MultiSetPickupAllowedBeforeNetworkTime
struct APrimalStructure_MultiSetPickupAllowedBeforeNetworkTime_Params
{
	double                                             NewTime;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.MultiRefreshVariantSettings
struct APrimalStructure_MultiRefreshVariantSettings_Params
{
	int                                                NewVariantIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.MultiAddStructuresPlacedOnFloor
struct APrimalStructure_MultiAddStructuresPlacedOnFloor_Params
{
	class APrimalStructure*                            Structure;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.LinkStructure
struct APrimalStructure_LinkStructure_Params
{
	class APrimalStructure*                            NewLinkedStructure;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.IsValidSnapPointTo
struct APrimalStructure_IsValidSnapPointTo_Params
{
	class APrimalStructure*                            childStructure;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                MySnapPointToIndex;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.IsValidSnapPointFrom
struct APrimalStructure_IsValidSnapPointFrom_Params
{
	class APrimalStructure*                            ParentStructure;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                MySnapPointFromIndex;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.IsValidForSnappingFrom
struct APrimalStructure_IsValidForSnappingFrom_Params
{
	class APrimalStructure*                            OtherStructure;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.IsRepairAllowed
struct APrimalStructure_IsRepairAllowed_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.IsPointObstructedByWorldGeometry
struct APrimalStructure_IsPointObstructedByWorldGeometry_Params
{
	class UWorld*                                      ForWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ThePoint;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIgnoreTerrain;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bOnlyCheckTerrain;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIgnoreFoliage;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OBSTRUCTION_CHECK_DIST;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.IsPointNearSupplyCrateSpawn
struct APrimalStructure_IsPointNearSupplyCrateSpawn_Params
{
	class UWorld*                                      TheWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     AtPoint;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.IsPinLocked
struct APrimalStructure_IsPinLocked_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.IsOnlyLinkedToFastDecayStructures
struct APrimalStructure_IsOnlyLinkedToFastDecayStructures_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.IsLinkedToWaterOrPowerSource
struct APrimalStructure_IsLinkedToWaterOrPowerSource_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.IsAllowedToDemolish
struct APrimalStructure_IsAllowedToDemolish_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.IsAllowedToBuild
struct APrimalStructure_IsAllowedToBuild_Params
{
	class APlayerController*                           PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     AtLocation;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    AtRotation;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FPlacementData                              OutPlacementData;                                          // (Parm, OutParm, ReferenceParm)
	bool                                               bDontAdjustForMaxRange;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    PlayerViewRotation;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bFinalPlacement;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.IsActiveEventStructure
struct APrimalStructure_IsActiveEventStructure_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.GetStructuresInRange
struct APrimalStructure_GetStructuresInRange_Params
{
	class UWorld*                                      TheWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     AtLocation;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              WithinRange;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      StructureClass;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class APrimalStructure*>                    StructuresOut;                                             // (Parm, OutParm, ZeroConstructor)
	bool                                               bUseInternalOctree;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalStructure*                            IgnoreStructure;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.GetStructureColorValue
struct APrimalStructure_GetStructureColorValue_Params
{
	int                                                ColorRegionIndex;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.GetStructureColor
struct APrimalStructure_GetStructureColor_Params
{
	int                                                ColorRegionIndex;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.GetSnapPointName
struct APrimalStructure_GetSnapPointName_Params
{
	int                                                SnapPointIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.GetPinCode
struct APrimalStructure_GetPinCode_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.GetNumStructuresInRangeStructureTypeFlag
struct APrimalStructure_GetNumStructuresInRangeStructureTypeFlag_Params
{
	class UWorld*                                      TheWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     AtLocation;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                TypeFlag;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              WithinRange;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bCheckBPCountStructureInRange;                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bUseInternalOctree;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalStructure*                            IgnoreStructure;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bCheckWithAltCollisionChannel;                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.GetNearbyStructuresOfClass
struct APrimalStructure_GetNearbyStructuresOfClass_Params
{
	class UWorld*                                      World;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      StructureClass;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Location;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              Range;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class APrimalStructure*>                    Structures;                                                // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.PrimalStructure.GetDefaultVariant
struct APrimalStructure_GetDefaultVariant_Params
{
	struct FStructureVariant                           ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.PrimalStructure.GetDayCycleManager
struct APrimalStructure_GetDayCycleManager_Params
{
	class ADayCycleManager*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.GetClosestStructureToPoint
struct APrimalStructure_GetClosestStructureToPoint_Params
{
	class UWorld*                                      ForWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     AtPoint;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OverlapRadius;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalStructure*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.GetBedFilterClass
struct APrimalStructure_GetBedFilterClass_Params
{
	class UClass*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.GetAdditionalComponentForDyePreview
struct APrimalStructure_GetAdditionalComponentForDyePreview_Params
{
	class UStaticMeshComponent*                        ReturnValue;                                               // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.ForceReplicateLinkedStructures
struct APrimalStructure_ForceReplicateLinkedStructures_Params
{
};

// Function ShooterGame.PrimalStructure.FinalStructurePlacement
struct APrimalStructure_FinalStructurePlacement_Params
{
	class APlayerController*                           PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     AtLocation;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    AtRotation;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    PlayerViewRotation;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                       AttachToPawn;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       BoneName;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bFlipped;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.DisableStructurePickup
struct APrimalStructure_DisableStructurePickup_Params
{
};

// Function ShooterGame.PrimalStructure.DestroyStructuresPlacedOnFloor
struct APrimalStructure_DestroyStructuresPlacedOnFloor_Params
{
};

// Function ShooterGame.PrimalStructure.Demolish
struct APrimalStructure_Demolish_Params
{
	class APlayerController*                           ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.DelayedDisableSnapParent
struct APrimalStructure_DelayedDisableSnapParent_Params
{
};

// Function ShooterGame.PrimalStructure.CreateDynamicMaterials
struct APrimalStructure_CreateDynamicMaterials_Params
{
	class UMeshComponent*                              ForceCreateForComponent;                                   // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.ClientUpdateLinkedStructures
struct APrimalStructure_ClientUpdateLinkedStructures_Params
{
	TArray<uint32_t>                                   NewLinkedStructures;                                       // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.PrimalStructure.ClearStructureLinks
struct APrimalStructure_ClearStructureLinks_Params
{
	class APlayerController*                           ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.ClearCustomColors
struct APrimalStructure_ClearCustomColors_Params
{
};

// Function ShooterGame.PrimalStructure.CanPickupStructureFromRecentPlacement
struct APrimalStructure_CanPickupStructureFromRecentPlacement_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.CanBeStoredByExosuit
struct APrimalStructure_CanBeStoredByExosuit_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.CanAttachToExosuit
struct APrimalStructure_CanAttachToExosuit_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.CallDrawHUD
struct APrimalStructure_CallDrawHUD_Params
{
	class AShooterHUD*                                 HUD;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.CallDrawFloatingHUD
struct APrimalStructure_CallDrawFloatingHUD_Params
{
	class AShooterHUD*                                 HUD;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPUseCountStructureInRange
struct APrimalStructure_BPUseCountStructureInRange_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPUpdatedHealth
struct APrimalStructure_BPUpdatedHealth_Params
{
	bool                                               bDoReplication;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPUnstasis
struct APrimalStructure_BPUnstasis_Params
{
};

// Function ShooterGame.PrimalStructure.BPTriggerStasisEvent
struct APrimalStructure_BPTriggerStasisEvent_Params
{
};

// Function ShooterGame.PrimalStructure.BPTreatAsFoundationForSnappedStructure
struct APrimalStructure_BPTreatAsFoundationForSnappedStructure_Params
{
	class APrimalStructure*                            OtherStructure;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FPlacementData                              WithPlacementData;                                         // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPStructurePreGetMultiUseEntries
struct APrimalStructure_BPStructurePreGetMultiUseEntries_Params
{
	class APlayerController*                           ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPRefreshedStructureColors
struct APrimalStructure_BPRefreshedStructureColors_Params
{
};

// Function ShooterGame.PrimalStructure.BPPreventUsingAsFloorForStructure
struct APrimalStructure_BPPreventUsingAsFloorForStructure_Params
{
	struct FPlacementData                              theOutPlacementData;                                       // (ConstParm, Parm, OutParm, ReferenceParm)
	class APrimalStructure*                            StructureToPlaceOnMe;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPPreventStasis
struct APrimalStructure_BPPreventStasis_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPPreventSpawnForPlayer
struct APrimalStructure_BPPreventSpawnForPlayer_Params
{
	class AShooterPlayerController*                    PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bCheckCooldownTime;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalStructure*                            FromStructure;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPPreventPlacingStructureOntoMe
struct APrimalStructure_BPPreventPlacingStructureOntoMe_Params
{
	class APlayerController*                           PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalStructure*                            ForNewStructure;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                                  ForHitResult;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPPreventPlacingOnFloorStructure
struct APrimalStructure_BPPreventPlacingOnFloorStructure_Params
{
	struct FPlacementData                              theOutPlacementData;                                       // (ConstParm, Parm, OutParm, ReferenceParm)
	class APrimalStructure*                            FloorStructure;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPPreventPlacementOnPawn
struct APrimalStructure_BPPreventPlacementOnPawn_Params
{
	class APlayerController*                           PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalCharacter*                            forCharacter;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       ForBone;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPPreventCharacterBasing
struct APrimalStructure_BPPreventCharacterBasing_Params
{
	class AActor*                                      OtherActor;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                         BasedOnComponent;                                          // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPPostSetStructureCollisionChannels
struct APrimalStructure_BPPostSetStructureCollisionChannels_Params
{
};

// Function ShooterGame.PrimalStructure.BPPostLoadedFromSaveGame
struct APrimalStructure_BPPostLoadedFromSaveGame_Params
{
};

// Function ShooterGame.PrimalStructure.BPPlayDying
struct APrimalStructure_BPPlayDying_Params
{
	float                                              KillingDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	class APawn*                                       InstigatingPawn;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPPlacedStructure
struct APrimalStructure_BPPlacedStructure_Params
{
	class APlayerController*                           ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPOverrideTargetLocation
struct APrimalStructure_BPOverrideTargetLocation_Params
{
	struct FVector                                     attackPos;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPOverrideSnappedToTransform
struct APrimalStructure_BPOverrideSnappedToTransform_Params
{
	class APrimalStructure*                            childStructure;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ChildSnapFromIndex;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       ChildSnapFromName;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     UnsnappedPlacementPos;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    UnsnappedPlacementRot;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     SnappedPlacementPos;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    SnappedPlacementRot;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                SnapToIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       SnapToName;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     OutLocation;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    OutRotation;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                bForceInvalidateSnap;                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPOverrideSnappedFromTransform
struct APrimalStructure_BPOverrideSnappedFromTransform_Params
{
	class APrimalStructure*                            ParentStructure;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ParentSnapFromIndex;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       ParentSnapFromName;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     UnsnappedPlacementPos;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    UnsnappedPlacementRot;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     SnappedPlacementPos;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    SnappedPlacementRot;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                SnapToIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       SnapToName;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     OutLocation;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    OutRotation;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                bForceInvalidateSnap;                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPOverridePlacementRotation
struct APrimalStructure_BPOverridePlacementRotation_Params
{
	struct FVector                                     ViewPos;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    ViewRot;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPOverrideDemolish
struct APrimalStructure_BPOverrideDemolish_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPOverrideCantBuildReasonString
struct APrimalStructure_BPOverrideCantBuildReasonString_Params
{
	int                                                CantBuildReason;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalStructure.BPOverrideAllowStructureAccess
struct APrimalStructure_BPOverrideAllowStructureAccess_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsAccessAllowed;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForInventoryOnly;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPOnVariantSwitch
struct APrimalStructure_BPOnVariantSwitch_Params
{
	int                                                NewVariantIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPOnStructurePickup
struct APrimalStructure_BPOnStructurePickup_Params
{
	class APlayerController*                           PlayerController;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      ItemType;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 NewlyPickedUpItem;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsQuickPickup;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPOnLinkedStructureDestroyed
struct APrimalStructure_BPOnLinkedStructureDestroyed_Params
{
	class APrimalStructure*                            DestroyedStructure;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPOnDemolish
struct APrimalStructure_BPOnDemolish_Params
{
	class APlayerController*                           ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPNotifyAmmoBoxReloadedStructure
struct APrimalStructure_BPNotifyAmmoBoxReloadedStructure_Params
{
	class APrimalStructure*                            ReloadedStructure;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPNetRefreshStructureColors
struct APrimalStructure_BPNetRefreshStructureColors_Params
{
	bool                                               bUseColors;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPIsAllowedToBuildEx
struct APrimalStructure_BPIsAllowedToBuildEx_Params
{
	struct FPlacementData                              OutPlacementData;                                          // (ConstParm, Parm, OutParm, ReferenceParm)
	int                                                CurrentAllowedReason;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                           PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bFinalPlacement;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bChoosingRotation;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPIsAllowedToBuild
struct APrimalStructure_BPIsAllowedToBuild_Params
{
	struct FPlacementData                              OutPlacementData;                                          // (ConstParm, Parm, OutParm, ReferenceParm)
	int                                                CurrentAllowedReason;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPImpactEffect
struct APrimalStructure_BPImpactEffect_Params
{
	struct FHitResult                                  HitRes;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector                                     ShootDirection;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPHandleStructureEnabled
struct APrimalStructure_BPHandleStructureEnabled_Params
{
	bool                                               bEnabled;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPHandleBedFastTravel
struct APrimalStructure_BPHandleBedFastTravel_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalStructure*                            ToBed;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPGetStructureID
struct APrimalStructure_BPGetStructureID_Params
{
	class APrimalStructure*                            PrimalStructure;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPGetSnapPoints
struct APrimalStructure_BPGetSnapPoints_Params
{
	TArray<struct FPrimalStructureSnapPoint>           ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalStructure.BPGetInfoFromConsumedItemForPlacedStructure
struct APrimalStructure_BPGetInfoFromConsumedItemForPlacedStructure_Params
{
	class UPrimalItem*                                 ItemToConsumed;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPGetFromID
struct APrimalStructure_BPGetFromID_Params
{
	class UWorld*                                      World;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                TheStructureID;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalStructure*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPGetAmmoBoxReloadPercent
struct APrimalStructure_BPGetAmmoBoxReloadPercent_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPGetAllLinkedStructures
struct APrimalStructure_BPGetAllLinkedStructures_Params
{
	TArray<class APrimalStructure*>                    OutLinkedStructures;                                       // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.PrimalStructure.BPGetAggroDinoOnDamageSettings
struct APrimalStructure_BPGetAggroDinoOnDamageSettings_Params
{
	TArray<struct FName>                               AggroDinoClassesCustomTags;                                // (Parm, OutParm, ZeroConstructor)
	float                                              AggroDinoClassesRange;                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPForceConsideredEnemyFoundation
struct APrimalStructure_BPForceConsideredEnemyFoundation_Params
{
	class APlayerController*                           PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalStructure*                            ForNewStructure;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     TestAtLocation;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPDefaultProcessEditText
struct APrimalStructure_BPDefaultProcessEditText_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     TextToUse;                                                 // (Parm, ZeroConstructor)
	bool                                               checkedBox;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPCheckItemRequiementsToBuild
struct APrimalStructure_BPCheckItemRequiementsToBuild_Params
{
	class UPrimalItem*                                 ItemToConsumed;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPBeginPreview
struct APrimalStructure_BPBeginPreview_Params
{
};

// Function ShooterGame.PrimalStructure.BPApplyCustomDurabilityOnPickup
struct APrimalStructure_BPApplyCustomDurabilityOnPickup_Params
{
	class UPrimalItem*                                 pickedup;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPAllowSwitchToVariant
struct APrimalStructure_BPAllowSwitchToVariant_Params
{
	int                                                VariantIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPAllowSnapRotationForStructure
struct APrimalStructure_BPAllowSnapRotationForStructure_Params
{
	int                                                ThisSnapPointIndex;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       ThisSnapPointName;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalStructure*                            OtherStructure;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                OtherStructureSnapPointIndex;                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       OtherStructureSnapPointName;                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPAllowSnappingWith
struct APrimalStructure_BPAllowSnappingWith_Params
{
	class APrimalStructure*                            OtherStructure;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                           ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BPAllowPickupGiveItem
struct APrimalStructure_BPAllowPickupGiveItem_Params
{
	class APlayerController*                           ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BP_OnPaintingComponentInitialized
struct APrimalStructure_BP_OnPaintingComponentInitialized_Params
{
	class UStructurePaintingComponent*                 PaintingComp;                                              // (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BlueprintDrawPreviewHUD
struct APrimalStructure_BlueprintDrawPreviewHUD_Params
{
	class AShooterHUD*                                 HUD;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              CenterX;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              CenterY;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BlueprintDrawHUD
struct APrimalStructure_BlueprintDrawHUD_Params
{
	class AShooterHUD*                                 HUD;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              CenterX;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              CenterY;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.BlueprintAnimNotifyCustomEvent
struct APrimalStructure_BlueprintAnimNotifyCustomEvent_Params
{
	struct FName                                       CustomEventName;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USkeletalMeshComponent*                      MeshComp;                                                  // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class UAnimSequenceBase*                           Animation;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimNotify*                                 AnimNotifyObject;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.ApplyPrimalItemSettingsToStructure
struct APrimalStructure_ApplyPrimalItemSettingsToStructure_Params
{
	class UMeshComponent*                              meshToColorize;                                            // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 AssociatedPrimalItem;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.AllowStructureAccess
struct APrimalStructure_AllowStructureAccess_Params
{
	class APlayerController*                           ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructure.AllowSnappingWith
struct APrimalStructure_AllowSnappingWith_Params
{
	class APrimalStructure*                            OtherStructure;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                           ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureItemContainer.VerifyPinCode
struct APrimalStructureItemContainer_VerifyPinCode_Params
{
	int                                                pinCode;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureItemContainer.UpdateTribeGroupInventoryRank
struct APrimalStructureItemContainer_UpdateTribeGroupInventoryRank_Params
{
	unsigned char                                      NewRank;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureItemContainer.UpdateSolarPower
struct APrimalStructureItemContainer_UpdateSolarPower_Params
{
};

// Function ShooterGame.PrimalStructureItemContainer.UpdateContainerActiveHealthDecrease
struct APrimalStructureItemContainer_UpdateContainerActiveHealthDecrease_Params
{
};

// Function ShooterGame.PrimalStructureItemContainer.TryActivation
struct APrimalStructureItemContainer_TryActivation_Params
{
};

// Function ShooterGame.PrimalStructureItemContainer.SetPoweredOverrideCounter
struct APrimalStructureItemContainer_SetPoweredOverrideCounter_Params
{
	int                                                NewPoweredOverrideCounter;                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureItemContainer.RefreshPowerJunctionLink
struct APrimalStructureItemContainer_RefreshPowerJunctionLink_Params
{
};

// Function ShooterGame.PrimalStructureItemContainer.RefreshInventoryItemCounts
struct APrimalStructureItemContainer_RefreshInventoryItemCounts_Params
{
};

// Function ShooterGame.PrimalStructureItemContainer.PowerGeneratorBuiltNearbyPoweredStructure
struct APrimalStructureItemContainer_PowerGeneratorBuiltNearbyPoweredStructure_Params
{
	class APrimalStructureItemContainer*               PoweredStructure;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureItemContainer.OnContainerRenamed
struct APrimalStructureItemContainer_OnContainerRenamed_Params
{
};

// Function ShooterGame.PrimalStructureItemContainer.NetUpdateLocation
struct APrimalStructureItemContainer_NetUpdateLocation_Params
{
	struct FVector                                     NewLocation;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureItemContainer.NetUpdateBoxName
struct APrimalStructureItemContainer_NetUpdateBoxName_Params
{
	struct FString                                     NewName;                                                   // (Parm, ZeroConstructor)
};

// Function ShooterGame.PrimalStructureItemContainer.NetSetContainerActive
struct APrimalStructureItemContainer_NetSetContainerActive_Params
{
	bool                                               bSetActive;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      NetReplicatedFuelItemClass;                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int16_t                                            NetReplicatedFuelItemColorIndex;                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureItemContainer.MovePowerJunctionLink
struct APrimalStructureItemContainer_MovePowerJunctionLink_Params
{
};

// Function ShooterGame.PrimalStructureItemContainer.IsValidForDinoFeedingContainer
struct APrimalStructureItemContainer_IsValidForDinoFeedingContainer_Params
{
	class APrimalDinoCharacter*                        ForDino;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureItemContainer.IsValidatedPinCodePlayerController
struct APrimalStructureItemContainer_IsValidatedPinCodePlayerController_Params
{
	class APlayerController*                           ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureItemContainer.IsPlayerControllerInPinCodeValidationList
struct APrimalStructureItemContainer_IsPlayerControllerInPinCodeValidationList_Params
{
	class APlayerController*                           PlayerController;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureItemContainer.HasSamePinCode
struct APrimalStructureItemContainer_HasSamePinCode_Params
{
	class APrimalStructureItemContainer*               otherContainer;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureItemContainer.GetDeathCacheCharacterID
struct APrimalStructureItemContainer_GetDeathCacheCharacterID_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureItemContainer.EnableActive
struct APrimalStructureItemContainer_EnableActive_Params
{
};

// Function ShooterGame.PrimalStructureItemContainer.CanBeActivated
struct APrimalStructureItemContainer_CanBeActivated_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureItemContainer.BPSetPlayerConstructor
struct APrimalStructureItemContainer_BPSetPlayerConstructor_Params
{
	class APlayerController*                           PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureItemContainer.BPRename
struct APrimalStructureItemContainer_BPRename_Params
{
	struct FString                                     NewName;                                                   // (Parm, ZeroConstructor)
};

// Function ShooterGame.PrimalStructureItemContainer.BPPreGetMultiUseEntries
struct APrimalStructureItemContainer_BPPreGetMultiUseEntries_Params
{
	class APlayerController*                           ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureItemContainer.BPOverrideDescriptiveName
struct APrimalStructureItemContainer_BPOverrideDescriptiveName_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalStructureItemContainer.BPOnContainerActiveHealthDecrease
struct APrimalStructureItemContainer_BPOnContainerActiveHealthDecrease_Params
{
};

// Function ShooterGame.PrimalStructureItemContainer.BPNotifyRemoteViewerChange
struct APrimalStructureItemContainer_BPNotifyRemoteViewerChange_Params
{
	bool                                               bOpened;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureItemContainer.BPNotifyPowerChanged
struct APrimalStructureItemContainer_BPNotifyPowerChanged_Params
{
};

// Function ShooterGame.PrimalStructureItemContainer.BPNotifyInventoryItemChange
struct APrimalStructureItemContainer_BPNotifyInventoryItemChange_Params
{
	bool                                               bIsItemAdd;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 theItem;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bEquipItem;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureItemContainer.BPIsValidWaterSourceForPipe
struct APrimalStructureItemContainer_BPIsValidWaterSourceForPipe_Params
{
	class APrimalStructureWaterPipe*                   ForWaterPipe;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureItemContainer.BPGetQuantityOfItemWithoutCheckingInventory
struct APrimalStructureItemContainer_BPGetQuantityOfItemWithoutCheckingInventory_Params
{
	class UClass*                                      ItemToCheckFor;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureItemContainer.BPGetFuelConsumptionMultiplier
struct APrimalStructureItemContainer_BPGetFuelConsumptionMultiplier_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureItemContainer.BPContainerDeactivated
struct APrimalStructureItemContainer_BPContainerDeactivated_Params
{
};

// Function ShooterGame.PrimalStructureItemContainer.BPContainerActivated
struct APrimalStructureItemContainer_BPContainerActivated_Params
{
};

// Function ShooterGame.PrimalStructureItemContainer.BPCanBeActivatedByPlayer
struct APrimalStructureItemContainer_BPCanBeActivatedByPlayer_Params
{
	class AShooterPlayerController*                    PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureItemContainer.BPCanBeActivated
struct APrimalStructureItemContainer_BPCanBeActivated_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureItemContainer.BPApplyPinCode
struct APrimalStructureItemContainer_BPApplyPinCode_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                appledPinCode;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsSetting;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                TheCustomIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureItemContainer.AllowToggleActivation
struct APrimalStructureItemContainer_AllowToggleActivation_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureItemContainer.AddToValidatedByPinCodePlayerControllers
struct APrimalStructureItemContainer_AddToValidatedByPinCodePlayerControllers_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionDispatcher.StartMission
struct AMissionDispatcher_StartMission_Params
{
	class UClass*                                      MissionTypeClass;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           StartingCharacter;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     OutClientFailureReason;                                    // (Parm, OutParm, ZeroConstructor)
	class AMissionType*                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionDispatcher.OnRunningMissionDeactivated
struct AMissionDispatcher_OnRunningMissionDeactivated_Params
{
	class AMissionType*                                Mission;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionDispatcher.MultiSetParticleSystemActive
struct AMissionDispatcher_MultiSetParticleSystemActive_Params
{
	bool                                               bIsActive;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionDispatcher.MultiDeactivateMissionActors
struct AMissionDispatcher_MultiDeactivateMissionActors_Params
{
};

// Function ShooterGame.MissionDispatcher.MultiActivateMissionActors
struct AMissionDispatcher_MultiActivateMissionActors_Params
{
};

// Function ShooterGame.MissionDispatcher.IsValidDispatcherForMissionType
struct AMissionDispatcher_IsValidDispatcherForMissionType_Params
{
	class UClass*                                      MissionTypeClass;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           StartingCharacter;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionDispatcher.GetFallbackSeed
struct AMissionDispatcher_GetFallbackSeed_Params
{
	class UClass*                                      ForMission;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bRemoveSeed;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionDispatcher.GenerateFallbackSeeds
struct AMissionDispatcher_GenerateFallbackSeeds_Params
{
};

// Function ShooterGame.MissionDispatcher.ClearFallbackSeeds
struct AMissionDispatcher_ClearFallbackSeeds_Params
{
	class UClass*                                      OptionalForMission;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionDispatcher.BPOverrideMultiUseMissionList
struct AMissionDispatcher_BPOverrideMultiUseMissionList_Params
{
	class APlayerController*                           ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           StartingCharacter;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UClass*>                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.MissionDispatcher.BPOnRunningMissionDeactivated
struct AMissionDispatcher_BPOnRunningMissionDeactivated_Params
{
	class AMissionType*                                Mission;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionDispatcher.BPOnMissionStarted
struct AMissionDispatcher_BPOnMissionStarted_Params
{
	class AMissionType*                                NewMission;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           StartingCharacter;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionDispatcher.BPOnMissionFailToStart
struct AMissionDispatcher_BPOnMissionFailToStart_Params
{
	class UClass*                                      MissionTypeClass;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           StartingCharacter;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionDispatcher.BPGetMissionStartLocation
struct AMissionDispatcher_BPGetMissionStartLocation_Params
{
	class UClass*                                      MissionTypeClass;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           StartingCharacter;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionDispatcher.BPDeactivateMissionActors
struct AMissionDispatcher_BPDeactivateMissionActors_Params
{
};

// Function ShooterGame.MissionDispatcher.BPCanSpawnMission
struct AMissionDispatcher_BPCanSpawnMission_Params
{
	class UClass*                                      MissionTypeClass;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           StartingCharacter;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionDispatcher.BPActivateMissionActors
struct AMissionDispatcher_BPActivateMissionActors_Params
{
};

// Function ShooterGame.MissionDispatcher.AddFallbackSeed
struct AMissionDispatcher_AddFallbackSeed_Params
{
	class UClass*                                      ForMission;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                Seed;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                MaxNumberOfFallbackSeeds;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.UpdateWorldIndicators
struct AMissionType_UpdateWorldIndicators_Params
{
	bool                                               bForceNetUpdate;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.UpdateRequirements
struct AMissionType_UpdateRequirements_Params
{
	bool                                               bForceNetUpdate;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.UpdateMissionPrepArea
struct AMissionType_UpdateMissionPrepArea_Params
{
	struct FVector                                     PrepAreaWorldLocation;                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              MinUpdateFrequencyInSeconds;                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.TryCompletePhase
struct AMissionType_TryCompletePhase_Params
{
	bool                                               bForceChange;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.TryChangeMissionPhase
struct AMissionType_TryChangeMissionPhase_Params
{
	struct FName                                       NewPhase;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceChange;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.TotalMaxHealth_Players
struct AMissionType_TotalMaxHealth_Players_Params
{
	TArray<class AShooterCharacter*>                   PlayerArray;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.TotalMaxHealth_Dinos
struct AMissionType_TotalMaxHealth_Dinos_Params
{
	TArray<class APrimalDinoCharacter*>                DinoArray;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.TotalMaxHealth_Characters
struct AMissionType_TotalMaxHealth_Characters_Params
{
	TArray<class APrimalCharacter*>                    CharacterArray;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.TotalCurrentHealth_Players
struct AMissionType_TotalCurrentHealth_Players_Params
{
	TArray<class AShooterCharacter*>                   PlayerArray;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.TotalCurrentHealth_Dinos
struct AMissionType_TotalCurrentHealth_Dinos_Params
{
	TArray<class APrimalDinoCharacter*>                DinoArray;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.TotalCurrentHealth_Characters
struct AMissionType_TotalCurrentHealth_Characters_Params
{
	TArray<class APrimalCharacter*>                    CharacterArray;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.TeleportCharacterForMission
struct AMissionType_TeleportCharacterForMission_Params
{
	class APrimalCharacter*                            Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     NewLocation;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bOverrideRotation;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    RotationOverride;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceSetReturnLocation;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bWasMountedDino;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSkipDinoFailChecks;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.SuspendMission
struct AMissionType_SuspendMission_Params
{
};

// Function ShooterGame.MissionType.StopMissionMusic
struct AMissionType_StopMissionMusic_Params
{
};

// Function ShooterGame.MissionType.StaticOnReplicatedMissionDataUpdated
struct AMissionType_StaticOnReplicatedMissionDataUpdated_Params
{
	class APrimalBuff_MissionData*                     missionData;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.StaticOnMissionDataInitialized
struct AMissionType_StaticOnMissionDataInitialized_Params
{
	class APrimalBuff_MissionData*                     missionData;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.StaticGetTaggedString
struct AMissionType_StaticGetTaggedString_Params
{
	class UClass*                                      MissionType;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       Tag;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     OutString;                                                 // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.SpawnMissionWeapon
struct AMissionType_SpawnMissionWeapon_Params
{
	class AShooterCharacter*                           ForPlayer;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      WeaponItem;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ItemQuality;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               AutoEquip;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterWeapon*                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.SpawnMissionStructure
struct AMissionType_SpawnMissionStructure_Params
{
	class UClass*                                      StructureType;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     SpawnLocation;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    SpawnRotation;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    OwnerPlayerController;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                TargetingTeamOverride;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalStructure*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.SpawnMissionItem
struct AMissionType_SpawnMissionItem_Params
{
	class UClass*                                      AnItemClass;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ItemQuality;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceNoBlueprint;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                quantityOverride;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceBlueprint;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      TheDroppedTemplateOverride;                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     WorldLocation;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    WorldRotation;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UStaticMesh*                                 DroppedMeshOverride;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     DroppedScaleOverride;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInterface*                          DroppedMaterialOverride;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DroppedLifeSpanOverride;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ADroppedItemMission*                         ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.SpawnMissionDinoGroupExtended
struct AMissionType_SpawnMissionDinoGroupExtended_Params
{
	int                                                NumDinos;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              SpawnRadius;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     SpawnLocation;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    SpawnRotation;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FDinoSetup>                          DinoSetups;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<ShooterGame_ESpawnPattern>             Pattern;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    OwnerPlayerController;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DebugDrawDuration;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bApplyRotationToSpawnOffset;                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UBehaviorTree*                               OverrideMissionBehaviorTree;                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bRandomizeDinos;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDontWander;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bTargetingIgnoredByWildDinos;                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bTargetingIgnoreWildDinos;                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              AIRangeMultiplier;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      ColorSet;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDoLosCheck;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class APrimalDinoCharacter*>                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.MissionType.SpawnMissionDinoGroup
struct AMissionType_SpawnMissionDinoGroup_Params
{
	int                                                NumDinos;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              SpawnRadius;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     SpawnLocation;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    SpawnRotation;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDinoSetup                                  DinoSetup;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<ShooterGame_ESpawnPattern>             Pattern;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    OwnerPlayerController;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DebugDrawDuration;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bApplyRotationToSpawnOffset;                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UBehaviorTree*                               OverrideMissionBehaviorTree;                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDontWander;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bTargetingIgnoredByWildDinos;                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bTargetingIgnoreWildDinos;                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              AIRangeMultiplier;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class APrimalDinoCharacter*>                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.MissionType.SpawnMissionDino
struct AMissionType_SpawnMissionDino_Params
{
	struct FVector                                     SpawnLocation;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    SpawnRotation;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDinoSetup                                  DinoSetup;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	class AShooterPlayerController*                    OwnerPlayerController;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DebugDrawDuration;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bApplyRotationToSpawnOffset;                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UBehaviorTree*                               OverrideMissionBehaviorTree;                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDontWander;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bTargetingIgnoredByWildDinos;                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bTargetingIgnoreWildDinos;                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              AIRangeMultiplier;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      ColorSet;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDoLosCheck;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalDinoCharacter*                        ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.SpawnMission
struct AMissionType_SpawnMission_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      MissionType;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           forCharacter;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Location;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FString                                     FailureReason;                                             // (Parm, OutParm, ZeroConstructor)
	class AActor*                                      MissionDispatcherActor;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceSpawn;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AMissionType*                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.SpawnEmitterForPlayers
struct AMissionType_SpawnEmitterForPlayers_Params
{
	TArray<class AShooterCharacter*>                   Players;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UClass*                                      EmitterType;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct UObject_FTransform                          EmitterTransform;                                          // (Parm, IsPlainOldData, NoDestructor)
	float                                              EmitterLifespan;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.SortMissionWorldIndicatorArrayByDistance
struct AMissionType_SortMissionWorldIndicatorArrayByDistance_Params
{
	struct FVector                                     WorldLocation;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalCharacter*                            forCharacter;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bReverseSort;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FMissionWorldIndicator>              InOutWorldIndicators;                                      // (Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function ShooterGame.MissionType.SetupMissionPrepArea
struct AMissionType_SetupMissionPrepArea_Params
{
	struct FVector                                     PrepAreaWorldLocation;                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    PrepAreaEmitterRotation;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     PrepAreaEmitterScale;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.SetSpecificSplineKeyTarget
struct AMissionType_SetSpecificSplineKeyTarget_Params
{
	class APrimalDinoCharacter*                        ForDino;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                index;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.SetReverseTeleportReturnLocation
struct AMissionType_SetReverseTeleportReturnLocation_Params
{
	class APrimalCharacter*                            Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     NewLocation;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    NewRotation;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.SetPlayerPrepAreaState
struct AMissionType_SetPlayerPrepAreaState_Params
{
	class AShooterCharacter*                           PlayerPawn;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bInsidePrepArea;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.SetPlayerParticleSystemIndicator
struct AMissionType_SetPlayerParticleSystemIndicator_Params
{
	class AShooterCharacter*                           PlayerPawn;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystem*                             IndicatorParticles;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              RemoveAfterDuration;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceNetUpdate;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.SetPhaseStartedDelegate
struct AMissionType_SetPhaseStartedDelegate_Params
{
	struct FName                                       PhaseName;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FScriptDelegate                             Delegate;                                                  // (Parm, ZeroConstructor, NoDestructor)
};

// Function ShooterGame.MissionType.SetPhaseEndedDelegate
struct AMissionType_SetPhaseEndedDelegate_Params
{
	struct FName                                       PhaseName;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FScriptDelegate                             Delegate;                                                  // (Parm, ZeroConstructor, NoDestructor)
};

// Function ShooterGame.MissionType.SetPhaseCompleted
struct AMissionType_SetPhaseCompleted_Params
{
	int                                                PhaseIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bCompleted;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.SetMissionTimeRemaining
struct AMissionType_SetMissionTimeRemaining_Params
{
	float                                              SecondsRemaining;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.SetMissionMusic
struct AMissionType_SetMissionMusic_Params
{
	class USoundBase*                                  LoopingMusicTrack;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.SetMissionDeactivationTimer
struct AMissionType_SetMissionDeactivationTimer_Params
{
	float                                              NumSeconds;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.SetMissionCompletedStatus
struct AMissionType_SetMissionCompletedStatus_Params
{
	class AShooterCharacter*                           PlayerCharacter;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bCompleted;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bUseOverrideVersion;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                OverrideVersion;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bUseOverrideCompleteUtcTime;                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                             CompleteUtcTime;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.SetDinoAITargetActor
struct AMissionType_SetDinoAITargetActor_Params
{
	class APrimalDinoCharacter*                        Dino;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      NewTarget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              AcceptableRadius;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.SetDinoAINavigationTargetActor
struct AMissionType_SetDinoAINavigationTargetActor_Params
{
	class APrimalDinoCharacter*                        Dino;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      NewTarget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.SetDinoAIForcedTargetActor
struct AMissionType_SetDinoAIForcedTargetActor_Params
{
	class APrimalDinoCharacter*                        Dino;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      NewTarget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.ServerRequestToggleWeapon
struct AMissionType_ServerRequestToggleWeapon_Params
{
	class AShooterCharacter*                           Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.SendNotificationToPlayer
struct AMissionType_SendNotificationToPlayer_Params
{
	class AShooterCharacter*                           Player;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       StringTagName;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                MessageColor;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	class UTexture2D*                                  MessageIcon;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DisplayTime;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DisplayScale;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsSingleton;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USoundBase*                                  SoundToPlay;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.SendNotificationToAllPlayers
struct AMissionType_SendNotificationToAllPlayers_Params
{
	struct FName                                       StringTagName;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                MessageColor;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	class UTexture2D*                                  MessageIcon;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DisplayTime;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DisplayScale;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsSingleton;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USoundBase*                                  SoundToPlay;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.SendMissionAlertToPlayer
struct AMissionType_SendMissionAlertToPlayer_Params
{
	class AShooterCharacter*                           Player;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_EMissionAlertType>         AlertType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     AlertTitle;                                                // (Parm, ZeroConstructor)
	TArray<struct FMissionAlertEntry>                  AlertEntries;                                              // (ConstParm, Parm, ZeroConstructor)
	float                                              DisplayTime;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USoundBase*                                  SoundToPlay;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               FlyoutFromTop;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bTreatStringsAsFnameTags;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.SendMissionAlertToAllPlayers
struct AMissionType_SendMissionAlertToAllPlayers_Params
{
	TEnumAsByte<ShooterGame_EMissionAlertType>         AlertType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     AlertTitle;                                                // (Parm, ZeroConstructor)
	TArray<struct FMissionAlertEntry>                  AlertEntries;                                              // (ConstParm, Parm, ZeroConstructor)
	float                                              DisplayTime;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USoundBase*                                  SoundToPlay;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               FlyoutFromTop;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bTreatStringsAsFnameTags;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.ReverseTeleportCharacter
struct AMissionType_ReverseTeleportCharacter_Params
{
	class APrimalCharacter*                            Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.ResetSplinePoints
struct AMissionType_ResetSplinePoints_Params
{
	class APrimalDinoCharacter*                        ForDino;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.ResetMissionTimer
struct AMissionType_ResetMissionTimer_Params
{
};

// Function ShooterGame.MissionType.RemovePlayerUsableItem
struct AMissionType_RemovePlayerUsableItem_Params
{
	class AShooterCharacter*                           Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ItemId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.RemovePlayerFromMission
struct AMissionType_RemovePlayerFromMission_Params
{
	class AShooterCharacter*                           PlayerCharacter;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bCompletedSuccessfully;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bRemoveSilently;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.RemoveItemsFromInventory_Balanced
struct AMissionType_RemoveItemsFromInventory_Balanced_Params
{
	bool                                               bIsBalanced;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class APrimalCharacter*>                    FromCharacters;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UClass*                                      ItemClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                TotalAmountToRemove;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bMoveToMissionInventory;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bOnlyRemoveIfEnough;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bExactClassMatch;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIgnoreHotbar;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.RemoveItemsFromInventory
struct AMissionType_RemoveItemsFromInventory_Params
{
	class UPrimalInventoryComponent*                   inventory;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class UClass*                                      ItemClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                AmountToRemove;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bMoveToMissionInventory;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bExactClassMatch;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIgnoreHotbar;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.ReAddPlayerFromReconnect
struct AMissionType_ReAddPlayerFromReconnect_Params
{
	class AShooterCharacter*                           Player;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.ReactivateSuspendedMission
struct AMissionType_ReactivateSuspendedMission_Params
{
};

// Function ShooterGame.MissionType.RacePlayerData_SetTargetCheckpoint
struct AMissionType_RacePlayerData_SetTargetCheckpoint_Params
{
	TArray<struct FRacePlayerData>                     InOutPlayerData;                                           // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                PlayerIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                NewTargetCheckpoint;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.RacePlayerData_SetCheckpointData
struct AMissionType_RacePlayerData_SetCheckpointData_Params
{
	TArray<struct FRacePlayerData>                     InOutPlayerData;                                           // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                PlayerIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                CheckpointIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bCheckpointReached;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              CheckpointTime;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.RacePlayerData_NumCheckpoints
struct AMissionType_RacePlayerData_NumCheckpoints_Params
{
	TArray<struct FRacePlayerData>                     PlayerData;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.RacePlayerData_Initialize
struct AMissionType_RacePlayerData_Initialize_Params
{
	TArray<struct FRacePlayerData>                     InOutPlayerData;                                           // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class AShooterPlayerController*>            Controllers;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                NumCheckpoints;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.RacePlayerData_IndexOfController
struct AMissionType_RacePlayerData_IndexOfController_Params
{
	TArray<struct FRacePlayerData>                     PlayerData;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class AShooterPlayerController*                    Controller;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.RacePlayerData_GetTargetCheckpoint
struct AMissionType_RacePlayerData_GetTargetCheckpoint_Params
{
	TArray<struct FRacePlayerData>                     PlayerData;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                PlayerIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.RacePlayerData_GetPlayerRanking
struct AMissionType_RacePlayerData_GetPlayerRanking_Params
{
	TArray<struct FRacePlayerData>                     PlayerData;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector                                     MissionStartLocation;                                      // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	TArray<class AMissionTrigger*>                     Checkpoints;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                PlayerIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.RacePlayerData_GetCheckpointData
struct AMissionType_RacePlayerData_GetCheckpointData_Params
{
	TArray<struct FRacePlayerData>                     PlayerData;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                PlayerIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                CheckpointIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bCheckpointReached;                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              CheckpointTime;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.RacePlayerData_GetAllPlayerRankings
struct AMissionType_RacePlayerData_GetAllPlayerRankings_Params
{
	TArray<struct FRacePlayerData>                     PlayerData;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<int>                                        OutRankings;                                               // (Parm, OutParm, ZeroConstructor)
	struct FVector                                     MissionStartLocation;                                      // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	TArray<class AMissionTrigger*>                     Checkpoints;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function ShooterGame.MissionType.RacePlayerData_FixupControllers
struct AMissionType_RacePlayerData_FixupControllers_Params
{
	TArray<struct FRacePlayerData>                     InOutPlayerData;                                           // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.RaceClosestPlayerToCheckpoint
struct AMissionType_RaceClosestPlayerToCheckpoint_Params
{
	TArray<struct FRacePlayerData>                     PlayerData;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector                                     MissionStartLocation;                                      // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	TArray<class AMissionTrigger*>                     Checkpoints;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                A;                                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	int                                                B;                                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.PostLoadWorldFixup
struct AMissionType_PostLoadWorldFixup_Params
{
};

// Function ShooterGame.MissionType.PlayMissionMusic
struct AMissionType_PlayMissionMusic_Params
{
	class USoundBase*                                  LoopingMusicToPlay;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.OpenLeaderboardsForPlayer
struct AMissionType_OpenLeaderboardsForPlayer_Params
{
	class AShooterCharacter*                           Player;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FLeaderboardRow>                     Rows;                                                      // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function ShooterGame.MissionType.OpenLeaderboardsForAllPlayers
struct AMissionType_OpenLeaderboardsForAllPlayers_Params
{
	TArray<struct FLeaderboardRow>                     Rows;                                                      // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function ShooterGame.MissionType.OnUpdateRequirements
struct AMissionType_OnUpdateRequirements_Params
{
	struct FName                                       PhaseName;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FMissionPhaseRequirement>            NewRequirements;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function ShooterGame.MissionType.OnThrottledTick
struct AMissionType_OnThrottledTick_Params
{
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.OnThrottledServerTick
struct AMissionType_OnThrottledServerTick_Params
{
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.OnThrottledClientTick
struct AMissionType_OnThrottledClientTick_Params
{
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.OnRep_MissionState
struct AMissionType_OnRep_MissionState_Params
{
};

// Function ShooterGame.MissionType.OnRep_MissionPhaseIndex
struct AMissionType_OnRep_MissionPhaseIndex_Params
{
};

// Function ShooterGame.MissionType.OnPlayerSpawned
struct AMissionType_OnPlayerSpawned_Params
{
	class AShooterCharacter*                           PlayerPawn;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.OnMissionTriggerEndOverlap
struct AMissionType_OnMissionTriggerEndOverlap_Params
{
	class AMissionTrigger*                             Trigger;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       TriggerKey;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      OtherActor;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                         OtherComp;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	int                                                OtherBodyIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.OnMissionTriggerBeginOverlap
struct AMissionType_OnMissionTriggerBeginOverlap_Params
{
	class AMissionTrigger*                             Trigger;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       TriggerKey;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      OtherActor;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                         OtherComp;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	int                                                OtherBodyIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.OnMissionPhaseStarted
struct AMissionType_OnMissionPhaseStarted_Params
{
	struct FName                                       OldPhase;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       NewPhase;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.OnMissionPhaseEvent__DelegateSignature
struct AMissionType_OnMissionPhaseEvent__DelegateSignature_Params
{
	class AMissionType*                                Mission;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       OldPhaseName;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       NewPhaseName;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.OnMissionPhaseEnded
struct AMissionType_OnMissionPhaseEnded_Params
{
	struct FName                                       OldPhase;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       NewPhase;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.OnMissionEvent__DelegateSignature
struct AMissionType_OnMissionEvent__DelegateSignature_Params
{
	class AMissionType*                                Mission;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.OnInventoryItemRemoved
struct AMissionType_OnInventoryItemRemoved_Params
{
	class UPrimalInventoryComponent*                   inventory;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                AmountRemoved;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.OnInventoryItemAdded
struct AMissionType_OnInventoryItemAdded_Params
{
	class UPrimalInventoryComponent*                   inventory;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                AmountAdded;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bEquippedItem;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.NumLivingPlayers
struct AMissionType_NumLivingPlayers_Params
{
	TArray<class AShooterCharacter*>                   PlayerArray;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.NumLivingDinos
struct AMissionType_NumLivingDinos_Params
{
	TArray<class APrimalDinoCharacter*>                DinoArray;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.NumLivingCharacters
struct AMissionType_NumLivingCharacters_Params
{
	TArray<class APrimalCharacter*>                    CharacterArray;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.NonStaticGetPhaseRequirementDescription
struct AMissionType_NonStaticGetPhaseRequirementDescription_Params
{
	struct FMissionPhaseRequirement                    Req;                                                       // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.MissionType.MultiResetMissionTimer
struct AMissionType_MultiResetMissionTimer_Params
{
	double                                             NewMissionStartNetworkTime;                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.MultiMissionStateChange
struct AMissionType_MultiMissionStateChange_Params
{
	TEnumAsByte<ShooterGame_EMissionState>             NewState;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.MultiMissionPhaseStarted
struct AMissionType_MultiMissionPhaseStarted_Params
{
	struct FName                                       OldPhaseName;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       NewPhaseName;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.MultiMissionPhaseEnded
struct AMissionType_MultiMissionPhaseEnded_Params
{
	struct FName                                       OldPhaseName;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       NewPhaseName;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.MissionPhaseHandler__DelegateSignature
struct AMissionType_MissionPhaseHandler__DelegateSignature_Params
{
	struct FName                                       OldPhaseName;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       NewPhaseName;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.MissionFindPathAsync
struct AMissionType_MissionFindPathAsync_Params
{
	class UObject*                                     WorldContext;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     PathStart;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     PathEnd;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	class AActor*                                      PathfindingContext;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      FilterClass;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.MissionAI_SetReversPathForDino
struct AMissionType_MissionAI_SetReversPathForDino_Params
{
	class APrimalDinoCharacter*                        ForDino;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ShouldReverseAtEnd;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.MissionAI_SetForcePathSplineForDino
struct AMissionType_MissionAI_SetForcePathSplineForDino_Params
{
	class APrimalDinoCharacter*                        ForDino;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USplineComponent*                            Path;                                                      // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.MissionAI_IsAtPathDestination
struct AMissionType_MissionAI_IsAtPathDestination_Params
{
	class APrimalDinoCharacter*                        ForDino;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MaxDistance;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     TargetOffset;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_ECollisionChannel>              TraceChannel;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DebugDrawDuration;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.MissionAI_GetTarget
struct AMissionType_MissionAI_GetTarget_Params
{
	class APrimalDinoCharacter*                        ForDino;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.MissionAI_GetMissionFromController
struct AMissionType_MissionAI_GetMissionFromController_Params
{
	class AActor*                                      ControllerActor;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_EBoolExecResult>           OutResult;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AMissionType*                                Mission;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalDinoCharacter*                        DinoPawn;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalDinoAIController*                     DinoController;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.MissionAI_FindPathToTarget
struct AMissionType_MissionAI_FindPathToTarget_Params
{
	class APrimalDinoCharacter*                        ForDino;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     NextTargetLocation;                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.ItemToAlertEntry
struct AMissionType_ItemToAlertEntry_Params
{
	class UPrimalItem*                                 Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMissionAlertEntry                          ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.MissionType.IsPlayerOnMission
struct AMissionType_IsPlayerOnMission_Params
{
	class AShooterCharacter*                           PlayerCharacter;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.IsPlayerEligibleForMission
struct AMissionType_IsPlayerEligibleForMission_Params
{
	class UClass*                                      MissionType;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                           Controller;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     Reason;                                                    // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.IsPhaseNameValid
struct AMissionType_IsPhaseNameValid_Params
{
	struct FName                                       Name;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.IsPhaseComplete
struct AMissionType_IsPhaseComplete_Params
{
	struct FName                                       PhaseName;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.IsMissionComplete
struct AMissionType_IsMissionComplete_Params
{
	class AShooterCharacter*                           forCharacter;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    ForController;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.IsMetaDataMissionType
struct AMissionType_IsMetaDataMissionType_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      MissionType;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.IsFriendlyWithAnyTargetingTeam
struct AMissionType_IsFriendlyWithAnyTargetingTeam_Params
{
	class APrimalCharacter*                            Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int>                                        TargetingTeams;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.IsFriendlyWithAllTargetingTeams
struct AMissionType_IsFriendlyWithAllTargetingTeams_Params
{
	class APrimalCharacter*                            Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int>                                        TargetingTeams;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.IsActive
struct AMissionType_IsActive_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.HasPlayerCompletedMissionByTag
struct AMissionType_HasPlayerCompletedMissionByTag_Params
{
	struct FName                                       MissionTagName;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                VersionCompleted;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                             UtcTimeCompleted;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.HasPlayerCompletedMission
struct AMissionType_HasPlayerCompletedMission_Params
{
	class UClass*                                      MissionType;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                VersionCompleted;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                             UtcTimeCompleted;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.GivePlayerXP
struct AMissionType_GivePlayerXP_Params
{
	class AShooterCharacter*                           Player;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              XPAmount;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.GivePlayerLoot
struct AMissionType_GivePlayerLoot_Params
{
	class AShooterCharacter*                           Player;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FLootTableEntry>                     LootTable;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class UPrimalItem*>                         ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.MissionType.GetTargetingTeamsOfAllPlayersOnMission
struct AMissionType_GetTargetingTeamsOfAllPlayersOnMission_Params
{
	TArray<int>                                        OutTargetingTeams;                                         // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.MissionType.GetTaggedString
struct AMissionType_GetTaggedString_Params
{
	struct FName                                       Tag;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     OutString;                                                 // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.GetReverseTeleportReturnLocation
struct AMissionType_GetReverseTeleportReturnLocation_Params
{
	class APrimalCharacter*                            Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReverseTeleportLocation;                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    ReverseTeleportRotation;                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.GetRemainingTime
struct AMissionType_GetRemainingTime_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.GetRealMissionTagFromMetaData
struct AMissionType_GetRealMissionTagFromMetaData_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      MissionType;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.GetPlayerUsableItems
struct AMissionType_GetPlayerUsableItems_Params
{
	class AShooterCharacter*                           Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FItemNetID>                          OutItemIDs;                                                // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.MissionType.GetPhaseRequirements
struct AMissionType_GetPhaseRequirements_Params
{
	struct FName                                       PhaseName;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FMissionPhaseRequirement>            Requirements;                                              // (Parm, OutParm, ZeroConstructor)
	class AShooterCharacter*                           ForPlayer;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.GetPhaseRequirementProgress
struct AMissionType_GetPhaseRequirementProgress_Params
{
	struct FMissionPhaseRequirement                    Req;                                                       // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.GetPhaseRequirementDescription
struct AMissionType_GetPhaseRequirementDescription_Params
{
	class UClass*                                      ForMission;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMissionPhaseRequirement                    Req;                                                       // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.MissionType.GetPhaseDisplayText
struct AMissionType_GetPhaseDisplayText_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.MissionType.GetPerPlayerWorldIndicators
struct AMissionType_GetPerPlayerWorldIndicators_Params
{
	class AShooterPlayerController*                    Controller;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FMissionWorldIndicator>              WorldIndicators;                                           // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.MissionType.GetNearbyStructures
struct AMissionType_GetNearbyStructures_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class APrimalStructure*>                    OutStructures;                                             // (Parm, OutParm, ZeroConstructor)
	class UClass*                                      StructureType;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bExactTypeMatch;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Location;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.GetNearbyPlayersEligibleForMission
struct AMissionType_GetNearbyPlayersEligibleForMission_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AShooterCharacter*>                   OutCharacters;                                             // (Parm, OutParm, ZeroConstructor)
	class UClass*                                      MissionType;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Location;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSortByDistanceToLocation;                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bRespectMissionMaxPlayerCount;                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                InTargetingTeam;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_ETargetingTeamBehavior>    TargetingTeamBehavior;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.GetNearbyPlayersAndTamedDinos
struct AMissionType_GetNearbyPlayersAndTamedDinos_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class APrimalCharacter*>                    OutCharacters;                                             // (Parm, OutParm, ZeroConstructor)
	struct FVector                                     Location;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                OnlyFriendlyWithTargetingTeam;                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.GetNearbyPlayers
struct AMissionType_GetNearbyPlayers_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AShooterCharacter*>                   OutCharacters;                                             // (Parm, OutParm, ZeroConstructor)
	struct FVector                                     Location;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                OnlyFriendlyWithTargetingTeam;                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.GetNearbyMissionDispatchers
struct AMissionType_GetNearbyMissionDispatchers_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      ForMissionType;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           ForPlayer;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     SearchOrigin;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	TArray<class AMissionDispatcher*>                  OutDispatchers;                                            // (Parm, OutParm, ZeroConstructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSortByDistance;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bRequireMissionInDisaptcher;                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.GetNearbyDinos
struct AMissionType_GetNearbyDinos_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class APrimalDinoCharacter*>                OutCharacters;                                             // (Parm, OutParm, ZeroConstructor)
	struct FVector                                     Location;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIncludeTamed;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIncludeWild;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                OnlyFriendlyWithTargetingTeam;                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.GetNearbyCharacters
struct AMissionType_GetNearbyCharacters_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class APrimalCharacter*>                    OutCharacters;                                             // (Parm, OutParm, ZeroConstructor)
	struct FVector                                     Location;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.GetMissionWorldIndicatorWorldLocation
struct AMissionType_GetMissionWorldIndicatorWorldLocation_Params
{
	struct FMissionWorldIndicator                      WorldIndicator;                                            // (ConstParm, Parm, OutParm, ReferenceParm)
	class APrimalCharacter*                            forCharacter;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.GetMissionWorldIndicatorIcon
struct AMissionType_GetMissionWorldIndicatorIcon_Params
{
	struct FMissionWorldIndicator                      WorldIndicator;                                            // (ConstParm, Parm, OutParm, ReferenceParm)
	class UTexture2D*                                  ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.GetMissionWorldIndicatorDescription
struct AMissionType_GetMissionWorldIndicatorDescription_Params
{
	class UClass*                                      FromMissionType;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMissionWorldIndicator                      WorldIndicator;                                            // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.MissionType.GetMissionTagForMission
struct AMissionType_GetMissionTagForMission_Params
{
	class UClass*                                      MissionType;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.GetMissionTag
struct AMissionType_GetMissionTag_Params
{
	struct FName                                       ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.GetMissionLeaderboardRows
struct AMissionType_GetMissionLeaderboardRows_Params
{
	TArray<struct FLeaderboardRow>                     OutRows;                                                   // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.GetMissionDurationInSeconds
struct AMissionType_GetMissionDurationInSeconds_Params
{
	class UClass*                                      MissionType;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.GetMissionDurationFromTag
struct AMissionType_GetMissionDurationFromTag_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.MissionType.GetMissionDisplayName
struct AMissionType_GetMissionDisplayName_Params
{
	class APlayerController*                           ShootCont;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.MissionType.GetMissionDataForCharacter
struct AMissionType_GetMissionDataForCharacter_Params
{
	class AShooterCharacter*                           Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bCreateIfMissing;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalBuff_MissionData*                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.GetMissionClassName
struct AMissionType_GetMissionClassName_Params
{
	struct FName                                       ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.GetMissionBuff
struct AMissionType_GetMissionBuff_Params
{
	class AShooterCharacter*                           Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalBuff*                                 ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.GetIntFromMissionType
struct AMissionType_GetIntFromMissionType_Params
{
	struct FName                                       Tag;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           PlayerPawn;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.GetDispatcherPointLocation
struct AMissionType_GetDispatcherPointLocation_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      ForMissionType;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.GetDifficultyString
struct AMissionType_GetDifficultyString_Params
{
	class UWorld*                                      World;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     diffString;                                                // (Parm, OutParm, ZeroConstructor)
	struct FLinearColor                                diffColor;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.GetCurrentWorldIndicators
struct AMissionType_GetCurrentWorldIndicators_Params
{
	TArray<struct FMissionWorldIndicator>              WorldIndicators;                                           // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.MissionType.GetCurrentSplineKeyTarget
struct AMissionType_GetCurrentSplineKeyTarget_Params
{
	class APrimalDinoCharacter*                        ForDino;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.GetCurrentMissionPhaseName
struct AMissionType_GetCurrentMissionPhaseName_Params
{
	struct FName                                       ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.GetCurrentMissionPhaseIndex
struct AMissionType_GetCurrentMissionPhaseIndex_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.GetAllPlayersOnMission
struct AMissionType_GetAllPlayersOnMission_Params
{
	TArray<class AShooterCharacter*>                   OutCharacters;                                             // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.MissionType.GetAllPlayerControllersOnMission
struct AMissionType_GetAllPlayerControllersOnMission_Params
{
	TArray<class AShooterPlayerController*>            OutControllers;                                            // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.MissionType.GetAllPlayerControllersInvolvedInMission
struct AMissionType_GetAllPlayerControllersInvolvedInMission_Params
{
	TArray<class AShooterPlayerController*>            OutPlayerControllers;                                      // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.MissionType.GetAllPlayerCharactersInvolvedInMission
struct AMissionType_GetAllPlayerCharactersInvolvedInMission_Params
{
	TArray<class AShooterCharacter*>                   OutPlayerCharacters;                                       // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.MissionType.GetAllMissionTriggersWithKey
struct AMissionType_GetAllMissionTriggersWithKey_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       TriggerKey;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AMissionTrigger*>                     OutTriggerActors;                                          // (Parm, OutParm, ZeroConstructor)
	bool                                               bSortByTriggerOrder;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bReverseSort;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.GetAllMissionTriggerKeys
struct AMissionType_GetAllMissionTriggerKeys_Params
{
	TArray<struct FName>                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.MissionType.GetAllMissionSplinesWithKey
struct AMissionType_GetAllMissionSplinesWithKey_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       TriggerKey;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AMissionSpline*>                      OutSplineActors;                                           // (Parm, OutParm, ZeroConstructor)
	bool                                               bSortByTriggerOrder;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bReverseSort;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.GetAllMissionServerSidePointsWithKey
struct AMissionType_GetAllMissionServerSidePointsWithKey_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       TriggerKey;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AMissionServerSidePoint*>             OutServerSidePointActors;                                  // (Parm, OutParm, ZeroConstructor)
	bool                                               bSortByTriggerOrder;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bReverseSort;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bExcludeMissionBounds;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.GeneratePhaseRequirements
struct AMissionType_GeneratePhaseRequirements_Params
{
	struct FName                                       PhaseName;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FMissionPhaseRequirement>            Requirements;                                              // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.MissionType.GeneratePerPlayerPhaseRequirements
struct AMissionType_GeneratePerPlayerPhaseRequirements_Params
{
	class AShooterPlayerController*                    Controller;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       PhaseName;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FMissionPhaseRequirement>            Requirements;                                              // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.MissionType.FindMissionsMatchingTag
struct AMissionType_FindMissionsMatchingTag_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UClass*>                              Missions;                                                  // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.MissionType.FindClosestSplineActorWithTriggerKey
struct AMissionType_FindClosestSplineActorWithTriggerKey_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     WorldLocation;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FName                                       TriggerKey;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AMissionSpline*                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.FindClosestSplineActor
struct AMissionType_FindClosestSplineActor_Params
{
	struct FVector                                     WorldLocation;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	TArray<class AMissionSpline*>                      Splines;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class AMissionSpline*                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.FindClosestPathingSpline
struct AMissionType_FindClosestPathingSpline_Params
{
	struct FVector                                     WorldLocation;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	class USplineComponent*                            ReturnValue;                                               // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.FinalizeMissionPrep
struct AMissionType_FinalizeMissionPrep_Params
{
	bool                                               bForceAdd;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.DeactivateMission
struct AMissionType_DeactivateMission_Params
{
};

// Function ShooterGame.MissionType.CountMissionLeaderboardRows
struct AMissionType_CountMissionLeaderboardRows_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.CountInventoryItemsFromAllPlayersInMission
struct AMissionType_CountInventoryItemsFromAllPlayersInMission_Params
{
	class UClass*                                      ItemType;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bRequireExactClassMatch;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.CountInventoryItems
struct AMissionType_CountInventoryItems_Params
{
	class APrimalCharacter*                            Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      ItemType;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bRequireExactClassMatch;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.ClearReverseTeleportReturnLocation
struct AMissionType_ClearReverseTeleportReturnLocation_Params
{
	class APrimalCharacter*                            Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.ClearDinoAINavigationTargetActor
struct AMissionType_ClearDinoAINavigationTargetActor_Params
{
	class APrimalDinoCharacter*                        Dino;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.ClearDinoAIForcedTargetActor
struct AMissionType_ClearDinoAIForcedTargetActor_Params
{
	class APrimalDinoCharacter*                        Dino;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.CleanupInvalidPlayers
struct AMissionType_CleanupInvalidPlayers_Params
{
	bool                                               RemoveIfInvalid;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.CanStartPhase
struct AMissionType_CanStartPhase_Params
{
	struct FName                                       PhaseName;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.CanStartMission
struct AMissionType_CanStartMission_Params
{
	class UClass*                                      MissionType;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                           Controller;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ClientFailureReason;                                       // (Parm, OutParm, ZeroConstructor)
	class AActor*                                      OutMissionDispatcher;                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.CalcXPRatio
struct AMissionType_CalcXPRatio_Params
{
	TEnumAsByte<ShooterGame_ELevelExperienceRampType>  RampType;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                Level;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Ratio;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.CalculateMissionExperienceForPlayer
struct AMissionType_CalculateMissionExperienceForPlayer_Params
{
	class AShooterCharacter*                           Player;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.BPTryCompletePhase
struct AMissionType_BPTryCompletePhase_Params
{
	struct FName                                       PhaseName;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.BPStaticIsPlayerEligibleForMission
struct AMissionType_BPStaticIsPlayerEligibleForMission_Params
{
	class APlayerController*                           Controller;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           PlayerPawn;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalBuff_MissionData*                     PlayerMissionData;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     OutReason;                                                 // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.BPStaticCanStartMission
struct AMissionType_BPStaticCanStartMission_Params
{
	class APlayerController*                           Controller;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           PlayerPawn;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalBuff_MissionData*                     PlayerMissionData;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ClientFailureReason;                                       // (Parm, OutParm, ZeroConstructor)
	class AActor*                                      OutSelectedMissionDispatcher;                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.BPPhaseNameToIndex
struct AMissionType_BPPhaseNameToIndex_Params
{
	struct FName                                       Name;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIndexIsValid;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.BPOverrideRandomWanderLocation
struct AMissionType_BPOverrideRandomWanderLocation_Params
{
	class APrimalDinoCharacter*                        Dino;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     inVec;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     outVec;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.BPOverrideMissionTimerColor
struct AMissionType_BPOverrideMissionTimerColor_Params
{
	class AShooterPlayerController*                    ShooterContr;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                DefaultColor;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FLinearColor                                CurrentColor;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FLinearColor                                TimerOverrideColor;                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.BPOverrideMissionIndicatorString
struct AMissionType_BPOverrideMissionIndicatorString_Params
{
	class AShooterCharacter*                           forCharacter;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMissionWorldIndicator                      Indicator;                                                 // (Parm)
	struct FString                                     String;                                                    // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.MissionType.BPOnReceivedMissionPathFindingResult
struct AMissionType_BPOnReceivedMissionPathFindingResult_Params
{
	int                                                ID;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UNavigationPath*                             Path;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	unsigned char                                      Result;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.BPOnPlayerRemovedFromMission
struct AMissionType_BPOnPlayerRemovedFromMission_Params
{
	class AShooterCharacter*                           Player;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    Controller;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bFromMissionCompleteEvent;                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bLastPhaseSuccess;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.BPOnPlayerAddedToMission
struct AMissionType_BPOnPlayerAddedToMission_Params
{
	class AShooterCharacter*                           Player;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    Controller;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.BPOnMissionTriggerEndOverlap
struct AMissionType_BPOnMissionTriggerEndOverlap_Params
{
	class AMissionTrigger*                             Trigger;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      OtherActor;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                         OtherComp;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	int                                                OtherBodyIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.BPOnMissionTriggerBeginOverlap
struct AMissionType_BPOnMissionTriggerBeginOverlap_Params
{
	class AMissionTrigger*                             Trigger;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      OtherActor;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                         OtherComp;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	int                                                OtherBodyIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.BPOnMissionTimedOut
struct AMissionType_BPOnMissionTimedOut_Params
{
};

// Function ShooterGame.MissionType.BPOnMissionSuspended
struct AMissionType_BPOnMissionSuspended_Params
{
};

// Function ShooterGame.MissionType.BPOnMissionStructureDestroyed
struct AMissionType_BPOnMissionStructureDestroyed_Params
{
	class APrimalStructure*                            Structure;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              KillingDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	class AController*                                 Killer;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.BPOnMissionStructureDamage
struct AMissionType_BPOnMissionStructureDamage_Params
{
	class APrimalStructure*                            Structure;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Damage;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	class AController*                                 EventInstigator;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.BPOnMissionServerSetup
struct AMissionType_BPOnMissionServerSetup_Params
{
};

// Function ShooterGame.MissionType.BPOnMissionPlayerRespawned
struct AMissionType_BPOnMissionPlayerRespawned_Params
{
	class AShooterCharacter*                           Player;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    Controller;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.BPOnMissionPlayerRemovedInventoryItem
struct AMissionType_BPOnMissionPlayerRemovedInventoryItem_Params
{
	class AShooterCharacter*                           Player;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalInventoryComponent*                   inventory;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                AmountRemoved;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.BPOnMissionPlayerDied
struct AMissionType_BPOnMissionPlayerDied_Params
{
	class AShooterCharacter*                           Player;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    Controller;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              KillingDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	class AController*                                 Killer;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.BPOnMissionPlayerAddedInventoryItem
struct AMissionType_BPOnMissionPlayerAddedInventoryItem_Params
{
	class AShooterCharacter*                           Player;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalInventoryComponent*                   inventory;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                AmountAdded;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bEquippedItem;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.BPOnMissionDroppedItemPickedUp
struct AMissionType_BPOnMissionDroppedItemPickedUp_Params
{
	class ADroppedItemMission*                         DroppedItem;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                           ByPC;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 InventoryItem;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.BPOnMissionDinoDied
struct AMissionType_BPOnMissionDinoDied_Params
{
	class APrimalDinoCharacter*                        Dino;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              KillingDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	class AController*                                 Killer;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.BPOnMissionDinoDamage
struct AMissionType_BPOnMissionDinoDamage_Params
{
	class APrimalDinoCharacter*                        Dino;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Damage;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	class AController*                                 EventInstigator;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.BPOnMissionDeactivated
struct AMissionType_BPOnMissionDeactivated_Params
{
};

// Function ShooterGame.MissionType.BPOnMissionComplete
struct AMissionType_BPOnMissionComplete_Params
{
	class AShooterCharacter*                           ForPlayer;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    ForController;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bLastPhaseSuccess;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              XPRewarded;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UPrimalItem*>                         ItemsRewarded;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function ShooterGame.MissionType.BPOnMissionCheat
struct AMissionType_BPOnMissionCheat_Params
{
	struct FName                                       CheatName;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSetValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Value;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.BPOnMissionActivated
struct AMissionType_BPOnMissionActivated_Params
{
};

// Function ShooterGame.MissionType.BPIsPhaseComplete
struct AMissionType_BPIsPhaseComplete_Params
{
	struct FName                                       PhaseName;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.BPGetPhaseDisplayText
struct AMissionType_BPGetPhaseDisplayText_Params
{
	struct FName                                       PhaseName;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.MissionType.BPGetMissionTimerText
struct AMissionType_BPGetMissionTimerText_Params
{
	class AShooterPlayerController*                    ShootCont;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.MissionType.BPGetMissionTargetingDesire
struct AMissionType_BPGetMissionTargetingDesire_Params
{
	class APrimalDinoCharacter*                        MissionDino;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      forTarget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ForTargetingDesireValue;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.BPGetMissionDurationText
struct AMissionType_BPGetMissionDurationText_Params
{
	class AShooterPlayerController*                    ShootCont;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.MissionType.BPGetMetaTagsAsInts
struct AMissionType_BPGetMetaTagsAsInts_Params
{
	TArray<int>                                        OutTagIds;                                                 // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.MissionType.BPGetExtraLocalMissionIndicators
struct AMissionType_BPGetExtraLocalMissionIndicators_Params
{
	class APlayerController*                           Controller;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           PlayerPawn;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FMissionWorldIndicator>              IndicatorsIn;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FMissionWorldIndicator>              IndicatorsOut;                                             // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.MissionType.BPGenerateMissionRewards
struct AMissionType_BPGenerateMissionRewards_Params
{
	struct FCharacterAndControllerPair                 Player;                                                    // (Parm)
	bool                                               bCompletedSuccessfully;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              XPReward;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UPrimalItem*>                         GeneratedItems;                                            // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.MissionType.BPCanRideMissionDino
struct AMissionType_BPCanRideMissionDino_Params
{
	class AShooterCharacter*                           Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalDinoCharacter*                        Dino;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.BPAllowTimeout
struct AMissionType_BPAllowTimeout_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.BPAllowPlayerToLeaveMission
struct AMissionType_BPAllowPlayerToLeaveMission_Params
{
	class AShooterCharacter*                           PlayerPawn;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.AllowMissionCreation
struct AMissionType_AllowMissionCreation_Params
{
	class AShooterCharacter*                           forCharacter;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Location;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	class AActor*                                      MissionDispatcherActor;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     FailureReason;                                             // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.AddPlayerUsableItem
struct AMissionType_AddPlayerUsableItem_Params
{
	class AShooterCharacter*                           Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.AddPlayerToMission
struct AMissionType_AddPlayerToMission_Params
{
	class AShooterCharacter*                           PlayerCharacter;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceAdd;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.AddPlayersInRadiusToMission
struct AMissionType_AddPlayersInRadiusToMission_Params
{
	struct FVector                                     WorldLocation;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                MaxPlayersToAdd;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bPrioritizeByDistanceToWorldLocation;                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                InTargetingTeam;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_ETargetingTeamBehavior>    TargetingTeamBehavior;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceAdd;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType.AddMissionLeaderboardRow
struct AMissionType_AddMissionLeaderboardRow_Params
{
	class AShooterPlayerController*                    Controller;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                             NetworkTime;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              FloatValue;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                IntValue;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       NameValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     StringValue;                                               // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.NewMissionModuleBase.TriggerHandleMissionModuleBegin
struct UNewMissionModuleBase_TriggerHandleMissionModuleBegin_Params
{
};

// Function ShooterGame.NewMissionModuleBase.SetOuter
struct UNewMissionModuleBase_SetOuter_Params
{
	class AMissionType_ModularMissionBase*             NewOuter;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.NewMissionModuleBase.RunSubModulesOnComplete
struct UNewMissionModuleBase_RunSubModulesOnComplete_Params
{
};

// Function ShooterGame.NewMissionModuleBase.RunSubModulesAtStart
struct UNewMissionModuleBase_RunSubModulesAtStart_Params
{
};

// Function ShooterGame.NewMissionModuleBase.OnOuterDestroyed
struct UNewMissionModuleBase_OnOuterDestroyed_Params
{
};

// Function ShooterGame.NewMissionModuleBase.HandleMissionTriggerOverlapEnd
struct UNewMissionModuleBase_HandleMissionTriggerOverlapEnd_Params
{
	class AMissionTrigger*                             Trigger;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      OtherActor;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                         OtherComp;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	int                                                OtherBodyIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.NewMissionModuleBase.HandleMissionTriggerOverlapBegin
struct UNewMissionModuleBase_HandleMissionTriggerOverlapBegin_Params
{
	class AMissionTrigger*                             Trigger;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      OtherActor;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                         OtherComp;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	int                                                OtherBodyIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.NewMissionModuleBase.HandleMissionStructureDestroyed
struct UNewMissionModuleBase_HandleMissionStructureDestroyed_Params
{
	class APrimalStructure*                            Structure;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              KillingDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (Parm)
	class AController*                                 Killer;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.NewMissionModuleBase.HandleMissionStructureDamaged
struct UNewMissionModuleBase_HandleMissionStructureDamaged_Params
{
	class APrimalStructure*                            Structure;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              KillingDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (Parm)
	class AController*                                 Killer;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.NewMissionModuleBase.HandleMissionProjectileExploded
struct UNewMissionModuleBase_HandleMissionProjectileExploded_Params
{
	class AShooterProjectile*                          Projectile;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.NewMissionModuleBase.HandleMissionPlayerRemovedInventoryItem
struct UNewMissionModuleBase_HandleMissionPlayerRemovedInventoryItem_Params
{
	class AShooterCharacter*                           Player;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalInventoryComponent*                   inventory;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                AmountRemoved;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.NewMissionModuleBase.HandleMissionPlayerAddedInventoryItem
struct UNewMissionModuleBase_HandleMissionPlayerAddedInventoryItem_Params
{
	class AShooterCharacter*                           Player;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalInventoryComponent*                   inventory;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                AmountAdded;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bEquippedItem;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.NewMissionModuleBase.HandleMissionModuleEnd
struct UNewMissionModuleBase_HandleMissionModuleEnd_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.NewMissionModuleBase.HandleMissionModuleBegin
struct UNewMissionModuleBase_HandleMissionModuleBegin_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.NewMissionModuleBase.HandleMissionGetPerPlayerIndicators
struct UNewMissionModuleBase_HandleMissionGetPerPlayerIndicators_Params
{
	class AShooterCharacter*                           Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FMissionWorldIndicator>              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.NewMissionModuleBase.HandleMissionDroppedItemPickedUp
struct UNewMissionModuleBase_HandleMissionDroppedItemPickedUp_Params
{
	class ADroppedItemMission*                         DroppedItem;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                           PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.NewMissionModuleBase.HandleMissionDinoDied
struct UNewMissionModuleBase_HandleMissionDinoDied_Params
{
	class APrimalDinoCharacter*                        Dino;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              KillingDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	class AController*                                 Killer;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.NewMissionModuleBase.HandleMissionDinoDamaged
struct UNewMissionModuleBase_HandleMissionDinoDamaged_Params
{
	class APrimalDinoCharacter*                        Dino;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Damage;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	class AController*                                 EventInstigator;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.NewMissionModuleBase.HandleLastMissionStructureDestroyed
struct UNewMissionModuleBase_HandleLastMissionStructureDestroyed_Params
{
	class APrimalStructure*                            Structure;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              KillingDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (Parm)
	class AController*                                 Killer;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.NewMissionModuleBase.HandleLastMissionProjectileExploded
struct UNewMissionModuleBase_HandleLastMissionProjectileExploded_Params
{
	class AShooterProjectile*                          Projectile;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.NewMissionModuleBase.HandleLastMissionDinoDied
struct UNewMissionModuleBase_HandleLastMissionDinoDied_Params
{
	class APrimalDinoCharacter*                        Dino;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              KillingDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (Parm)
	class AController*                                 Killer;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.NewMissionModuleBase.GetWorld
struct UNewMissionModuleBase_GetWorld_Params
{
	class UWorld*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.NewMissionModuleBase.GetModuleRequirementsTitle
struct UNewMissionModuleBase_GetModuleRequirementsTitle_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.NewMissionModuleBase.GetModuleRequirementsMessage
struct UNewMissionModuleBase_GetModuleRequirementsMessage_Params
{
	TArray<struct FMissionPhaseRequirement>            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.NewMissionModuleBase.BPGetTargetingDesire
struct UNewMissionModuleBase_BPGetTargetingDesire_Params
{
	class APrimalDinoCharacter*                        MissionDino;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      forTarget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ForTargetingDesireValue;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType_ModularMissionBase.SpawnActorForMissionModule
struct AMissionType_ModularMissionBase_SpawnActorForMissionModule_Params
{
	class UClass*                                      ActorClass;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct UObject_FTransform                          ActorTransform;                                            // (Parm, IsPlainOldData, NoDestructor)
	bool                                               bSpawnEvenIfColliding;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType_ModularMissionBase.SetupMissionModules
struct AMissionType_ModularMissionBase_SetupMissionModules_Params
{
};

// Function ShooterGame.MissionType_ModularMissionBase.RemoveSpecialWorldIndicator
struct AMissionType_ModularMissionBase_RemoveSpecialWorldIndicator_Params
{
	struct FMissionWorldIndicator                      IndicatorToRemove;                                         // (Parm)
};

// Function ShooterGame.MissionType_ModularMissionBase.RemoveAllSpecialWorldIndicators
struct AMissionType_ModularMissionBase_RemoveAllSpecialWorldIndicators_Params
{
};

// Function ShooterGame.MissionType_ModularMissionBase.RegisterProjectile
struct AMissionType_ModularMissionBase_RegisterProjectile_Params
{
	class AShooterProjectile*                          theProjectile;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType_ModularMissionBase.MultiMissionSpawnCosmetic
struct AMissionType_ModularMissionBase_MultiMissionSpawnCosmetic_Params
{
	class USoundBase*                                  SoundTemplate;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystem*                             ParticleTemplate;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct UObject_FTransform                          TheTransform;                                              // (Parm, IsPlainOldData, NoDestructor)
	float                                              OverrideTimeDilation;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType_ModularMissionBase.MultiFireProjectiles
struct AMissionType_ModularMissionBase_MultiFireProjectiles_Params
{
	class UClass*                                      ProjectileClass;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Location;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Velocity;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                              SubprojectileTargets;                                      // (ConstParm, Parm, ZeroConstructor)
	class AActor*                                      FiringActor;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType_ModularMissionBase.MultiDeactivateWarmerColderHUD
struct AMissionType_ModularMissionBase_MultiDeactivateWarmerColderHUD_Params
{
};

// Function ShooterGame.MissionType_ModularMissionBase.MultiActivateWarmerColderHUD
struct AMissionType_ModularMissionBase_MultiActivateWarmerColderHUD_Params
{
	struct FHUDElement                                 Background;                                                // (Parm)
	struct FHUDElement                                 Icon;                                                      // (Parm)
	float                                              MinAlpha;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MaxAlpha;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              AlphaPower;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                RightColor;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                WrongColor;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bClearLocationsFirst;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FVector>                             Locations;                                                 // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.MissionType_ModularMissionBase.MissionSpawnCosmetic
struct AMissionType_ModularMissionBase_MissionSpawnCosmetic_Params
{
	class USoundBase*                                  SoundTemplate;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystem*                             ParticleTemplate;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct UObject_FTransform                          TheTransform;                                              // (Parm, IsPlainOldData, NoDestructor)
	float                                              OverrideTimeDilation;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType_ModularMissionBase.FireProjectiles
struct AMissionType_ModularMissionBase_FireProjectiles_Params
{
	class UClass*                                      ProjectileClass;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Location;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Velocity;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                              SubprojectileTargets;                                      // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class AActor*                                      FiringActor;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterProjectile*                          ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType_ModularMissionBase.ExecuteNextMissionModule
struct AMissionType_ModularMissionBase_ExecuteNextMissionModule_Params
{
};

// Function ShooterGame.MissionType_ModularMissionBase.DeactivateWarmerColderHUD
struct AMissionType_ModularMissionBase_DeactivateWarmerColderHUD_Params
{
};

// Function ShooterGame.MissionType_ModularMissionBase.CreateLeaderboardEntry
struct AMissionType_ModularMissionBase_CreateLeaderboardEntry_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType_ModularMissionBase.BPOnMissionProjectileExpoloded
struct AMissionType_ModularMissionBase_BPOnMissionProjectileExpoloded_Params
{
	class AShooterProjectile*                          theProjectile;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.MissionType_ModularMissionBase.AddSpecialWorldIndicator
struct AMissionType_ModularMissionBase_AddSpecialWorldIndicator_Params
{
	struct FMissionWorldIndicator                      IndicatorToAdd;                                            // (Parm)
};

// Function ShooterGame.MissionType_ModularMissionBase.ActivateWarmerColderHUD
struct AMissionType_ModularMissionBase_ActivateWarmerColderHUD_Params
{
	struct FHUDElement                                 Background;                                                // (Parm)
	struct FHUDElement                                 Icon;                                                      // (Parm)
	float                                              MinAlpha;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MaxAlpha;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              AlphaPower;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                RightColor;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                WrongColor;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bClearLocationsFirst;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FVector>                             Locations;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function ShooterGame.NPCZoneManager.StaticSpawnNPCs
struct ANPCZoneManager_StaticSpawnNPCs_Params
{
	class UObject*                                     WorldContext;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ANPCZoneManager*                             AtZoneManager;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      TheNPCSpawnEntries;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     AtSpawnPoint;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    AtRotation;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                UseSpawnVolumeIndex;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class APrimalDinoCharacter*>                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.NPCZoneManager.CheckIncreaseNPC
struct ANPCZoneManager_CheckIncreaseNPC_Params
{
};

// Function ShooterGame.NPCZoneVolume.OnEndOverlap
struct ANPCZoneVolume_OnEndOverlap_Params
{
	class AActor*                                      Actor;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.NPCZoneVolume.OnBeginOverlap
struct ANPCZoneVolume_OnBeginOverlap_Params
{
	class AActor*                                      Actor;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ObjectMap.Init
struct UObjectMap_Init_Params
{
	int                                                InSizeX;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                InSizeY;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                InCellSize;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ObjectMap.GetSizeY
struct UObjectMap_GetSizeY_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ObjectMap.GetSizeX
struct UObjectMap_GetSizeX_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ObjectMap.GetSize
struct UObjectMap_GetSize_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PaintingStreamingComponent.ServerSendNextChunk
struct UPaintingStreamingComponent_ServerSendNextChunk_Params
{
	class UStructurePaintingComponent*                 PaintingComponent;                                         // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PaintingStreamingComponent.ServerRequestPaintingStream
struct UPaintingStreamingComponent_ServerRequestPaintingStream_Params
{
	class UStructurePaintingComponent*                 PaintingComponent;                                         // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PaintingStreamingComponent.ServerCancelPaintingStream
struct UPaintingStreamingComponent_ServerCancelPaintingStream_Params
{
	class UStructurePaintingComponent*                 PaintingComponent;                                         // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PaintingStreamingComponent.ClientRecieveChunk
struct UPaintingStreamingComponent_ClientRecieveChunk_Params
{
	class UStructurePaintingComponent*                 PaintingComponent;                                         // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	TArray<unsigned char>                              Bytes;                                                     // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.PaintingStreamingComponent.ClientEndStreamingJob
struct UPaintingStreamingComponent_ClientEndStreamingJob_Params
{
	class UStructurePaintingComponent*                 PaintingComponent;                                         // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PaintingStreamingComponent.ClientCancelSteamingJob
struct UPaintingStreamingComponent_ClientCancelSteamingJob_Params
{
	class UStructurePaintingComponent*                 PaintingComponent;                                         // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PaintingStreamingComponent.ClientBeginStreamingJob
struct UPaintingStreamingComponent_ClientBeginStreamingJob_Params
{
	class UStructurePaintingComponent*                 PaintingComponent;                                         // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	int                                                Revision;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PointOfInterestActor.RefreshPointData
struct APointOfInterestActor_RefreshPointData_Params
{
};

// Function ShooterGame.PointOfInterestActor.IsPointOfInterestValid
struct APointOfInterestActor_IsPointOfInterestValid_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PointOfInterestActor.GetMyPointOfInterestData
struct APointOfInterestActor_GetMyPointOfInterestData_Params
{
	struct FPointOfInterestData                        ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.PointOfInterestActor.GetMyPointOfInterestCompanionBehavior
struct APointOfInterestActor_GetMyPointOfInterestCompanionBehavior_Params
{
	struct FPointOfInterestCompanionBehavior           ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.PrimalBuff.UpdateStaticPathingDestination
struct APrimalBuff_UpdateStaticPathingDestination_Params
{
	struct FVector                                     locOverride;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              randomOffsetMultiplier;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               useRandomNegativeXDir;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               orientRandOffsetByRotation;                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    randOffsetByRotation;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              GroundCheckSpreadOverride;                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.UpdateBuffPersistentData
struct APrimalBuff_UpdateBuffPersistentData_Params
{
};

// Function ShooterGame.PrimalBuff.UpdateBuffLifetime
struct APrimalBuff_UpdateBuffLifetime_Params
{
	float                                              NewLifetime;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bRestartBuffLifetime;                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.StaticAddBuff
struct APrimalBuff_StaticAddBuff_Params
{
	class UClass*                                      BuffClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalCharacter*                            forCharacter;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 AssociatedItem;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceOnClient;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalBuff*                                 ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.ShouldForceOwnerDedicatedMovementTickPerFrame
struct APrimalBuff_ShouldForceOwnerDedicatedMovementTickPerFrame_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.SetValueToAddPerSecond
struct APrimalBuff_SetValueToAddPerSecond_Params
{
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> StatusValueType;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Value;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.SetupForInstigator
struct APrimalBuff_SetupForInstigator_Params
{
};

// Function ShooterGame.PrimalBuff.SetBuffCauser
struct APrimalBuff_SetBuffCauser_Params
{
	class AActor*                                      CausedBy;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.ServerRequestRelatedMissionData
struct APrimalBuff_ServerRequestRelatedMissionData_Params
{
};

// Function ShooterGame.PrimalBuff.ResetServerBuffTick
struct APrimalBuff_ResetServerBuffTick_Params
{
	float                                              MinTime;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MaxTime;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.ResetClientBuffTick
struct APrimalBuff_ResetClientBuffTick_Params
{
	float                                              MinTime;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MaxTime;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.ResetBuffStart
struct APrimalBuff_ResetBuffStart_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.ReduceBuffTime
struct APrimalBuff_ReduceBuffTime_Params
{
	float                                              AmountOfTimeToReduce;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.PreventJump
struct APrimalBuff_PreventJump_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.PreventInstigatorMovementMode
struct APrimalBuff_PreventInstigatorMovementMode_Params
{
	TEnumAsByte<Engine_EMovementMode>                  NewMovementMode;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	unsigned char                                      NewCustomMode;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.PreventInstigatorAttack
struct APrimalBuff_PreventInstigatorAttack_Params
{
	int                                                AttackIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.PreventBlockingWithShield
struct APrimalBuff_PreventBlockingWithShield_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.PreventActorTargeting
struct APrimalBuff_PreventActorTargeting_Params
{
	class AActor*                                      ByActor;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.OnOwnerTeleported
struct APrimalBuff_OnOwnerTeleported_Params
{
};

// Function ShooterGame.PrimalBuff.OnInputEvent
struct APrimalBuff_OnInputEvent_Params
{
	class APrimalCharacter*                            ForPrimalCharacter;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_EPrimalCharacterInputType> inputType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.OnCapsuleHitCallback
struct APrimalBuff_OnCapsuleHitCallback_Params
{
	class AActor*                                      OtherActor;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                         OtherComp;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FVector                                     NormalImpulse;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                                  Hit;                                                       // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.PrimalBuff.OnBuffLifetimeUpdated
struct APrimalBuff_OnBuffLifetimeUpdated_Params
{
};

// Function ShooterGame.PrimalBuff.NotifyDamage
struct APrimalBuff_NotifyDamage_Params
{
	float                                              DamageAmount;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      DamageClass;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AController*                                 EventInstigator;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      TheDamageCauser;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.NotifyBumpedPawn
struct APrimalBuff_NotifyBumpedPawn_Params
{
	class APrimalCharacter*                            BumpedPawn;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.NotifyBumpedByPawn
struct APrimalBuff_NotifyBumpedByPawn_Params
{
	class APrimalCharacter*                            BumpedBy;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.NetSyncBuffLifetime
struct APrimalBuff_NetSyncBuffLifetime_Params
{
};

// Function ShooterGame.PrimalBuff.NetResetBuffStart
struct APrimalBuff_NetResetBuffStart_Params
{
};

// Function ShooterGame.PrimalBuff.NetDeactivate
struct APrimalBuff_NetDeactivate_Params
{
};

// Function ShooterGame.PrimalBuff.Multi_SyncBuffLifetime
struct APrimalBuff_Multi_SyncBuffLifetime_Params
{
	float                                              NewDeactivateAfterTime;                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.IsOwningClient
struct APrimalBuff_IsOwningClient_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.InterceptInstigatorPlayerEmoteAnim
struct APrimalBuff_InterceptInstigatorPlayerEmoteAnim_Params
{
	class UAnimMontage*                                EmoteAnim;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.InstigatorDie
struct APrimalBuff_InstigatorDie_Params
{
};

// Function ShooterGame.PrimalBuff.HideBuffFromHUD
struct APrimalBuff_HideBuffFromHUD_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.HandleBuffAnimNotify
struct APrimalBuff_HandleBuffAnimNotify_Params
{
	struct FName                                       AnimNotifyName;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     AnimNotifyStringData;                                      // (Parm, ZeroConstructor)
};

// Function ShooterGame.PrimalBuff.GetValueToAddPerSecond
struct APrimalBuff_GetValueToAddPerSecond_Params
{
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> StatusValueType;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.GetUniqueName
struct APrimalBuff_GetUniqueName_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalBuff.GetTimeLeft
struct APrimalBuff_GetTimeLeft_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.GetRemainingTime
struct APrimalBuff_GetRemainingTime_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.GetOverrideWaterJumpVelocity
struct APrimalBuff_GetOverrideWaterJumpVelocity_Params
{
	float                                              OutOfWaterZ;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.GetInstigatorPlayerController
struct APrimalBuff_GetInstigatorPlayerController_Params
{
	class APlayerController*                           ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.GetHUDProgressBarPercent
struct APrimalBuff_GetHUDProgressBarPercent_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.GetForcedBuffAimOverride
struct APrimalBuff_GetForcedBuffAimOverride_Params
{
	bool                                               bIsWeaponAim;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.GetDebugInfoString
struct APrimalBuff_GetDebugInfoString_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalBuff.GetDeactivationTime
struct APrimalBuff_GetDeactivationTime_Params
{
	double                                             ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.GetBuffType
struct APrimalBuff_GetBuffType_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.GetBuffTickServerDeltaTime
struct APrimalBuff_GetBuffTickServerDeltaTime_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.GetBuffTickClientDeltaTime
struct APrimalBuff_GetBuffTickClientDeltaTime_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.GetBuffPostprocessMaterial
struct APrimalBuff_GetBuffPostprocessMaterial_Params
{
	class UMaterialInstanceDynamic*                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.GetBuffPostprocessIntensity
struct APrimalBuff_GetBuffPostprocessIntensity_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.GetBuffDescription
struct APrimalBuff_GetBuffDescription_Params
{
	struct FStatusValueModifierDescription             ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.PrimalBuff.ExtendBuffTime
struct APrimalBuff_ExtendBuffTime_Params
{
	float                                              AmountOfAdditionalTime;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.DrawBuffFloatingHUD
struct APrimalBuff_DrawBuffFloatingHUD_Params
{
	int                                                BuffIndex;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterHUD*                                 HUD;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              CenterX;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              CenterY;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DrawScale;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.DinoInstigatorReceivedRider
struct APrimalBuff_DinoInstigatorReceivedRider_Params
{
	class AShooterCharacter*                           Rider;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.DinoInstigatorClearedRider
struct APrimalBuff_DinoInstigatorClearedRider_Params
{
};

// Function ShooterGame.PrimalBuff.ClientReceiveRelatedMissionData
struct APrimalBuff_ClientReceiveRelatedMissionData_Params
{
	class AMissionType*                                InMission;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               InHasRelatedMission;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BuffTickServer
struct APrimalBuff_BuffTickServer_Params
{
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BuffTickClient
struct APrimalBuff_BuffTickClient_Params
{
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BuffPostAdjustDamage
struct APrimalBuff_BuffPostAdjustDamage_Params
{
	float                                              Damage;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                                  HitInfo;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	class AController*                                 EventInstigator;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      TheDamgeType;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BuffOverrideInventoryAccessInput
struct APrimalBuff_BuffOverrideInventoryAccessInput_Params
{
	class AController*                                 InController;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bInputPressed;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BuffOverrideFinalWanderLocation
struct APrimalBuff_BuffOverrideFinalWanderLocation_Params
{
	struct FVector                                     outVec;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BuffAdjustDamage
struct APrimalBuff_BuffAdjustDamage_Params
{
	float                                              Damage;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                                  HitInfo;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	class AController*                                 EventInstigator;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      TheDamgeType;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPUnstasis
struct APrimalBuff_BPUnstasis_Params
{
};

// Function ShooterGame.PrimalBuff.BPStasis
struct APrimalBuff_BPStasis_Params
{
};

// Function ShooterGame.PrimalBuff.BPShouldForceOwnerDedicatedMovementTickPerFrame
struct APrimalBuff_BPShouldForceOwnerDedicatedMovementTickPerFrame_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPSetupForInstigator
struct APrimalBuff_BPSetupForInstigator_Params
{
	class AActor*                                      ForInstigator;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPResetBuffStart
struct APrimalBuff_BPResetBuffStart_Params
{
};

// Function ShooterGame.PrimalBuff.BPReactivateWithDamageCauser
struct APrimalBuff_BPReactivateWithDamageCauser_Params
{
	class AActor*                                      ForInstigator;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      ForDamageCauser;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPPreventThrowingItem
struct APrimalBuff_BPPreventThrowingItem_Params
{
	class UPrimalItem*                                 ForItem;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPPreventTekArmorBuffs
struct APrimalBuff_BPPreventTekArmorBuffs_Params
{
	TArray<struct FName>                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalBuff.BPPreventRunning
struct APrimalBuff_BPPreventRunning_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPPreventOnStartJump
struct APrimalBuff_BPPreventOnStartJump_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPPreventNotifySound
struct APrimalBuff_BPPreventNotifySound_Params
{
	class USoundBase*                                  SoundIn;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPPreventInstigatorMovementMode
struct APrimalBuff_BPPreventInstigatorMovementMode_Params
{
	TEnumAsByte<Engine_EMovementMode>                  NewMovementMode;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	unsigned char                                      NewCustomMode;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPPreventInstigatorAttack
struct APrimalBuff_BPPreventInstigatorAttack_Params
{
	int                                                AttackIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPPreventflight
struct APrimalBuff_BPPreventflight_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPPreventFirstPerson
struct APrimalBuff_BPPreventFirstPerson_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPPreventCharacterStatusValueModifiers
struct APrimalBuff_BPPreventCharacterStatusValueModifiers_Params
{
	class APrimalCharacter*                            ForInstigator;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPPreventCharacterLanding
struct APrimalBuff_BPPreventCharacterLanding_Params
{
	struct FVector                                     ImpactPoint;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ImpactAccel;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ImpactVelocity;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     NewVelocity;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPPreventAddingOtherBuff
struct APrimalBuff_BPPreventAddingOtherBuff_Params
{
	class UClass*                                      anotherBuffClass;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPPreSetupForInstigator
struct APrimalBuff_BPPreSetupForInstigator_Params
{
	class AActor*                                      ForInstigator;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPPreSerializeForInstigator
struct APrimalBuff_BPPreSerializeForInstigator_Params
{
	bool                                               bBeginningSerialize;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPOverrideWeaponBob
struct APrimalBuff_BPOverrideWeaponBob_Params
{
	struct FVector                                     InWeaponBob;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPOverrideTargetingDesire
struct APrimalBuff_BPOverrideTargetingDesire_Params
{
	class AActor*                                      forTarget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ForTargetingDesireValue;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPOverrideTalkerCharacter
struct APrimalBuff_BPOverrideTalkerCharacter_Params
{
	class APrimalCharacter*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPOverrideIsNetRelevantFor
struct APrimalBuff_BPOverrideIsNetRelevantFor_Params
{
	class APlayerController*                           RealViewer;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      Viewer;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     SrcLocation;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPOverrideCharacterNewFallVelocity
struct APrimalBuff_BPOverrideCharacterNewFallVelocity_Params
{
	struct FVector                                     InitialVelocity;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     Gravity;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPOverrideCameraViewTarget
struct APrimalBuff_BPOverrideCameraViewTarget_Params
{
	struct FName                                       CurrentCameraMode;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     DesiredCameraLocation;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    DesiredCameraRotation;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DesiredFOV;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bOverrideCameraLocation;                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     CameraLocation;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bOverrideCameraRotation;                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    CameraRotation;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bOverrideCameraFOV;                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              CameraFOV;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPOverrideBuffToGiveOnDeactivation
struct APrimalBuff_BPOverrideBuffToGiveOnDeactivation_Params
{
	class UClass*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPOnOwnerMassTeleportEvent
struct APrimalBuff_BPOnOwnerMassTeleportEvent_Params
{
	TEnumAsByte<ShooterGame_EMassTeleportState>        EventState;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalCharacter*                            TeleportInitiatedByChar;                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPOnInstigatorMovementModeChangedNotify
struct APrimalBuff_BPOnInstigatorMovementModeChangedNotify_Params
{
	TEnumAsByte<Engine_EMovementMode>                  PrevMovementMode;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	unsigned char                                      PreviousCustomMode;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_EMovementMode>                  NewMovementMode;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	unsigned char                                      NewCustomMode;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPOnInstigatorCapsuleComponentHit
struct APrimalBuff_BPOnInstigatorCapsuleComponentHit_Params
{
	class AActor*                                      OtherActor;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                         OtherComp;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FVector                                     NormalImpulse;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FHitResult                                  Hit;                                                       // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.PrimalBuff.BPOnInputEvent
struct APrimalBuff_BPOnInputEvent_Params
{
	TEnumAsByte<ShooterGame_EPrimalCharacterInputType> inputType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPNotifyPreventDismounting
struct APrimalBuff_BPNotifyPreventDismounting_Params
{
	class APrimalDinoCharacter*                        FromDino;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPNotifyOtherBuffDeactivated
struct APrimalBuff_BPNotifyOtherBuffDeactivated_Params
{
	class APrimalBuff*                                 OtherBuff;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPNotifyOtherBuffActivated
struct APrimalBuff_BPNotifyOtherBuffActivated_Params
{
	class APrimalBuff*                                 OtherBuff;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPNotifyExperienceGained
struct APrimalBuff_BPNotifyExperienceGained_Params
{
	float                                              ActualExpGained;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ExpectedExpGain;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_EXPType>                   ExpTypeGained;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPNonDedicatedPlayerPostAnimUpdate
struct APrimalBuff_BPNonDedicatedPlayerPostAnimUpdate_Params
{
};

// Function ShooterGame.PrimalBuff.BPModifyPlayerBoneModifiers
struct APrimalBuff_BPModifyPlayerBoneModifiers_Params
{
	TArray<struct FBoneModifier>                       InBoneModifiers;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FBoneModifier>                       ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalBuff.BPIsValidUnStasisCaster
struct APrimalBuff_BPIsValidUnStasisCaster_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPIsCharacterHardAttached
struct APrimalBuff_BPIsCharacterHardAttached_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPInterceptWeaponToggle
struct APrimalBuff_BPInterceptWeaponToggle_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPInterceptUseAction
struct APrimalBuff_BPInterceptUseAction_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPInstigatorUnpossessed
struct APrimalBuff_BPInstigatorUnpossessed_Params
{
};

// Function ShooterGame.PrimalBuff.BPInstigatorSleeped
struct APrimalBuff_BPInstigatorSleeped_Params
{
	bool                                               bIsSleeped;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPInstigatorReceivedKillingDamage
struct APrimalBuff_BPInstigatorReceivedKillingDamage_Params
{
};

// Function ShooterGame.PrimalBuff.BPInstigatorPossessed
struct APrimalBuff_BPInstigatorPossessed_Params
{
	class AController*                                 ByController;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPInstigatorLocalPossessed
struct APrimalBuff_BPInstigatorLocalPossessed_Params
{
	class AShooterPlayerController*                    ByController;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPInstigatorDied
struct APrimalBuff_BPInstigatorDied_Params
{
};

// Function ShooterGame.PrimalBuff.BPInitializedCharacterAnimScriptInstance
struct APrimalBuff_BPInitializedCharacterAnimScriptInstance_Params
{
};

// Function ShooterGame.PrimalBuff.BPInformDamageCauserOfBuffAdded
struct APrimalBuff_BPInformDamageCauserOfBuffAdded_Params
{
	class APrimalCharacter*                            forCharacter;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPHandleOnStopFire
struct APrimalBuff_BPHandleOnStopFire_Params
{
	bool                                               bFromGamepad;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPHandleOnStopAltFire
struct APrimalBuff_BPHandleOnStopAltFire_Params
{
	bool                                               bFromGamepad;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPHandleOnStartFire
struct APrimalBuff_BPHandleOnStartFire_Params
{
	bool                                               bFromGamepad;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPHandleOnStartAltFire
struct APrimalBuff_BPHandleOnStartAltFire_Params
{
	bool                                               bFromGamepad;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPGetMoveAnimRate
struct APrimalBuff_BPGetMoveAnimRate_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPGetHUDElements
struct APrimalBuff_BPGetHUDElements_Params
{
	class APlayerController*                           ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FHUDElement>                         OutElements;                                               // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.PrimalBuff.BPGetGravityZScale
struct APrimalBuff_BPGetGravityZScale_Params
{
	float                                              currentScale;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPGetDinoNameColorOverride
struct APrimalBuff_BPGetDinoNameColorOverride_Params
{
	class AShooterHUD*                                 HUD;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FColor                                      ColorToOverride;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FColor                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPGetDebugInfoString
struct APrimalBuff_BPGetDebugInfoString_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalBuff.BPGetBabyImprintingSpeedMultiplier
struct APrimalBuff_BPGetBabyImprintingSpeedMultiplier_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPForceDinoNameTargetingTeamOverride
struct APrimalBuff_BPForceDinoNameTargetingTeamOverride_Params
{
	class AShooterHUD*                                 HUD;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                TargetingTeamToCheck;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPForceCameraStyle
struct APrimalBuff_BPForceCameraStyle_Params
{
	class APrimalCharacter*                            ForViewTarget;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_ECameraStyle>              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPExcludeAoEActor
struct APrimalBuff_BPExcludeAoEActor_Params
{
	class AActor*                                      ActorToConsider;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPDrawBuffStatusHUD
struct APrimalBuff_BPDrawBuffStatusHUD_Params
{
	class AShooterHUD*                                 HUD;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              XPos;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              YPos;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ScaleMult;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPDinoRefreshColorization
struct APrimalBuff_BPDinoRefreshColorization_Params
{
	TArray<struct FLinearColor>                        DinoColors;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FLinearColor>                        OverrideColors;                                            // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.PrimalBuff.BPDeactivated
struct APrimalBuff_BPDeactivated_Params
{
	class AActor*                                      ForInstigator;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPDeactivate
struct APrimalBuff_BPDeactivate_Params
{
};

// Function ShooterGame.PrimalBuff.BPCustomAllowAddBuff
struct APrimalBuff_BPCustomAllowAddBuff_Params
{
	class APrimalCharacter*                            forCharacter;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPCheckPreventInput
struct APrimalBuff_BPCheckPreventInput_Params
{
	TEnumAsByte<ShooterGame_EPrimalCharacterInputType> inputType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPCharacterDetach
struct APrimalBuff_BPCharacterDetach_Params
{
};

// Function ShooterGame.PrimalBuff.BPCanBeCarried
struct APrimalBuff_BPCanBeCarried_Params
{
	class APrimalCharacter*                            ByCarrier;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPBuffPreventUploading
struct APrimalBuff_BPBuffPreventUploading_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPBPGetCameraShakeScalar
struct APrimalBuff_BPBPGetCameraShakeScalar_Params
{
	class UClass*                                      currentShake;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              currentScale;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPAnimNotifyCustomState_End
struct APrimalBuff_BPAnimNotifyCustomState_End_Params
{
	struct FName                                       CustomEventName;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USkeletalMeshComponent*                      MeshComp;                                                  // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class UAnimSequenceBase*                           Animation;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimNotifyState*                            AnimNotifyObject;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPAnimNotifyCustomState_Begin
struct APrimalBuff_BPAnimNotifyCustomState_Begin_Params
{
	struct FName                                       CustomEventName;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USkeletalMeshComponent*                      MeshComp;                                                  // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class UAnimSequenceBase*                           Animation;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              TotalDuration;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimNotifyState*                            AnimNotifyObject;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPAnimNotifyCustomEvent
struct APrimalBuff_BPAnimNotifyCustomEvent_Params
{
	struct FName                                       CustomEventName;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USkeletalMeshComponent*                      MeshComp;                                                  // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class UAnimSequenceBase*                           Animation;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimNotify*                                 AnimNotifyObject;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPAdjustStatusValueModification
struct APrimalBuff_BPAdjustStatusValueModification_Params
{
	class UPrimalCharacterStatusComponent*             ForComponent;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> ValueType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InAmount;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      DamageTypeClass;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bManualModification;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPAdjustRadialDamage
struct APrimalBuff_BPAdjustRadialDamage_Params
{
	float                                              currentDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Origin;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRadialDamageEvent                          DamageEvent;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPAdjustImpulseFromDamage
struct APrimalBuff_BPAdjustImpulseFromDamage_Params
{
	struct FVector                                     DesiredImpulse;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DamageTaken;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                TheDamageEvent;                                            // (Parm)
	class APawn*                                       PawnInstigator;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsPointDamage;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                                  PointHitInfo;                                              // (Parm)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPAdjustDamage_Ex
struct APrimalBuff_BPAdjustDamage_Ex_Params
{
	float                                              Damage;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                                  HitInfo;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector                                     ImpulseDir;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	class AController*                                 EventInstigator;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      InDamageCauser;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      TheDamgeType;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPAdjustCharacterMovementImpulse
struct APrimalBuff_BPAdjustCharacterMovementImpulse_Params
{
	struct FVector                                     Impulse;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bVelocityChange;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MassScaleImpulseExponent;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bOverrideMaxImpulseZ;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BPActivated
struct APrimalBuff_BPActivated_Params
{
	class AActor*                                      ForInstigator;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BP_OverrideTerminalVelocity
struct APrimalBuff_BP_OverrideTerminalVelocity_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BP_OverrideMoveRightInput
struct APrimalBuff_BP_OverrideMoveRightInput_Params
{
	float                                              CurrentInput;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BP_OverrideMoveForwardInput
struct APrimalBuff_BP_OverrideMoveForwardInput_Params
{
	float                                              CurrentInput;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BP_OverrideCharacterWalkingVelocity
struct APrimalBuff_BP_OverrideCharacterWalkingVelocity_Params
{
	struct FVector                                     InitialVelocity;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              Friction;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BP_OverrideCharacterSwimmingVelocity
struct APrimalBuff_BP_OverrideCharacterSwimmingVelocity_Params
{
	struct FVector                                     InitialVelocity;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     Gravity;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              FluidFriction;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              NetBuoyancy;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BP_OverrideCharacterFlyingVelocity
struct APrimalBuff_BP_OverrideCharacterFlyingVelocity_Params
{
	struct FVector                                     InitialVelocity;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     Gravity;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.BP_OnOwnerTeleported
struct APrimalBuff_BP_OnOwnerTeleported_Params
{
};

// Function ShooterGame.PrimalBuff.BP_OnOwnerDealtDamage
struct APrimalBuff_BP_OnOwnerDealtDamage_Params
{
	class AActor*                                      DamagedActor;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DamageAmount;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.PrimalBuff.BP_OnBuffLifetimeUpdated
struct APrimalBuff_BP_OnBuffLifetimeUpdated_Params
{
};

// Function ShooterGame.PrimalBuff.BP_ModifyCharacterFOV
struct APrimalBuff_BP_ModifyCharacterFOV_Params
{
	float                                              inFOV;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.AllowPostProcessEffect
struct APrimalBuff_AllowPostProcessEffect_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.AddDamageStatusValueModifier
struct APrimalBuff_AddDamageStatusValueModifier_Params
{
	class APrimalCharacter*                            addToCharacter;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> ValueType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSpeedToAddInSeconds;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bContinueOnUnchangedValue;                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bResetExistingModifierDescriptionIndex;                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSetValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSetAdditionalValue;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              LimitExistingModifierDescriptionToMaxAmount;               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DamageMultiplierAmountToAdd;                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              SpeedToAdd;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                StatusValueModifierDescriptionIndex;                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bUsePercentualDamage;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bMakeUntameable;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              PercentualDamage;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      ScaleValueByCharacterDamageType;                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff.AddBuffLifetime
struct APrimalBuff_AddBuffLifetime_Params
{
	float                                              AdditionalLifetime;                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.TraceForCompanionBlockersFromPlayer
struct APrimalBuff_Companion_TraceForCompanionBlockersFromPlayer_Params
{
	struct FVector                                     AdjustedLocation;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     TraceStart;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     TraceEnd;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               bDebug;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              TraceRadius;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.Tick_UpdateCompanionTransform
struct APrimalBuff_Companion_Tick_UpdateCompanionTransform_Params
{
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.Tick_UpdateCompanionState
struct APrimalBuff_Companion_Tick_UpdateCompanionState_Params
{
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.Tick_CompanionSearchForPOIs
struct APrimalBuff_Companion_Tick_CompanionSearchForPOIs_Params
{
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.Tick_CompanionReactions
struct APrimalBuff_Companion_Tick_CompanionReactions_Params
{
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.Tick_CompanionEvents
struct APrimalBuff_Companion_Tick_CompanionEvents_Params
{
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.StopCompanionReaction
struct APrimalBuff_Companion_StopCompanionReaction_Params
{
};

// Function ShooterGame.PrimalBuff_Companion.StopCompanionMontage
struct APrimalBuff_Companion_StopCompanionMontage_Params
{
	class UAnimMontage*                                AnimToStop;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              BlendOutTime;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.StopCompanionEventExternal
struct APrimalBuff_Companion_StopCompanionEventExternal_Params
{
};

// Function ShooterGame.PrimalBuff_Companion.StopCompanionEvent
struct APrimalBuff_Companion_StopCompanionEvent_Params
{
};

// Function ShooterGame.PrimalBuff_Companion.StartCompanionEventExternal
struct APrimalBuff_Companion_StartCompanionEventExternal_Params
{
	class AActor*                                      EventActor;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FCompanionEventData                         WithEventData;                                             // (Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.PrimalBuff_Companion.StartCompanionEvent
struct APrimalBuff_Companion_StartCompanionEvent_Params
{
	class AActor*                                      EventActor;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FCompanionEventData                         WithEventData;                                             // (Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.PrimalBuff_Companion.ShouldOrbitPointOfInterest
struct APrimalBuff_Companion_ShouldOrbitPointOfInterest_Params
{
	struct FPointOfInterestData_ForCompanion           WithPointData;                                             // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.SetUpAnimTexture
struct APrimalBuff_Companion_SetUpAnimTexture_Params
{
};

// Function ShooterGame.PrimalBuff_Companion.SetCompaionHiddenSetting
struct APrimalBuff_Companion_SetCompaionHiddenSetting_Params
{
	bool                                               isHidden;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.Server_SetCompanionState
struct APrimalBuff_Companion_Server_SetCompanionState_Params
{
	TEnumAsByte<ShooterGame_ECompanionState>           NewState;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.RefreshCompanionColorization
struct APrimalBuff_Companion_RefreshCompanionColorization_Params
{
};

// Function ShooterGame.PrimalBuff_Companion.PlayLinkedCompanionReactionsByExplorerNoteIndex
struct APrimalBuff_Companion_PlayLinkedCompanionReactionsByExplorerNoteIndex_Params
{
	int                                                index;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.PlayCompanionMontage
struct APrimalBuff_Companion_PlayCompanionMontage_Params
{
	class UAnimMontage*                                AnimToPlay;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              BlendInTime;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              BlendOutTime;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              PlayRate;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.OutputAsyncLoadedFiles
struct APrimalBuff_Companion_OutputAsyncLoadedFiles_Params
{
};

// Function ShooterGame.PrimalBuff_Companion.OnSpawnHexagons
struct APrimalBuff_Companion_OnSpawnHexagons_Params
{
	float                                              OverrideCollectSFXVolume;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               VFXImmediatelyAttracts;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.OnSpawnedForPlayer
struct APrimalBuff_Companion_OnSpawnedForPlayer_Params
{
};

// Function ShooterGame.PrimalBuff_Companion.OnRep_CompanionState
struct APrimalBuff_Companion_OnRep_CompanionState_Params
{
};

// Function ShooterGame.PrimalBuff_Companion.OnPlayerPlayAnimation
struct APrimalBuff_Companion_OnPlayerPlayAnimation_Params
{
	class UAnimMontage*                                PlayedAnim;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              AnimDuration;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       StartSectionName;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.OnPlayerDeath
struct APrimalBuff_Companion_OnPlayerDeath_Params
{
	class APrimalCharacter*                            DiedCharacter;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.OnMyPlayerMissionStarted
struct APrimalBuff_Companion_OnMyPlayerMissionStarted_Params
{
	class APrimalBuff_MissionData*                     MissionDataBuff;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AMissionType*                                Mission;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.OnMyPlayerMissionComplete
struct APrimalBuff_Companion_OnMyPlayerMissionComplete_Params
{
	class APrimalBuff_MissionData*                     MissionDataBuff;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AMissionType*                                Mission;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSuccess;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.OnMadeHexagonPurchase
struct APrimalBuff_Companion_OnMadeHexagonPurchase_Params
{
};

// Function ShooterGame.PrimalBuff_Companion.OnFoundPoI
struct APrimalBuff_Companion_OnFoundPoI_Params
{
	struct FPointOfInterestData_ForCompanion           FoundPointData;                                            // (Parm, OutParm, ReferenceParm)
	class AActor*                                      FoundPointActor;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.OnEndOverlapCompanionEventTrigger
struct APrimalBuff_Companion_OnEndOverlapCompanionEventTrigger_Params
{
	class AActor*                                      ForTrigger;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.OnCompanionStateChanged
struct APrimalBuff_Companion_OnCompanionStateChanged_Params
{
};

// Function ShooterGame.PrimalBuff_Companion.OnCompanionReactionStopped
struct APrimalBuff_Companion_OnCompanionReactionStopped_Params
{
	struct FCompanionReactionData                      StoppedReactionData;                                       // (ConstParm, Parm, OutParm, ReferenceParm)
	int                                                UniqueID;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.OnCompanionReactionPlayed
struct APrimalBuff_Companion_OnCompanionReactionPlayed_Params
{
	struct FCompanionReactionData                      PlayedReactionData;                                        // (ConstParm, Parm, OutParm, ReferenceParm)
	int                                                UniqueID;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.OnCompanionEventStarted
struct APrimalBuff_Companion_OnCompanionEventStarted_Params
{
	struct FCompanionEventData                         StartingEventData;                                         // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.PrimalBuff_Companion.OnCompanionEventEnded
struct APrimalBuff_Companion_OnCompanionEventEnded_Params
{
	struct FCompanionEventData                         StoppingEventData;                                         // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.PrimalBuff_Companion.OnBeginOverlapCompanionEventTrigger
struct APrimalBuff_Companion_OnBeginOverlapCompanionEventTrigger_Params
{
	class AActor*                                      ForTrigger;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.NotifyItemCrafted
struct APrimalBuff_Companion_NotifyItemCrafted_Params
{
	class UPrimalItem*                                 anItem;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.NotifyItemAddedToCropPlot
struct APrimalBuff_Companion_NotifyItemAddedToCropPlot_Params
{
	class UPrimalItem*                                 anItem;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.NotifyHasTamedDino
struct APrimalBuff_Companion_NotifyHasTamedDino_Params
{
	class UClass*                                      DinoClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.Net_SetCompanionState
struct APrimalBuff_Companion_Net_SetCompanionState_Params
{
	TEnumAsByte<ShooterGame_ECompanionState>           NewState;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.IsPlayingCompanionReaction
struct APrimalBuff_Companion_IsPlayingCompanionReaction_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.IsPlayerLookingAtCompanion
struct APrimalBuff_Companion_IsPlayerLookingAtCompanion_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.IsPlayerADS
struct APrimalBuff_Companion_IsPlayerADS_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.IsCompanionReadyToMonologue
struct APrimalBuff_Companion_IsCompanionReadyToMonologue_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.IsCompanionAbleToMonologue
struct APrimalBuff_Companion_IsCompanionAbleToMonologue_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.HasCompanionReachedPointOrbit
struct APrimalBuff_Companion_HasCompanionReachedPointOrbit_Params
{
	struct FPointOfInterestData_ForCompanion           OfPointData;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.GetPointCompanionWorldOrbitOrigin
struct APrimalBuff_Companion_GetPointCompanionWorldOrbitOrigin_Params
{
	struct FPointOfInterestData_ForCompanion           ForPointData;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.GetMyPlayerHUD
struct APrimalBuff_Companion_GetMyPlayerHUD_Params
{
	class AShooterHUD*                                 ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.GetCurrentCompanionReactionData
struct APrimalBuff_Companion_GetCurrentCompanionReactionData_Params
{
	struct FCompanionReactionData                      ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.PrimalBuff_Companion.GetCurrentCompanionEventData
struct APrimalBuff_Companion_GetCurrentCompanionEventData_Params
{
	struct FCompanionEventData                         ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.PrimalBuff_Companion.GetCompanionWorldLocation
struct APrimalBuff_Companion_GetCompanionWorldLocation_Params
{
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.GetClosestNearbyPointOfInterest
struct APrimalBuff_Companion_GetClosestNearbyPointOfInterest_Params
{
	struct FPointOfInterestData_ForCompanion           ClosestPointData;                                          // (Parm, OutParm)
	struct FVector                                     ClosestPointLoc;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.GetAllExplorerNotesInWorld
struct APrimalBuff_Companion_GetAllExplorerNotesInWorld_Params
{
	class UWorld*                                      World;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalBuff_Companion.ForceUnhibernateAtLocation
struct APrimalBuff_Companion_ForceUnhibernateAtLocation_Params
{
	struct FVector                                     AtLocation;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.ForceHibernateAtLocation
struct APrimalBuff_Companion_ForceHibernateAtLocation_Params
{
	struct FVector                                     AtLocation;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                              ActorsToHibernate;                                         // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.FocusOnRemoteTarget
struct APrimalBuff_Companion_FocusOnRemoteTarget_Params
{
};

// Function ShooterGame.PrimalBuff_Companion.DrawFocusedActorToolTip
struct APrimalBuff_Companion_DrawFocusedActorToolTip_Params
{
	class AActor*                                      targetedActor;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.Delegate_OnCompanionReactionVfxSpawned__DelegateSignature
struct APrimalBuff_Companion_Delegate_OnCompanionReactionVfxSpawned__DelegateSignature_Params
{
	class APrimalBuff_Companion*                       SpawnedByCompanion;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*                    SpawnedComp_VFX;                                           // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.Delegate_OnCompanionReactionStopped__DelegateSignature
struct APrimalBuff_Companion_Delegate_OnCompanionReactionStopped__DelegateSignature_Params
{
	class APrimalBuff_Companion*                       ReactingCompanion;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FCompanionReactionData                      ReactionData;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
	int                                                UniqueID;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.Delegate_OnCompanionReactionSfxSpawned__DelegateSignature
struct APrimalBuff_Companion_Delegate_OnCompanionReactionSfxSpawned__DelegateSignature_Params
{
	class APrimalBuff_Companion*                       SpawnedByCompanion;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAudioComponent*                             SpawnedComp_SFX;                                           // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.Delegate_OnCompanionReactionPlayed__DelegateSignature
struct APrimalBuff_Companion_Delegate_OnCompanionReactionPlayed__DelegateSignature_Params
{
	class APrimalBuff_Companion*                       ReactingCompanion;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FCompanionReactionData                      ReactionData;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
	int                                                UniqueID;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.Delegate_OnCompanionReactionAnimPlayed__DelegateSignature
struct APrimalBuff_Companion_Delegate_OnCompanionReactionAnimPlayed__DelegateSignature_Params
{
	class APrimalBuff_Companion*                       SpawnedByCompanion;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimMontage*                                PlayedAnim;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.ClientToggleForceMonologue
struct APrimalBuff_Companion_ClientToggleForceMonologue_Params
{
	bool                                               Newval;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.ClientOutputAsyncLoadedFiles
struct APrimalBuff_Companion_ClientOutputAsyncLoadedFiles_Params
{
};

// Function ShooterGame.PrimalBuff_Companion.ClientAllowVRTeleport
struct APrimalBuff_Companion_ClientAllowVRTeleport_Params
{
};

// Function ShooterGame.PrimalBuff_Companion.Client_AddCompanionReaction
struct APrimalBuff_Companion_Client_AddCompanionReaction_Params
{
	struct FCompanionReactionData                      WithReactionData;                                          // (Parm)
	bool                                               bForcePlayNow;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInterface*                          DialogueIconOverride;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                UniqueID;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.CanStartCompanionEvent
struct APrimalBuff_Companion_CanStartCompanionEvent_Params
{
	class AActor*                                      EventActor;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FCompanionEventData                         WithEventData;                                             // (Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.CanRemotelyFocusOnRemoteActorForTooltip
struct APrimalBuff_Companion_CanRemotelyFocusOnRemoteActorForTooltip_Params
{
	class AActor*                                      targetedActor;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.CanPlayEnvironmentalCompanionReaction
struct APrimalBuff_Companion_CanPlayEnvironmentalCompanionReaction_Params
{
	struct FCompanionReactionData                      CanPlayReactionData;                                       // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.CanPlayCompanionReaction
struct APrimalBuff_Companion_CanPlayCompanionReaction_Params
{
	struct FCompanionReactionData                      CanPlayReactionData;                                       // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Companion.AnimateOutHLNASubtitleIcon
struct APrimalBuff_Companion_AnimateOutHLNASubtitleIcon_Params
{
};

// Function ShooterGame.PrimalBuff_Companion.AnimateInHLNASubtitleIcon
struct APrimalBuff_Companion_AnimateInHLNASubtitleIcon_Params
{
};

// Function ShooterGame.PrimalBuff_Companion.AddCompanionReaction
struct APrimalBuff_Companion_AddCompanionReaction_Params
{
	struct FCompanionReactionData                      WithReactionData;                                          // (Parm, OutParm, ReferenceParm)
	bool                                               bForcePlayNow;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInterface*                          DialogueIconOverride;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                UniqueID;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CompanionEventTrigger.OnEndOverlap
struct ACompanionEventTrigger_OnEndOverlap_Params
{
	class AActor*                                      Actor;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CompanionEventTrigger.OnBeginOverlap
struct ACompanionEventTrigger_OnBeginOverlap_Params
{
	class AActor*                                      Actor;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIState.TickAnimationStateEvent
struct UPrimalAIState_TickAnimationStateEvent_Params
{
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       CustomEventName;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_ENetRole>                       Role;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIState.TickAnimationState
struct UPrimalAIState_TickAnimationState_Params
{
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       CustomEventName;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_ENetRole>                       Role;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIState.StartAnimationStateEvent
struct UPrimalAIState_StartAnimationStateEvent_Params
{
	struct FName                                       CustomEventName;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_ENetRole>                       Role;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIState.StartAnimationState
struct UPrimalAIState_StartAnimationState_Params
{
	struct FName                                       CustomEventName;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_ENetRole>                       Role;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIState.ShouldSkipRangeCheckEvent
struct UPrimalAIState_ShouldSkipRangeCheckEvent_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIState.ShouldSkipIntervalCheckEvent
struct UPrimalAIState_ShouldSkipIntervalCheckEvent_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIState.SetLastAttackTime
struct UPrimalAIState_SetLastAttackTime_Params
{
};

// Function ShooterGame.PrimalAIState.SetInAnimationStateActive
struct UPrimalAIState_SetInAnimationStateActive_Params
{
	bool                                               Value;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIState.OnTickEvent
struct UPrimalAIState_OnTickEvent_Params
{
	float                                              DeltaSeconds;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIState.OnTick
struct UPrimalAIState_OnTick_Params
{
	float                                              DeltaSeconds;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIState.OnEndEvent
struct UPrimalAIState_OnEndEvent_Params
{
};

// Function ShooterGame.PrimalAIState.OnEnd
struct UPrimalAIState_OnEnd_Params
{
};

// Function ShooterGame.PrimalAIState.OnChildStateEndedEvent
struct UPrimalAIState_OnChildStateEndedEvent_Params
{
	class UPrimalAIState*                              PrimalAIState;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIState.OnCanUseStateEvent
struct UPrimalAIState_OnCanUseStateEvent_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIState.OnBeginEvent
struct UPrimalAIState_OnBeginEvent_Params
{
	class UPrimalAIState*                              InParentState;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIState.OnBegin
struct UPrimalAIState_OnBegin_Params
{
	class UPrimalAIState*                              InParentState;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIState.GetDebugInfoString
struct UPrimalAIState_GetDebugInfoString_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalAIState.EndAnimationStateEvent
struct UPrimalAIState_EndAnimationStateEvent_Params
{
	struct FName                                       CustomEventName;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_ENetRole>                       Role;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIState.EndAnimationState
struct UPrimalAIState_EndAnimationState_Params
{
	struct FName                                       CustomEventName;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_ENetRole>                       Role;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIState.CanUseState
struct UPrimalAIState_CanUseState_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIState.BPOverrideAttackWeight
struct UPrimalAIState_BPOverrideAttackWeight_Params
{
	float                                              inputWeight;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Distance;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              attackRangeOffset;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      OtherTarget;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIState.BPIsChildState
struct UPrimalAIState_BPIsChildState_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIState.BPGetDebugInfoString
struct UPrimalAIState_BPGetDebugInfoString_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalAIState.BPCanAttack
struct UPrimalAIState_BPCanAttack_Params
{
	float                                              Distance;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              attackRangeOffset;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      OtherTarget;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIStateBPBase.SpawnAndFireProjectile
struct UPrimalAIStateBPBase_SpawnAndFireProjectile_Params
{
	class UClass*                                      ProjectileClass;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       ProjectileSocket;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ProjectileInterval;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bOverrideProjectileSpawn;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     OverrideSpawnLoc;                                          // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    OverrideSpawnRot;                                          // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIStateBPBase.SetLastAttackTimeToNow
struct UPrimalAIStateBPBase_SetLastAttackTimeToNow_Params
{
	float                                              Offset;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIStateBPBase.IsTimeSinceStateBegin
struct UPrimalAIStateBPBase_IsTimeSinceStateBegin_Params
{
	float                                              CheckTimeSince;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceTrueAtZeroTime;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIStateBPBase.GetTimeSinceStateBegin
struct UPrimalAIStateBPBase_GetTimeSinceStateBegin_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIStateBPBase.GetStateBeginTime
struct UPrimalAIStateBPBase_GetStateBeginTime_Params
{
	double                                             ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIStateBPBase.GetLastAttackTimeAndInterval
struct UPrimalAIStateBPBase_GetLastAttackTimeAndInterval_Params
{
	double                                             LastAttackTime;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              AttackInterval;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIStateBPBase.FinishState
struct UPrimalAIStateBPBase_FinishState_Params
{
};

// Function ShooterGame.PrimalAIStateBPBase.DealMeleeDamageDirect
struct UPrimalAIStateBPBase_DealMeleeDamageDirect_Params
{
	class AActor*                                      TargetActor;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     DamageSourceWorldLocation;                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DamageAmount;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DamageImpulse;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      DamageTypeClass;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bUseBlueprintAdjustOutputDamage;                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bInstantlyHarvestCorpse;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIStateBPBase.DealMeleeDamage
struct UPrimalAIStateBPBase_DealMeleeDamage_Params
{
	class AActor*                                      Actor;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                                  FromHitResult;                                             // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.PrimalAIStateBPBase.BPShouldEndAttack
struct UPrimalAIStateBPBase_BPShouldEndAttack_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIStateBPBase.BPOnClearAttackState
struct UPrimalAIStateBPBase_BPOnClearAttackState_Params
{
};

// Function ShooterGame.PrimalAIStateBPBase.BPOnAttackTick
struct UPrimalAIStateBPBase_BPOnAttackTick_Params
{
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIStateBPBase.BPOnAttackStart
struct UPrimalAIStateBPBase_BPOnAttackStart_Params
{
	int                                                AttackIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIStateBPBase.BPOnAttackEnd
struct UPrimalAIStateBPBase_BPOnAttackEnd_Params
{
	int                                                AttackIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIStateBPBase.BPOnAnimNotifyCustomEvent
struct UPrimalAIStateBPBase_BPOnAnimNotifyCustomEvent_Params
{
	struct FName                                       CustomEventName;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimSequenceBase*                           Animation;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_ENetRole>                       Role;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIStateDinoMeleeState.BPOnHitActor
struct UPrimalAIStateDinoMeleeState_BPOnHitActor_Params
{
	struct FHitResult                                  HitResult;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.PrimalAIStateDinoMeleeState.BPGetSocketLocation
struct UPrimalAIStateDinoMeleeState_BPGetSocketLocation_Params
{
	struct FName                                       SocketName;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     SocketLocation;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIStateDinoRangedState.PreventAttackForTime
struct UPrimalAIStateDinoRangedState_PreventAttackForTime_Params
{
	float                                              Time;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIStateDinoRangedState.OffsetVectorRandomlyReturnsAltered
struct UPrimalAIStateDinoRangedState_OffsetVectorRandomlyReturnsAltered_Params
{
	struct FVector                                     InVector;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              minPercent;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              maxPercent;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIStateDinoRangedState.GetZGravityOffset
struct UPrimalAIStateDinoRangedState_GetZGravityOffset_Params
{
	struct FVector                                     ProjectileVelocity;                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     ProjectileStartLocation;                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     ProjectileFinalLocation;                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIStateDinoRangedState.FindDirectionToLeadTarget
struct UPrimalAIStateDinoRangedState_FindDirectionToLeadTarget_Params
{
	struct FVector                                     VectorToHitTargetStandingStill;                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              extraTimeAllowed;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     currentVelocityOfTarget;                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIStateDinoRangedState.ClampProjectileVectorInForwardDirection
struct UPrimalAIStateDinoRangedState_ClampProjectileVectorInForwardDirection_Params
{
	struct FVector                                     OriginalShootingDirection;                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FName                                       RangedSocket;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIStateDinoRangedState.BPRangedAttackOnBegin
struct UPrimalAIStateDinoRangedState_BPRangedAttackOnBegin_Params
{
	struct FVector                                     TargetLocation;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     TargetVelocity;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIStateDinoRangedState.BPRangedAttack
struct UPrimalAIStateDinoRangedState_BPRangedAttack_Params
{
	struct FVector                                     TargetLocation;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     TargetVelocity;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalAIStateBotRangedState.BPGetSocketLocation
struct UPrimalAIStateBotRangedState_BPGetSocketLocation_Params
{
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCableComponent.SpreadOutParticles
struct UPrimalCableComponent_SpreadOutParticles_Params
{
	struct FVector                                     StartPosition;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     EndPosition;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCableComponent.SetAttachEndOverrideComponent
struct UPrimalCableComponent_SetAttachEndOverrideComponent_Params
{
	class USceneComponent*                             Component;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCableComponent.MarkRenderDynamicDataDirtyBP
struct UPrimalCableComponent_MarkRenderDynamicDataDirtyBP_Params
{
};

// Function ShooterGame.PrimalCableComponent.GetEndPositions
struct UPrimalCableComponent_GetEndPositions_Params
{
	struct FVector                                     OutStartPosition;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     OutEndPosition;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCableComponent.GetCableParticle
struct UPrimalCableComponent_GetCableParticle_Params
{
	int                                                idx;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FCableParticle                              ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.PrimalCableComponent.GetCableMidPoint
struct UPrimalCableComponent_GetCableMidPoint_Params
{
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCableComponent.GetAttachEndOverrideComponent
struct UPrimalCableComponent_GetAttachEndOverrideComponent_Params
{
	class USceneComponent*                             ReturnValue;                                               // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.ZoomOut
struct APrimalCharacter_ZoomOut_Params
{
};

// Function ShooterGame.PrimalCharacter.ZoomIn
struct APrimalCharacter_ZoomIn_Params
{
};

// Function ShooterGame.PrimalCharacter.UseCenteredTPVCamera
struct APrimalCharacter_UseCenteredTPVCamera_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.UpdateTickSetting
struct APrimalCharacter_UpdateTickSetting_Params
{
};

// Function ShooterGame.PrimalCharacter.UpdateSwimmingState
struct APrimalCharacter_UpdateSwimmingState_Params
{
};

// Function ShooterGame.PrimalCharacter.UpdateHasBuffPreSerialize
struct APrimalCharacter_UpdateHasBuffPreSerialize_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.TurnAtRate
struct APrimalCharacter_TurnAtRate_Params
{
	float                                              val;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.TryPoop
struct APrimalCharacter_TryPoop_Params
{
};

// Function ShooterGame.PrimalCharacter.TryGiveDefaultWeapon
struct APrimalCharacter_TryGiveDefaultWeapon_Params
{
};

// Function ShooterGame.PrimalCharacter.TickMovementComponent
struct APrimalCharacter_TickMovementComponent_Params
{
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.TempDampenInputAcceleration
struct APrimalCharacter_TempDampenInputAcceleration_Params
{
};

// Function ShooterGame.PrimalCharacter.TakeDamage
struct APrimalCharacter_TakeDamage_Params
{
	float                                              Damage;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	class AController*                                 EventInstigator;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.StopAnimEx
struct APrimalCharacter_StopAnimEx_Params
{
	class UAnimMontage*                                AnimMontage;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bReplicate;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bReplicateToOwner;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              BlendOutTime;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.StaticRemoveCharacterSnapshot
struct APrimalCharacter_StaticRemoveCharacterSnapshot_Params
{
	class UPrimalItem*                                 Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      From;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.StaticGetSnapshotPoseCount
struct APrimalCharacter_StaticGetSnapshotPoseCount_Params
{
	class UPrimalItem*                                 Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.StaticGetSnapshotPose
struct APrimalCharacter_StaticGetSnapshotPose_Params
{
	class UPrimalItem*                                 Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                PoseIndex;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FPrimalSnapshotPose                         ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.PrimalCharacter.StaticApplyCharacterSnapshotEquipment
struct APrimalCharacter_StaticApplyCharacterSnapshotEquipment_Params
{
	class UPrimalInventoryComponent*                   inventory;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class AActor*                                      To;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.StaticApplyCharacterSnapshot
struct APrimalCharacter_StaticApplyCharacterSnapshot_Params
{
	class UPrimalItem*                                 Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      To;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Offset;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MaxExtent;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                Pose;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bCollisionOn;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.StartForceSkelUpdate
struct APrimalCharacter_StartForceSkelUpdate_Params
{
	float                                              ForTime;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceUpdateMesh;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bServerOnly;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.SleepBodies
struct APrimalCharacter_SleepBodies_Params
{
};

// Function ShooterGame.PrimalCharacter.ShouldDisableCameraInterpolation
struct APrimalCharacter_ShouldDisableCameraInterpolation_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.ShouldDealDamageTo
struct APrimalCharacter_ShouldDealDamageTo_Params
{
	class APrimalCharacter*                            OtherCharacter;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bAllowDamageToSelf;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bAllowDamageToTribe;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bAllowDamageToAlliedTribes;                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.SetSleeping
struct APrimalCharacter_SetSleeping_Params
{
	bool                                               bSleeping;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bUseRagdollLocationOffset;                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.SetMyInventoryComponent
struct APrimalCharacter_SetMyInventoryComponent_Params
{
	class UPrimalInventoryComponent*                   TheInventoryComponent;                                     // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.SetLastCausedDamageTime
struct APrimalCharacter_SetLastCausedDamageTime_Params
{
	double                                             lastCausedDamageTimeValue;                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.SetEnableIK
struct APrimalCharacter_SetEnableIK_Params
{
	bool                                               bEnable;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.SetCharacterMeshesMaterialScalarParamValue
struct APrimalCharacter_SetCharacterMeshesMaterialScalarParamValue_Params
{
	struct FName                                       ParamName;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Value;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.SetBoundsScale
struct APrimalCharacter_SetBoundsScale_Params
{
	float                                              NewScale;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.ServerTryPoop
struct APrimalCharacter_ServerTryPoop_Params
{
};

// Function ShooterGame.PrimalCharacter.ServerSetRunning
struct APrimalCharacter_ServerSetRunning_Params
{
	bool                                               bNewRunning;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.ServerRequestDrag
struct APrimalCharacter_ServerRequestDrag_Params
{
};

// Function ShooterGame.PrimalCharacter.ServerGiveDefaultWeapon
struct APrimalCharacter_ServerGiveDefaultWeapon_Params
{
};

// Function ShooterGame.PrimalCharacter.ServerDinoOrder
struct APrimalCharacter_ServerDinoOrder_Params
{
	class APrimalDinoCharacter*                        aDino;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_EDinoTamedOrder>           OrderType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      Target;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.ServerCaptureDermis
struct APrimalCharacter_ServerCaptureDermis_Params
{
	class APrimalCharacter*                            Target;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.ServerCallStayOne
struct APrimalCharacter_ServerCallStayOne_Params
{
	class APrimalDinoCharacter*                        ForDinoChar;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.ServerCallStay
struct APrimalCharacter_ServerCallStay_Params
{
};

// Function ShooterGame.PrimalCharacter.ServerCallSetAggressive
struct APrimalCharacter_ServerCallSetAggressive_Params
{
};

// Function ShooterGame.PrimalCharacter.ServerCallPassive
struct APrimalCharacter_ServerCallPassive_Params
{
};

// Function ShooterGame.PrimalCharacter.ServerCallNeutral
struct APrimalCharacter_ServerCallNeutral_Params
{
};

// Function ShooterGame.PrimalCharacter.ServerCallMoveTo
struct APrimalCharacter_ServerCallMoveTo_Params
{
	struct FVector                                     MoveToLoc;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.ServerCallLandFlyerOne
struct APrimalCharacter_ServerCallLandFlyerOne_Params
{
	class APrimalDinoCharacter*                        ForDinoChar;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.ServerCallFollowOne
struct APrimalCharacter_ServerCallFollowOne_Params
{
	class APrimalDinoCharacter*                        ForDinoChar;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.ServerCallFollowDistanceCycleOne
struct APrimalCharacter_ServerCallFollowDistanceCycleOne_Params
{
	class APrimalDinoCharacter*                        ForDinoChar;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.ServerCallFollow
struct APrimalCharacter_ServerCallFollow_Params
{
};

// Function ShooterGame.PrimalCharacter.ServerCallAttackTarget
struct APrimalCharacter_ServerCallAttackTarget_Params
{
	class AActor*                                      TheTarget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.ServerCallAggressive
struct APrimalCharacter_ServerCallAggressive_Params
{
};

// Function ShooterGame.PrimalCharacter.RemoveAllJumpDeactivatedBuffs
struct APrimalCharacter_RemoveAllJumpDeactivatedBuffs_Params
{
	class APrimalBuff*                                 IgnoredBuff;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.PrimalCharacterSleepStateChanged__DelegateSignature
struct APrimalCharacter_PrimalCharacterSleepStateChanged__DelegateSignature_Params
{
	class APrimalCharacter*                            forCharacter;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsSleeping;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.PrimalCharacterNotifyUnstasis__DelegateSignature
struct APrimalCharacter_PrimalCharacterNotifyUnstasis__DelegateSignature_Params
{
	class APrimalCharacter*                            ForPrimalCharacter;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.PrimalCharacterNotifyStasis__DelegateSignature
struct APrimalCharacter_PrimalCharacterNotifyStasis__DelegateSignature_Params
{
	class APrimalCharacter*                            ForPrimalCharacter;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.PrimalCharacterNotifyLevelUp__DelegateSignature
struct APrimalCharacter_PrimalCharacterNotifyLevelUp__DelegateSignature_Params
{
	int                                                ExtraCharacterLevel;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.PrimalCharacterNotifyDamage__DelegateSignature
struct APrimalCharacter_PrimalCharacterNotifyDamage__DelegateSignature_Params
{
	float                                              DamageAmount;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	class AController*                                 EventInstigator;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.PrimalCharacterInputNotify__DelegateSignature
struct APrimalCharacter_PrimalCharacterInputNotify__DelegateSignature_Params
{
	class APrimalCharacter*                            ForPrimalCharacter;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_EPrimalCharacterInputType> inputType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.PrimalCharacterDied__DelegateSignature
struct APrimalCharacter_PrimalCharacterDied__DelegateSignature_Params
{
	class APrimalCharacter*                            DiedCharacter;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.PreventsTargeting
struct APrimalCharacter_PreventsTargeting_Params
{
	class AActor*                                      ByActor;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.PreventNotifySound
struct APrimalCharacter_PreventNotifySound_Params
{
	class USoundBase*                                  SoundIn;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.PreventInputType
struct APrimalCharacter_PreventInputType_Params
{
	TEnumAsByte<ShooterGame_EPrimalCharacterInputType> inputType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.PreventInputDoesOffset
struct APrimalCharacter_PreventInputDoesOffset_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.Poop
struct APrimalCharacter_Poop_Params
{
	bool                                               bForcePoop;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.PlayHurtAnim
struct APrimalCharacter_PlayHurtAnim_Params
{
	float                                              DamageTaken;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	class APawn*                                       PawnInstigator;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsLocalPath;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.PlayHitEffectRadial
struct APrimalCharacter_PlayHitEffectRadial_Params
{
	float                                              DamageTaken;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRadialDamageEvent                          DamageEvent;                                               // (Parm)
	class APawn*                                       PawnInstigator;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.PlayHitEffectPoint
struct APrimalCharacter_PlayHitEffectPoint_Params
{
	float                                              DamageTaken;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FPointDamageEvent                           DamageEvent;                                               // (Parm)
	class APawn*                                       PawnInstigator;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.PlayHitEffectGeneric
struct APrimalCharacter_PlayHitEffectGeneric_Params
{
	float                                              DamageTaken;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (Parm)
	class APawn*                                       PawnInstigator;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.PlayerCommand
struct APrimalCharacter_PlayerCommand_Params
{
	struct FString                                     TheCommand;                                                // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalCharacter.PlayDyingRadial
struct APrimalCharacter_PlayDyingRadial_Params
{
	float                                              KillingDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRadialDamageEvent                          DamageEvent;                                               // (Parm)
	class APawn*                                       InstigatingPawn;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.PlayDyingPoint
struct APrimalCharacter_PlayDyingPoint_Params
{
	float                                              KillingDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FPointDamageEvent                           DamageEvent;                                               // (Parm)
	class APawn*                                       InstigatingPawn;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.PlayDyingGeneric
struct APrimalCharacter_PlayDyingGeneric_Params
{
	float                                              KillingDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (Parm)
	class APawn*                                       InstigatingPawn;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.PlayAnimEx
struct APrimalCharacter_PlayAnimEx_Params
{
	class UAnimMontage*                                AnimMontage;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InPlayRate;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       StartSectionName;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bReplicate;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bReplicateToOwner;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceTickPoseAndServerUpdateMesh;                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceTickPoseOnServer;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceKeepSynced;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              BlendInTime;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              BlendOutTime;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.OverrideCameraTargetOriginLocation
struct APrimalCharacter_OverrideCameraTargetOriginLocation_Params
{
	struct FVector                                     OutOverrideOrigin;                                         // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FName                                       WithCameraStyle;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.OverrideCameraInterpSpeed
struct APrimalCharacter_OverrideCameraInterpSpeed_Params
{
	float                                              DefaultTPVCameraSpeedInterpMultiplier;                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DefaultTPVOffsetInterpSpeed;                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              TPVCameraSpeedInterpMultiplier;                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              TPVOffsetInterpSpeed;                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.OrbitCamToggle
struct APrimalCharacter_OrbitCamToggle_Params
{
};

// Function ShooterGame.PrimalCharacter.OrbitCamOn
struct APrimalCharacter_OrbitCamOn_Params
{
};

// Function ShooterGame.PrimalCharacter.OrbitCamOff
struct APrimalCharacter_OrbitCamOff_Params
{
};

// Function ShooterGame.PrimalCharacter.OnStopRunning
struct APrimalCharacter_OnStopRunning_Params
{
};

// Function ShooterGame.PrimalCharacter.OnStopJump
struct APrimalCharacter_OnStopJump_Params
{
};

// Function ShooterGame.PrimalCharacter.OnStopFire
struct APrimalCharacter_OnStopFire_Params
{
	bool                                               bFromGamepadRight;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.OnStopAltFire
struct APrimalCharacter_OnStopAltFire_Params
{
	bool                                               bFromGamepad;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.OnStartRunning
struct APrimalCharacter_OnStartRunning_Params
{
};

// Function ShooterGame.PrimalCharacter.OnStartJump
struct APrimalCharacter_OnStartJump_Params
{
};

// Function ShooterGame.PrimalCharacter.OnStartFire
struct APrimalCharacter_OnStartFire_Params
{
	bool                                               bFromGamepadRight;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.OnStartAltFire
struct APrimalCharacter_OnStartAltFire_Params
{
	bool                                               bFromGamepad;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.OnRunToggleReleased
struct APrimalCharacter_OnRunToggleReleased_Params
{
};

// Function ShooterGame.PrimalCharacter.OnRunTogglePressed
struct APrimalCharacter_OnRunTogglePressed_Params
{
};

// Function ShooterGame.PrimalCharacter.OnRunToggle
struct APrimalCharacter_OnRunToggle_Params
{
};

// Function ShooterGame.PrimalCharacter.OnRep_RagdollPositions
struct APrimalCharacter_OnRep_RagdollPositions_Params
{
};

// Function ShooterGame.PrimalCharacter.OnRep_PaintingComponent
struct APrimalCharacter_OnRep_PaintingComponent_Params
{
};

// Function ShooterGame.PrimalCharacter.OnRep_MountedDino
struct APrimalCharacter_OnRep_MountedDino_Params
{
};

// Function ShooterGame.PrimalCharacter.OnRep_IsSleeping
struct APrimalCharacter_OnRep_IsSleeping_Params
{
};

// Function ShooterGame.PrimalCharacter.OnRep_IsDead
struct APrimalCharacter_OnRep_IsDead_Params
{
};

// Function ShooterGame.PrimalCharacter.OnOrbitCameraViewChange__DelegateSignature
struct APrimalCharacter_OnOrbitCameraViewChange__DelegateSignature_Params
{
	bool                                               bEnabled;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.OnMassTeleportEvent
struct APrimalCharacter_OnMassTeleportEvent_Params
{
	TEnumAsByte<ShooterGame_EMassTeleportState>        EventState;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalCharacter*                            TeleportInitiatedByChar;                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.OnEndDrag
struct APrimalCharacter_OnEndDrag_Params
{
};

// Function ShooterGame.PrimalCharacter.OnDetachedFromCharacter
struct APrimalCharacter_OnDetachedFromCharacter_Params
{
	class APrimalCharacter*                            ACharacter;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                OverrideDirection;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.OnBeginDrag
struct APrimalCharacter_OnBeginDrag_Params
{
	class APrimalCharacter*                            Dragged;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                BoneIndex;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bWithGrapHook;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.OnAttachedToCharacter
struct APrimalCharacter_OnAttachedToCharacter_Params
{
};

// Function ShooterGame.PrimalCharacter.OnAltFireReleased
struct APrimalCharacter_OnAltFireReleased_Params
{
};

// Function ShooterGame.PrimalCharacter.OnAltFirePressed
struct APrimalCharacter_OnAltFirePressed_Params
{
};

// Function ShooterGame.PrimalCharacter.NetUpdateTribeName
struct APrimalCharacter_NetUpdateTribeName_Params
{
	struct FString                                     NewTribeName;                                              // (Parm, ZeroConstructor)
};

// Function ShooterGame.PrimalCharacter.NetStopAllAnimMontage
struct APrimalCharacter_NetStopAllAnimMontage_Params
{
};

// Function ShooterGame.PrimalCharacter.NetSetMovementModeSimulatedInternal
struct APrimalCharacter_NetSetMovementModeSimulatedInternal_Params
{
	TEnumAsByte<Engine_EMovementMode>                  NewMovementMode;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.NetSetCharacterMovementVelocity
struct APrimalCharacter_NetSetCharacterMovementVelocity_Params
{
	bool                                               bSetNewVelocity;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     NewVelocity;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSetNewMovementMode;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_EMovementMode>                  NewMovementMode;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.NetPlaySoundOnCharacter
struct APrimalCharacter_NetPlaySoundOnCharacter_Params
{
	class USoundBase*                                  SoundToPlay;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bPlayOnOwner;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.NetOnJumped
struct APrimalCharacter_NetOnJumped_Params
{
};

// Function ShooterGame.PrimalCharacter.NetForceUpdateAimedCharacters
struct APrimalCharacter_NetForceUpdateAimedCharacters_Params
{
	struct FVector                                     StartLoc;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     EndLoc;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      IgnoreActor;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceUpdateIgnoreActor;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              TraceRadius;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.NetDidLand
struct APrimalCharacter_NetDidLand_Params
{
};

// Function ShooterGame.PrimalCharacter.NetAddCharacterMovementImpulse
struct APrimalCharacter_NetAddCharacterMovementImpulse_Params
{
	struct FVector                                     Impulse;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bVelChange;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ImpulseExponent;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSetNewMovementMode;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_EMovementMode>                  NewMovementMode;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bOverrideMaxImpulseZ;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.NativeSimulateHair
struct APrimalCharacter_NativeSimulateHair_Params
{
	TArray<struct FVector>                             CurrentPos;                                                // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FVector>                             LastPos;                                                   // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FVector>                             RestPos;                                                   // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FVector>                             PivotPos;                                                  // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<float>                                      RestDistance;                                              // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector                                     HairSocketLoc;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    HairSocketRot;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ChestSocketLoc;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    ChestSocketRot;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Damping;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DampingFrontModifier;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DampingBack;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InWater;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              HairWetness;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DragForce;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              HairScale;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              SpringForce;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              SpringForceFrontModifier;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              SpringForceBack;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              GravityForce;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ShoulderLCollisionOffset;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ShoulderLCollisionRadius;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ShoulderRCollisionOffset;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ShoulderRCollisionRadius;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     HeadHairCollisionOffset;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              HeadHairCollisionRadius;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     NeckHairCollisionOffset;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              NeckHairCollisionRadius;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MaxDistanceToRestPos;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct UObject_FTransform                          LastHeadTransform;                                         // (Parm, IsPlainOldData, NoDestructor)
	bool                                               bPosAsPivot;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bCollideMiddle;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bCollideWithNeck;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.MoveUp
struct APrimalCharacter_MoveUp_Params
{
	float                                              val;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.MoveRight
struct APrimalCharacter_MoveRight_Params
{
	float                                              val;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.MoveForward
struct APrimalCharacter_MoveForward_Params
{
	float                                              val;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.ModifyStasisComponentRadius
struct APrimalCharacter_ModifyStasisComponentRadius_Params
{
	float                                              Delta;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.LookUpAtRate
struct APrimalCharacter_LookUpAtRate_Params
{
	float                                              val;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.LocalUnpossessed
struct APrimalCharacter_LocalUnpossessed_Params
{
};

// Function ShooterGame.PrimalCharacter.LevelUpPlayerAddedStat
struct APrimalCharacter_LevelUpPlayerAddedStat_Params
{
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> StatToLevel;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                NumLevels;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    ForPlayer;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.IsWildSlow
struct APrimalCharacter_IsWildSlow_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.IsWatered
struct APrimalCharacter_IsWatered_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.IsValidForCombatMusic
struct APrimalCharacter_IsValidForCombatMusic_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.IsSubmerged
struct APrimalCharacter_IsSubmerged_Params
{
	bool                                               bDontCheckSwimming;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bUseFullThreshold;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceCheck;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bFromVolumeChange;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.IsSitting
struct APrimalCharacter_IsSitting_Params
{
	bool                                               bIgnoreLockedToSeat;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.IsRunning
struct APrimalCharacter_IsRunning_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.IsRider
struct APrimalCharacter_IsRider_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.IsProneOrSitting
struct APrimalCharacter_IsProneOrSitting_Params
{
	bool                                               bIgnoreLockedToSeat;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.IsPrimalCharWalking
struct APrimalCharacter_IsPrimalCharWalking_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.IsPrimalCharSwimming
struct APrimalCharacter_IsPrimalCharSwimming_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.IsPrimalCharFriendly
struct APrimalCharacter_IsPrimalCharFriendly_Params
{
	class APrimalCharacter*                            primalChar;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.IsPrimalCharFlying
struct APrimalCharacter_IsPrimalCharFlying_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.IsPrimalCharFalling
struct APrimalCharacter_IsPrimalCharFalling_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.IsOwningClient
struct APrimalCharacter_IsOwningClient_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.IsMoving
struct APrimalCharacter_IsMoving_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.IsMontagePlaying
struct APrimalCharacter_IsMontagePlaying_Params
{
	class UAnimMontage*                                AnimMontage;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              TimeFromEndToConsiderFinished;                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.IsMeshGameplayRelevant
struct APrimalCharacter_IsMeshGameplayRelevant_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.IsInvincible
struct APrimalCharacter_IsInvincible_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.IsInVacuumSealedSpace
struct APrimalCharacter_IsInVacuumSealedSpace_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.IsInStatusState
struct APrimalCharacter_IsInStatusState_Params
{
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusState> StatusStateType;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.IsHostileTo
struct APrimalCharacter_IsHostileTo_Params
{
	class APrimalCharacter*                            OtherCharacter;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ignoreDead;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.IsHostileOrAggressiveTo
struct APrimalCharacter_IsHostileOrAggressiveTo_Params
{
	class APrimalCharacter*                            OtherCharacter;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.IsGameInputAllowed
struct APrimalCharacter_IsGameInputAllowed_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.IsFirstPerson
struct APrimalCharacter_IsFirstPerson_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.IsDamageOccludedByStructures
struct APrimalCharacter_IsDamageOccludedByStructures_Params
{
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.IsCharacterHardAttached
struct APrimalCharacter_IsCharacterHardAttached_Params
{
	bool                                               bIgnoreRiding;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIgnoreCarried;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.IsBossDino
struct APrimalCharacter_IsBossDino_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.IsBlockedByShield
struct APrimalCharacter_IsBlockedByShield_Params
{
	struct FHitResult                                  HitInfo;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector                                     ShotDirection;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               bBlockAllPointDamage;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.IsAttachedToSomething
struct APrimalCharacter_IsAttachedToSomething_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.IsAlliedWithOtherTeam
struct APrimalCharacter_IsAlliedWithOtherTeam_Params
{
	int                                                OtherTeamID;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.IsAlive
struct APrimalCharacter_IsAlive_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.Immobilize
struct APrimalCharacter_Immobilize_Params
{
	bool                                               bImmobilize;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      UsingActor;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bImmobilizeFalling;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bPreventDismount;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.HurtMe
struct APrimalCharacter_HurtMe_Params
{
	int                                                HowMuch;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.HasCryoSickness
struct APrimalCharacter_HasCryoSickness_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.HasBuffWithCustomTag
struct APrimalCharacter_HasBuffWithCustomTag_Params
{
	struct FName                                       BuffCustomTag;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.HasBuff
struct APrimalCharacter_HasBuff_Params
{
	class UClass*                                      BuffClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               useExactMatch;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GiveKillExperience
struct APrimalCharacter_GiveKillExperience_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetTPVCameraOffsetMultiplier
struct APrimalCharacter_GetTPVCameraOffsetMultiplier_Params
{
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetTPVCameraOffset
struct APrimalCharacter_GetTPVCameraOffset_Params
{
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetSocketLocation
struct APrimalCharacter_GetSocketLocation_Params
{
	struct FName                                       SocketName;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetSnapshotComponent
struct APrimalCharacter_GetSnapshotComponent_Params
{
	class AActor*                                      From;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       Tag;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UActorComponent*                             ReturnValue;                                               // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetShortName
struct APrimalCharacter_GetShortName_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalCharacter.GetRunningSpeedModifier
struct APrimalCharacter_GetRunningSpeedModifier_Params
{
	bool                                               bIsForDefaultSpeed;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetRole
struct APrimalCharacter_GetRole_Params
{
	TEnumAsByte<Engine_ENetRole>                       ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetPrimalCharMovementMode
struct APrimalCharacter_GetPrimalCharMovementMode_Params
{
	TEnumAsByte<Engine_EMovementMode>                  ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetPhysMatTypeFromHits
struct APrimalCharacter_GetPhysMatTypeFromHits_Params
{
	TArray<struct FHitResult>                          FromHits;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TEnumAsByte<Engine_EPhysicalSurface>               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetPhysMatTypeFromHit
struct APrimalCharacter_GetPhysMatTypeFromHit_Params
{
	struct FHitResult                                  FromHit;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<Engine_EPhysicalSurface>               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetOverrideSocket
struct APrimalCharacter_GetOverrideSocket_Params
{
	struct FName                                       From;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetOverridenMontage
struct APrimalCharacter_GetOverridenMontage_Params
{
	class UAnimMontage*                                AnimMontage;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimMontage*                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetOverridenAnimSequence
struct APrimalCharacter_GetOverridenAnimSequence_Params
{
	class UAnimSequence*                               AnimSeq;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimSequence*                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetMyBiomeZoneVolume
struct APrimalCharacter_GetMyBiomeZoneVolume_Params
{
	class ABiomeZoneVolume*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetMoveAnimRate
struct APrimalCharacter_GetMoveAnimRate_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetMaxHealth
struct APrimalCharacter_GetMaxHealth_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetLastCausedDamageTime
struct APrimalCharacter_GetLastCausedDamageTime_Params
{
	double                                             ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetKillXP
struct APrimalCharacter_GetKillXP_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetInterpolatedRotation_NonFlattened
struct APrimalCharacter_GetInterpolatedRotation_NonFlattened_Params
{
	struct FRotator                                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetInputDirectionVector
struct APrimalCharacter_GetInputDirectionVector_Params
{
	bool                                               bRelativeToViewDirection;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetImmersionDepth
struct APrimalCharacter_GetImmersionDepth_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetHealthPercentage
struct APrimalCharacter_GetHealthPercentage_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetHealth
struct APrimalCharacter_GetHealth_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetGrappledBuffClassOverride
struct APrimalCharacter_GetGrappledBuffClassOverride_Params
{
	class UClass*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetFootPhysicalSurfaceType
struct APrimalCharacter_GetFootPhysicalSurfaceType_Params
{
	bool                                               bForce;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsForFootstepParticles;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_EPhysicalSurface>               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetFloatingHUDLocation
struct APrimalCharacter_GetFloatingHUDLocation_Params
{
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetFallAcceleration
struct APrimalCharacter_GetFallAcceleration_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetDragWeight
struct APrimalCharacter_GetDragWeight_Params
{
	class APrimalCharacter*                            ForDragger;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetDetailedDescription
struct APrimalCharacter_GetDetailedDescription_Params
{
	struct FString                                     IndentPrefix;                                              // (Parm, ZeroConstructor)
	TArray<struct FString>                             ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalCharacter.GetDescriptiveName
struct APrimalCharacter_GetDescriptiveName_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalCharacter.GetDefaultMovementSpeed
struct APrimalCharacter_GetDefaultMovementSpeed_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetDebugInfoString
struct APrimalCharacter_GetDebugInfoString_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalCharacter.GetCharacterViewLocationAndDirection
struct APrimalCharacter_GetCharacterViewLocationAndDirection_Params
{
	struct FVector                                     ViewLocation;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ViewDirection;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bFromCrosshairOrCamera;                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              FallbackAngleOffsetDegrees;                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetCharacterStatusComponent
struct APrimalCharacter_GetCharacterStatusComponent_Params
{
	class UPrimalCharacterStatusComponent*             ReturnValue;                                               // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetCharactersGrappledToMe
struct APrimalCharacter_GetCharactersGrappledToMe_Params
{
	TArray<class APrimalCharacter*>                    GrappledCharsArray;                                        // (Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function ShooterGame.PrimalCharacter.GetCapsuleTopLocation
struct APrimalCharacter_GetCapsuleTopLocation_Params
{
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetCapsuleBottomLocation
struct APrimalCharacter_GetCapsuleBottomLocation_Params
{
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetBuffWithCustomTag
struct APrimalCharacter_GetBuffWithCustomTag_Params
{
	struct FName                                       BuffCustomTag;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalBuff*                                 ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetBuffStackCount
struct APrimalCharacter_GetBuffStackCount_Params
{
	class UClass*                                      BuffClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               useExactMatch;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetBuffs
struct APrimalCharacter_GetBuffs_Params
{
	TArray<class APrimalBuff*>                         TheBuffs;                                                  // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.PrimalCharacter.GetBuff
struct APrimalCharacter_GetBuff_Params
{
	class UClass*                                      BuffClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalBuff*                                 ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetBaseStatusValue
struct APrimalCharacter_GetBaseStatusValue_Params
{
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> StatusValueType;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetBaseDragWeight
struct APrimalCharacter_GetBaseDragWeight_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetBasedOrSeatingOnDino
struct APrimalCharacter_GetBasedOrSeatingOnDino_Params
{
	class APrimalDinoCharacter*                        ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetBasedOnDino
struct APrimalCharacter_GetBasedOnDino_Params
{
	class APrimalDinoCharacter*                        ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetBasedMovementComponent
struct APrimalCharacter_GetBasedMovementComponent_Params
{
	class UPrimitiveComponent*                         ReturnValue;                                               // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetAttachedExplosive
struct APrimalCharacter_GetAttachedExplosive_Params
{
	class APrimalStructureExplosive*                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetAllBuffs
struct APrimalCharacter_GetAllBuffs_Params
{
	TArray<class APrimalBuff*>                         AllBuffs;                                                  // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.PrimalCharacter.GetAllAttachedChars
struct APrimalCharacter_GetAllAttachedChars_Params
{
	TArray<class APrimalCharacter*>                    AttachedCharsArray;                                        // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bIncludeSelf;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIncludeBased;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIncludePassengers;                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIncludeCarried;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetAimOffsets
struct APrimalCharacter_GetAimOffsets_Params
{
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    RootRotOffset;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              TheRootYawSpeed;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MaxYawAimClamp;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     RootLocOffset;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.GetAimedActor
struct APrimalCharacter_GetAimedActor_Params
{
	struct FHitResult                                  outHitResult;                                              // (Parm, OutParm)
	TEnumAsByte<Engine_ECollisionChannel>              CollisionChannel;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MaxDistanceOverride;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              CheckRadius;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceUseCameraLocation;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceUpdateAimedActors;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.ForceUpdateCharacter
struct APrimalCharacter_ForceUpdateCharacter_Params
{
	class UWorld*                                      World;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalCharacter*                            primalChar;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.ForceUpdateAimedCharacters
struct APrimalCharacter_ForceUpdateAimedCharacters_Params
{
	class UWorld*                                      World;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     StartLoc;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     EndLoc;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	class AActor*                                      IgnoreActor;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceUpdateIgnoreActor;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              TraceRadius;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.ForceTickPoseDelta
struct APrimalCharacter_ForceTickPoseDelta_Params
{
};

// Function ShooterGame.PrimalCharacter.ForceRefreshBones
struct APrimalCharacter_ForceRefreshBones_Params
{
};

// Function ShooterGame.PrimalCharacter.ForceMeshRelevant
struct APrimalCharacter_ForceMeshRelevant_Params
{
	float                                              Duration;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.ForceAddUnderwaterCharacterStatusValues
struct APrimalCharacter_ForceAddUnderwaterCharacterStatusValues_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.FadeOutLoadingMusic
struct APrimalCharacter_FadeOutLoadingMusic_Params
{
};

// Function ShooterGame.PrimalCharacter.ExecSetSleeping
struct APrimalCharacter_ExecSetSleeping_Params
{
	bool                                               bEnable;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.ExecSetPawnSleeping
struct APrimalCharacter_ExecSetPawnSleeping_Params
{
	bool                                               bEnable;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.EndForceSkelUpdate
struct APrimalCharacter_EndForceSkelUpdate_Params
{
};

// Function ShooterGame.PrimalCharacter.EndDragCharacter
struct APrimalCharacter_EndDragCharacter_Params
{
};

// Function ShooterGame.PrimalCharacter.EnableTurnToFaceRotation
struct APrimalCharacter_EnableTurnToFaceRotation_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.EnableIK
struct APrimalCharacter_EnableIK_Params
{
	bool                                               bEnable;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceOnDedicated;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.EnableBPTimerServer
struct APrimalCharacter_EnableBPTimerServer_Params
{
	bool                                               bEnable;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.EnableBPTimerNonDedicated
struct APrimalCharacter_EnableBPTimerNonDedicated_Params
{
	bool                                               bEnable;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.EnableBodiesGravity
struct APrimalCharacter_EnableBodiesGravity_Params
{
};

// Function ShooterGame.PrimalCharacter.DoSetRagdollPhysics
struct APrimalCharacter_DoSetRagdollPhysics_Params
{
};

// Function ShooterGame.PrimalCharacter.DoFindGoodSpot
struct APrimalCharacter_DoFindGoodSpot_Params
{
	struct FVector                                     RagdollLoc;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bClearCollisionSweep;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.DoCharacterDetachment
struct APrimalCharacter_DoCharacterDetachment_Params
{
	bool                                               bIncludeRiding;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIncludeCarrying;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalBuff*                                 BuffToIgnore;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.DinoMountOnMe
struct APrimalCharacter_DinoMountOnMe_Params
{
	class APrimalDinoCharacter*                        DinoCharacter;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.DidTeleport
struct APrimalCharacter_DidTeleport_Params
{
	struct FVector                                     NewLoc;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    newRot;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDoCameraFade;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                CameraFadeColor;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.DetachFromOtherCharacter
struct APrimalCharacter_DetachFromOtherCharacter_Params
{
	bool                                               enableMovementAndCollision;                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.DeathHarvestingFadeOut
struct APrimalCharacter_DeathHarvestingFadeOut_Params
{
};

// Function ShooterGame.PrimalCharacter.DeactivateBuffs
struct APrimalCharacter_DeactivateBuffs_Params
{
	class UClass*                                      ForBuffClass;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 ForInstigatorItem;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               perfectClassMatch;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.CreateSnapshotComponent
struct APrimalCharacter_CreateSnapshotComponent_Params
{
	class AActor*                                      For;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                     Template;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       Tag;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       Name;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UActorComponent*                             ReturnValue;                                               // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.ClientSyncAnimation
struct APrimalCharacter_ClientSyncAnimation_Params
{
	class UAnimMontage*                                AnimMontage;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              PlayRate;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ServerCurrentMontageTime;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceTickPoseAndServerUpdateMesh;                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              BlendInTime;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              BlendOutTime;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.ClientStopAnimation
struct APrimalCharacter_ClientStopAnimation_Params
{
	class UAnimMontage*                                AnimMontage;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bStopOnOwner;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              BlendOutTime;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.ClientRagdollUpdate
struct APrimalCharacter_ClientRagdollUpdate_Params
{
	TArray<struct FVector_NetQuantize>                 BoneLocations;                                             // (ConstParm, Parm, ZeroConstructor)
	struct FRotator_NetQuantize                        TargetRootRotation;                                        // (Parm)
};

// Function ShooterGame.PrimalCharacter.ClientPlayAnimation
struct APrimalCharacter_ClientPlayAnimation_Params
{
	class UAnimMontage*                                AnimMontage;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              PlayRate;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       StartSectionName;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bPlayOnOwner;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceTickPoseAndServerUpdateMesh;                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.ClientOrderedMoveTo
struct APrimalCharacter_ClientOrderedMoveTo_Params
{
	struct FVector                                     MoveToLoc;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.ClientOrderedAttackTarget
struct APrimalCharacter_ClientOrderedAttackTarget_Params
{
	class AActor*                                      attackTarget;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.ClientNotifyLevelUp
struct APrimalCharacter_ClientNotifyLevelUp_Params
{
};

// Function ShooterGame.PrimalCharacter.ClientFailedPoop
struct APrimalCharacter_ClientFailedPoop_Params
{
};

// Function ShooterGame.PrimalCharacter.ClientEndRagdollUpdate
struct APrimalCharacter_ClientEndRagdollUpdate_Params
{
};

// Function ShooterGame.PrimalCharacter.ClientDidPoop
struct APrimalCharacter_ClientDidPoop_Params
{
};

// Function ShooterGame.PrimalCharacter.ClearRidingDinoAsPassenger
struct APrimalCharacter_ClearRidingDinoAsPassenger_Params
{
	bool                                               bFromDino;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.ClearMountedDino
struct APrimalCharacter_ClearMountedDino_Params
{
	bool                                               fromMountedDino;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.ClearControlInputVector
struct APrimalCharacter_ClearControlInputVector_Params
{
};

// Function ShooterGame.PrimalCharacter.ClearCarryingDino
struct APrimalCharacter_ClearCarryingDino_Params
{
	bool                                               bFromDino;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bCancelAnyCarryBuffs;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.CharacterIsCarriedAsPassenger
struct APrimalCharacter_CharacterIsCarriedAsPassenger_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.CharacterBuffsPreventFirstPerson
struct APrimalCharacter_CharacterBuffsPreventFirstPerson_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.CaptureCharacterSnapshot
struct APrimalCharacter_CaptureCharacterSnapshot_Params
{
	class UPrimalItem*                                 Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.CanMountOnMe
struct APrimalCharacter_CanMountOnMe_Params
{
	class APrimalDinoCharacter*                        DinoCharacter;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.CanDragCharacter
struct APrimalCharacter_CanDragCharacter_Params
{
	class APrimalCharacter*                            Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.CallDrawHUD
struct APrimalCharacter_CallDrawHUD_Params
{
	class AShooterHUD*                                 HUD;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.CallDrawFloatingHUD
struct APrimalCharacter_CallDrawFloatingHUD_Params
{
	class AShooterHUD*                                 HUD;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BuffsPreventInventoryAccess
struct APrimalCharacter_BuffsPreventInventoryAccess_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPTriggerStasisEvent
struct APrimalCharacter_BPTriggerStasisEvent_Params
{
};

// Function ShooterGame.PrimalCharacter.BPTimerServer
struct APrimalCharacter_BPTimerServer_Params
{
};

// Function ShooterGame.PrimalCharacter.BPTimerNonDedicated
struct APrimalCharacter_BPTimerNonDedicated_Params
{
};

// Function ShooterGame.PrimalCharacter.BPShouldLimitRightDirection
struct APrimalCharacter_BPShouldLimitRightDirection_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPShouldLimitForwardDirection
struct APrimalCharacter_BPShouldLimitForwardDirection_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPSetCharacterMeshesMaterialScalarParamValue
struct APrimalCharacter_BPSetCharacterMeshesMaterialScalarParamValue_Params
{
	struct FName                                       ParamName;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Value;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPRemovedAttachmentsForItem
struct APrimalCharacter_BPRemovedAttachmentsForItem_Params
{
	class UPrimalItem*                                 anItem;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPRemovedAsPassenger
struct APrimalCharacter_BPRemovedAsPassenger_Params
{
	class APrimalCharacter*                            Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPRemoveCharacterSnapshot
struct APrimalCharacter_BPRemoveCharacterSnapshot_Params
{
	class UPrimalItem*                                 Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      From;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPPreventStasis
struct APrimalCharacter_BPPreventStasis_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPPreventNotifySound
struct APrimalCharacter_BPPreventNotifySound_Params
{
	class USoundBase*                                  SoundIn;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPPreventInputType
struct APrimalCharacter_BPPreventInputType_Params
{
	TEnumAsByte<ShooterGame_EPrimalCharacterInputType> inputType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPPreventFirstPerson
struct APrimalCharacter_BPPreventFirstPerson_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPPreventFallDamage
struct APrimalCharacter_BPPreventFallDamage_Params
{
	struct FHitResult                                  HitResult;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              FallDamageAmount;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPPreSerializeSaveGame
struct APrimalCharacter_BPPreSerializeSaveGame_Params
{
};

// Function ShooterGame.PrimalCharacter.BPPostLoadedFromSaveGame
struct APrimalCharacter_BPPostLoadedFromSaveGame_Params
{
};

// Function ShooterGame.PrimalCharacter.BPPlayDying
struct APrimalCharacter_BPPlayDying_Params
{
	float                                              KillingDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	class APawn*                                       InstigatingPawn;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPOverrideUseItemSlot
struct APrimalCharacter_BPOverrideUseItemSlot_Params
{
	int                                                ItemSlot;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPOverrideReleaseItemSlot
struct APrimalCharacter_BPOverrideReleaseItemSlot_Params
{
	int                                                ItemSlot;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPOverrideJumpZModifier
struct APrimalCharacter_BPOverrideJumpZModifier_Params
{
	float                                              InJumpZModifier;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPOverrideInventoryAccessInput
struct APrimalCharacter_BPOverrideInventoryAccessInput_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPOverrideHurtAnim
struct APrimalCharacter_BPOverrideHurtAnim_Params
{
	float                                              DamageTaken;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	class APawn*                                       PawnInstigator;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsLocalPath;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsPointDamage;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     PointDamageLocation;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     PointDamageHitNormal;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimMontage*                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPOverrideHeldItemSlot
struct APrimalCharacter_BPOverrideHeldItemSlot_Params
{
	int                                                ItemSlot;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPOverrideFPVViewLocation
struct APrimalCharacter_BPOverrideFPVViewLocation_Params
{
	class APrimalCharacter*                            viewingCharacter;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPOverrideFlyingVelocity
struct APrimalCharacter_BPOverrideFlyingVelocity_Params
{
	struct FVector                                     InitialVelocity;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     Gravity;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPOverrideDamageCauserHitMarker
struct APrimalCharacter_BPOverrideDamageCauserHitMarker_Params
{
	class AShooterPlayerController*                    DamageCauserController;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bHitFriendlyTarget;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              PreDamageHealth;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DamageAmount;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               bIsPointDamage;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                                  PointDamageHitResult;                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FHitMarkerSettings                          ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.PrimalCharacter.BPOverrideCharacterNewFallVelocity
struct APrimalCharacter_BPOverrideCharacterNewFallVelocity_Params
{
	struct FVector                                     InitialVelocity;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     Gravity;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPOnStaminaDrained
struct APrimalCharacter_BPOnStaminaDrained_Params
{
};

// Function ShooterGame.PrimalCharacter.BPOnMovementModeChangedNotify
struct APrimalCharacter_BPOnMovementModeChangedNotify_Params
{
	TEnumAsByte<Engine_EMovementMode>                  PrevMovementMode;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	unsigned char                                      PreviousCustomMode;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPOnMassTeleportEvent
struct APrimalCharacter_BPOnMassTeleportEvent_Params
{
	TEnumAsByte<ShooterGame_EMassTeleportState>        EventState;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalCharacter*                            TeleportInitiatedByChar;                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPOnLethalDamage
struct APrimalCharacter_BPOnLethalDamage_Params
{
	float                                              KillingDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	class AController*                                 Killer;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bPreventDeath;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPOnAttachmentReplication
struct APrimalCharacter_BPOnAttachmentReplication_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPOnAnimPlayedNotify
struct APrimalCharacter_BPOnAnimPlayedNotify_Params
{
	class UAnimMontage*                                AnimMontage;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InPlayRate;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       StartSectionName;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bReplicate;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bReplicateToOwner;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceTickPoseAndServerUpdateMesh;                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceTickPoseOnServer;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPNotifyToggleHUD
struct APrimalCharacter_BPNotifyToggleHUD_Params
{
	bool                                               bHudHidden;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPNotifyLevelUp
struct APrimalCharacter_BPNotifyLevelUp_Params
{
	int                                                ExtraCharacterLevel;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPNotifyInventoryItemChange
struct APrimalCharacter_BPNotifyInventoryItemChange_Params
{
	bool                                               bIsItemAdd;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 theItem;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bEquipItem;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPNotifyDroppedItemPickedUp
struct APrimalCharacter_BPNotifyDroppedItemPickedUp_Params
{
	class ADroppedItem*                                itemPickedUp;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalCharacter*                            PickedUpBy;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPNotifyBumpedPawn
struct APrimalCharacter_BPNotifyBumpedPawn_Params
{
	class APrimalCharacter*                            BumpedPawn;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPNotifyBumpedByPawn
struct APrimalCharacter_BPNotifyBumpedByPawn_Params
{
	class APrimalCharacter*                            ByPawn;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPNotifyBPNotifyIsDamageCauserOfAddedBuff
struct APrimalCharacter_BPNotifyBPNotifyIsDamageCauserOfAddedBuff_Params
{
	class APrimalBuff*                                 Buff;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPNewDoorInteractionDrawHUD
struct APrimalCharacter_BPNewDoorInteractionDrawHUD_Params
{
	class AShooterHUD*                                 HUD;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                                   DoorDescriptionLoc;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPNetSetMovementMode
struct APrimalCharacter_BPNetSetMovementMode_Params
{
	TEnumAsByte<Engine_EMovementMode>                  NewMovementMode;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPNetSetCharacterMovementVelocity
struct APrimalCharacter_BPNetSetCharacterMovementVelocity_Params
{
	bool                                               bSetNewVelocity;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     NewVelocity;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSetNewMovementMode;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_EMovementMode>                  NewMovementMode;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPNetAddCharacterMovementImpulse
struct APrimalCharacter_BPNetAddCharacterMovementImpulse_Params
{
	struct FVector                                     Impulse;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bVelChange;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ImpulseExponent;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSetNewMovementMode;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_EMovementMode>                  NewMovementMode;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bOverrideMaxImpulseZ;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bApplyToBigPawns;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPModifyViewHitDir
struct APrimalCharacter_BPModifyViewHitDir_Params
{
	class APrimalCharacter*                            viewingCharacter;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InViewHitDir;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPModifyRightDirectionInput
struct APrimalCharacter_BPModifyRightDirectionInput_Params
{
	struct FVector                                     directionInput;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPModifyFOVInterpSpeed
struct APrimalCharacter_BPModifyFOVInterpSpeed_Params
{
	float                                              FOVInterpSpeedIn;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPModifyFOV
struct APrimalCharacter_BPModifyFOV_Params
{
	float                                              FOVIn;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPModifyForwardDirectionInput
struct APrimalCharacter_BPModifyForwardDirectionInput_Params
{
	struct FVector                                     directionInput;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPLocalUnpossessed
struct APrimalCharacter_BPLocalUnpossessed_Params
{
};

// Function ShooterGame.PrimalCharacter.BPLocalPossessedBy
struct APrimalCharacter_BPLocalPossessedBy_Params
{
	class APlayerController*                           ByController;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPLimitPlayerRotation
struct APrimalCharacter_BPLimitPlayerRotation_Params
{
	class APrimalCharacter*                            viewingCharacter;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    InViewRotation;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPIsConscious
struct APrimalCharacter_BPIsConscious_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPIsBasedOnDynamicActor
struct APrimalCharacter_BPIsBasedOnDynamicActor_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPHasPlayerController
struct APrimalCharacter_BPHasPlayerController_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPHandleRightShoulderButton
struct APrimalCharacter_BPHandleRightShoulderButton_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPHandlePoop
struct APrimalCharacter_BPHandlePoop_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPHandleLeftShoulderButton
struct APrimalCharacter_BPHandleLeftShoulderButton_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPGrabDebugSnapshot
struct APrimalCharacter_BPGrabDebugSnapshot_Params
{
	TArray<struct FBlueprintVisualLogEntry>            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalCharacter.BPGetOverrideCameraInterpSpeed
struct APrimalCharacter_BPGetOverrideCameraInterpSpeed_Params
{
	float                                              DefaultTPVCameraSpeedInterpolationMultiplier;              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DefaultTPVOffsetInterpSpeed;                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              TPVCameraSpeedInterpolationMultiplier;                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              TPVOffsetInterpSpeed;                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPGetIsBuried
struct APrimalCharacter_BPGetIsBuried_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPGetHUDOverrideBuffProgressBarPercent
struct APrimalCharacter_BPGetHUDOverrideBuffProgressBarPercent_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPGetHUDElements
struct APrimalCharacter_BPGetHUDElements_Params
{
	class APlayerController*                           ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FHUDElement>                         OutElements;                                               // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.PrimalCharacter.BPGetGravityZScale
struct APrimalCharacter_BPGetGravityZScale_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPGetFPVViewLocation
struct APrimalCharacter_BPGetFPVViewLocation_Params
{
	class APrimalCharacter*                            viewingCharacter;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPGetExtraMeleeDamageModifier
struct APrimalCharacter_BPGetExtraMeleeDamageModifier_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPGetDebugInfoString
struct APrimalCharacter_BPGetDebugInfoString_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalCharacter.BPGetAddForwardVelocityOnJump
struct APrimalCharacter_BPGetAddForwardVelocityOnJump_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPForceCameraStyle
struct APrimalCharacter_BPForceCameraStyle_Params
{
	class APrimalCharacter*                            ForViewTarget;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_ECameraStyle>              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPCheckJumpInput
struct APrimalCharacter_BPCheckJumpInput_Params
{
	bool                                               bUseCustomErrorMessage;                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ErrorMessageToDisplay;                                     // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.PrimalCharacter.BPCharacterUnsleeped
struct APrimalCharacter_BPCharacterUnsleeped_Params
{
};

// Function ShooterGame.PrimalCharacter.BPCharacterSleeped
struct APrimalCharacter_BPCharacterSleeped_Params
{
};

// Function ShooterGame.PrimalCharacter.BPCharacterDetach
struct APrimalCharacter_BPCharacterDetach_Params
{
};

// Function ShooterGame.PrimalCharacter.BPCanNotifyTeamAggroAI
struct APrimalCharacter_BPCanNotifyTeamAggroAI_Params
{
	class APrimalDinoCharacter*                        Dino;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPCanBeBaseForCharacter
struct APrimalCharacter_BPCanBeBaseForCharacter_Params
{
	class APawn*                                       Pawn;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPCanBaseOnCharacter
struct APrimalCharacter_BPCanBaseOnCharacter_Params
{
	class APrimalCharacter*                            BaseCharacter;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPCameraRotationFinal
struct APrimalCharacter_BPCameraRotationFinal_Params
{
	class APrimalCharacter*                            viewingCharacter;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    InCurrentFinalRot;                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPCameraBaseOrientation
struct APrimalCharacter_BPCameraBaseOrientation_Params
{
	class APrimalCharacter*                            viewingCharacter;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPApplyCharacterSnapshot
struct APrimalCharacter_BPApplyCharacterSnapshot_Params
{
	class UPrimalItem*                                 Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      To;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Offset;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MaxExtent;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                Pose;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bCollisionOn;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPAnimNotifyCustomState_End
struct APrimalCharacter_BPAnimNotifyCustomState_End_Params
{
	struct FName                                       CustomEventName;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USkeletalMeshComponent*                      MeshComp;                                                  // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class UAnimSequenceBase*                           Animation;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimNotifyState*                            AnimNotifyObject;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPAnimNotifyCustomState_Begin
struct APrimalCharacter_BPAnimNotifyCustomState_Begin_Params
{
	struct FName                                       CustomEventName;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USkeletalMeshComponent*                      MeshComp;                                                  // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class UAnimSequenceBase*                           Animation;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              TotalDuration;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimNotifyState*                            AnimNotifyObject;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPAdjustTorpidityDamage
struct APrimalCharacter_BPAdjustTorpidityDamage_Params
{
	float                                              DesiredTorpidityDamage;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              HealthDamageAmount;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      DamageType;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPAdjustImpulseFromDamage
struct APrimalCharacter_BPAdjustImpulseFromDamage_Params
{
	struct FVector                                     DesiredImpulse;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DamageTaken;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                TheDamageEvent;                                            // (Parm)
	class APawn*                                       PawnInstigator;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsPointDamage;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                                  PointHitInfo;                                              // (Parm)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPAdjustDamage
struct APrimalCharacter_BPAdjustDamage_Params
{
	float                                              IncomingDamage;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                TheDamageEvent;                                            // (Parm)
	class AController*                                 EventInstigator;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsPointDamage;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                                  PointHitInfo;                                              // (Parm)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPAdjustCharacterMovementImpulse
struct APrimalCharacter_BPAdjustCharacterMovementImpulse_Params
{
	struct FVector                                     Impulse;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bVelocityChange;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MassScaleImpulseExponent;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bOverrideMaxImpulseZ;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BPAddedAttachmentsForItem
struct APrimalCharacter_BPAddedAttachmentsForItem_Params
{
	class UPrimalItem*                                 anItem;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BP_ShouldDisableCameraInterpolation
struct APrimalCharacter_BP_ShouldDisableCameraInterpolation_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BP_OverrideTerminalVelocity
struct APrimalCharacter_BP_OverrideTerminalVelocity_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BP_OverrideCameraTargetOriginLocation
struct APrimalCharacter_BP_OverrideCameraTargetOriginLocation_Params
{
	struct FVector                                     OutOverrideOrigin;                                         // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FName                                       WithCameraStyle;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BP_OnZoomOut
struct APrimalCharacter_BP_OnZoomOut_Params
{
};

// Function ShooterGame.PrimalCharacter.BP_OnZoomIn
struct APrimalCharacter_BP_OnZoomIn_Params
{
};

// Function ShooterGame.PrimalCharacter.BP_OnStartCarried
struct APrimalCharacter_BP_OnStartCarried_Params
{
	class APrimalDinoCharacter*                        aDino;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BP_OnSetRunning
struct APrimalCharacter_BP_OnSetRunning_Params
{
	bool                                               bNewIsRunning;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BP_OnSetDeath
struct APrimalCharacter_BP_OnSetDeath_Params
{
};

// Function ShooterGame.PrimalCharacter.BP_OnPaintingComponentInitialized
struct APrimalCharacter_BP_OnPaintingComponentInitialized_Params
{
	class UStructurePaintingComponent*                 PaintingComp;                                              // (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BP_OnJumpReleased
struct APrimalCharacter_BP_OnJumpReleased_Params
{
};

// Function ShooterGame.PrimalCharacter.BP_OnJumpPressed
struct APrimalCharacter_BP_OnJumpPressed_Params
{
};

// Function ShooterGame.PrimalCharacter.BP_OnEndCarried
struct APrimalCharacter_BP_OnEndCarried_Params
{
	bool                                               bFromDino;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bCancelAnyCarryBuffs;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BP_OnCameraStyleChangedNotify
struct APrimalCharacter_BP_OnCameraStyleChangedNotify_Params
{
	struct FName                                       NewCameraStyle;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FName                                       OldCameraStyle;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BP_ModifySavedMoveAcceleration_PreRep
struct APrimalCharacter_BP_ModifySavedMoveAcceleration_PreRep_Params
{
	struct FVector                                     ModifyClientAccel;                                         // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BP_ModifySavedMoveAcceleration_PostRep
struct APrimalCharacter_BP_ModifySavedMoveAcceleration_PostRep_Params
{
	struct FVector                                     ModifyServerAccel;                                         // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BP_ModifyInputAcceleration
struct APrimalCharacter_BP_ModifyInputAcceleration_Params
{
	struct FVector                                     ModifyInputAccel;                                          // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BP_IsCharacterHardAttached
struct APrimalCharacter_BP_IsCharacterHardAttached_Params
{
	bool                                               bIgnoreRiding;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIgnoreCarried;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BP_GetMaxSpeedModifier
struct APrimalCharacter_BP_GetMaxSpeedModifier_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BP_ForceAllowAddBuff
struct APrimalCharacter_BP_ForceAllowAddBuff_Params
{
	class UClass*                                      BuffClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BP_AnimationPreventsInput
struct APrimalCharacter_BP_AnimationPreventsInput_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.BlueprintAnimNotifyCustomEvent
struct APrimalCharacter_BlueprintAnimNotifyCustomEvent_Params
{
	struct FName                                       CustomEventName;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USkeletalMeshComponent*                      MeshComp;                                                  // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class UAnimSequenceBase*                           Animation;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimNotify*                                 AnimNotifyObject;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.AttachToOtherCharacter
struct APrimalCharacter_AttachToOtherCharacter_Params
{
	class APrimalCharacter*                            characterToAttachTo;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       InSocketName;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               enableMovementAndCollision;                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_EAttachLocation>                AttachLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.AttachedToOtherCharacterUpdateWorldLocation
struct APrimalCharacter_AttachedToOtherCharacterUpdateWorldLocation_Params
{
	struct FVector                                     WorldLocation;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.ApplyCustomFallDamage
struct APrimalCharacter_ApplyCustomFallDamage_Params
{
	struct FVector                                     Location;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     Velocity;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              FallDamageThreshold;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacter.AllowPlayMontage
struct APrimalCharacter_AllowPlayMontage_Params
{
	class UAnimMontage*                                AnimMontage;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.UpdateTribeGroupRanks
struct APrimalDinoCharacter_UpdateTribeGroupRanks_Params
{
	unsigned char                                      NewTribeGroupPetOrderingRank;                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	unsigned char                                      NewTribeGroupPetRidingRank;                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.UpdateNextAllowedMatingTime
struct APrimalDinoCharacter_UpdateNextAllowedMatingTime_Params
{
	double                                             fromTime;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.UpdateMateBoost
struct APrimalDinoCharacter_UpdateMateBoost_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.UpdateImprintingQuality
struct APrimalDinoCharacter_UpdateImprintingQuality_Params
{
	float                                              NewImprintingQuality;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.UpdateImprintingDetailsForController
struct APrimalDinoCharacter_UpdateImprintingDetailsForController_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.UpdateImprintingDetails
struct APrimalDinoCharacter_UpdateImprintingDetails_Params
{
	struct FString                                     NewImprinterName;                                          // (Parm, ZeroConstructor)
	uint64_t                                           NewImprinterPlayerDataID;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.UpdateHasBuffPreventingUploading
struct APrimalDinoCharacter_UpdateHasBuffPreventingUploading_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.UpdateBabyCuddling
struct APrimalDinoCharacter_UpdateBabyCuddling_Params
{
	double                                             NewBabyNextCuddleTime;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	unsigned char                                      NewBabyCuddleType;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      NewBabyCuddleFood;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.UpdateAttackTargets
struct APrimalDinoCharacter_UpdateAttackTargets_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.UntameDino
struct APrimalDinoCharacter_UntameDino_Params
{
	float                                              TamingAffinityLimit;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.UnclaimDino
struct APrimalDinoCharacter_UnclaimDino_Params
{
	bool                                               bDestroyAI;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.TamedProcessOrder
struct APrimalDinoCharacter_TamedProcessOrder_Params
{
	class APrimalCharacter*                            FromCharacter;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_EDinoTamedOrder>           OrderType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForce;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      enemyTarget;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.TameDino
struct APrimalDinoCharacter_TameDino_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIgnoreMaxTameLimit;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                OverrideTamingTeamID;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bPreventNameDialog;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSkipAddingTamedLevels;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSuppressNotifications;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.StopActiveState
struct APrimalDinoCharacter_StopActiveState_Params
{
	bool                                               bShouldResetAttackIndex;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.StartSurfaceCameraForPassengers
struct APrimalDinoCharacter_StartSurfaceCameraForPassengers_Params
{
	float                                              Yaw;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Pitch;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Roll;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.StartSurfaceCameraForPassenger
struct APrimalDinoCharacter_StartSurfaceCameraForPassenger_Params
{
	class AShooterCharacter*                           Passenger;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Yaw;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Pitch;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Roll;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bInvertTurnInput;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.StartLanding
struct APrimalDinoCharacter_StartLanding_Params
{
	struct FVector                                     OverrideLandingLocation;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.SpawnNewAIController
struct APrimalDinoCharacter_SpawnNewAIController_Params
{
	class UClass*                                      NewAIController;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UBehaviorTree*                               MissionBehaviorTreeOverride;                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.SpawnFromDinoDataEx
struct APrimalDinoCharacter_SpawnFromDinoDataEx_Params
{
	struct FARKDinoData                                InDinoData;                                                // (ConstParm, Parm, OutParm, ReferenceParm)
	class UWorld*                                      inWorld;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     AtLocation;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    AtRotation;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               dupedDino;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ForTeam;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bGenerateNewDinoID;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    TamerController;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalDinoCharacter*                        ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.SpawnFromDinoData
struct APrimalDinoCharacter_SpawnFromDinoData_Params
{
	struct FARKDinoData                                InDinoData;                                                // (ConstParm, Parm, OutParm, ReferenceParm)
	class UWorld*                                      inWorld;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     AtLocation;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    AtRotation;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	int                                                ForTeam;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bGenerateNewDinoID;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    TamerController;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalDinoCharacter*                        ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.SpawnedPlayerFor
struct APrimalDinoCharacter_SpawnedPlayerFor_Params
{
	class AShooterPlayerController*                    PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                       ForPawn;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.SpawnDino
struct APrimalDinoCharacter_SpawnDino_Params
{
	class UWorld*                                      World;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      DinoClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     SpawnLoc;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    SpawnRot;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              LevelMultiplier;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ExtraLevelOffset;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               AddLevelOffsetBeforeMultiplier;                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bOverrideBaseNPCLevel;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                BaseLevelOverrideValue;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bNPCDontWander;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              NPCAIRangeMultiplier;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                NPCAbsoluteBaseLevel;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSpawnWithoutCapsuleOffset;                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalDinoCharacter*                        ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.ShouldForceFlee
struct APrimalDinoCharacter_ShouldForceFlee_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.ShouldDisableBasedCharactersCameraInterpolation
struct APrimalDinoCharacter_ShouldDisableBasedCharactersCameraInterpolation_Params
{
	class APrimalCharacter*                            ForBasedChar;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.ShouldDealDamage
struct APrimalDinoCharacter_ShouldDealDamage_Params
{
	class AActor*                                      TestActor;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.ShouldAttackOfPlayedAnimationStopMovement
struct APrimalDinoCharacter_ShouldAttackOfPlayedAnimationStopMovement_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.SetTurretModeMovementRestrictions
struct APrimalDinoCharacter_SetTurretModeMovementRestrictions_Params
{
	bool                                               Enabled;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bAlsoSetTurretMode;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.SetTurretMode
struct APrimalDinoCharacter_SetTurretMode_Params
{
	bool                                               Enabled;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.SetState
struct APrimalDinoCharacter_SetState_Params
{
	class UPrimalAIState*                              State;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.SetStasisComponentRadius
struct APrimalDinoCharacter_SetStasisComponentRadius_Params
{
	float                                              StasisOverrideRadius;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.SetRider
struct APrimalDinoCharacter_SetRider_Params
{
	class AShooterCharacter*                           aRider;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.SetPreventSaving
struct APrimalDinoCharacter_SetPreventSaving_Params
{
	bool                                               fPreventSaving;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.SetNextAllowedMatingTime
struct APrimalDinoCharacter_SetNextAllowedMatingTime_Params
{
	double                                             NextAllowedMatingTime;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.SetMovementAccelerationVector
struct APrimalDinoCharacter_SetMovementAccelerationVector_Params
{
	struct FVector                                     fVector;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.SetLeftDynamicActorBaseTime
struct APrimalDinoCharacter_SetLeftDynamicActorBaseTime_Params
{
	double                                             NewLeftDynamicActorBaseTime;                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.SetLastMovementDesiredRotation
struct APrimalDinoCharacter_SetLastMovementDesiredRotation_Params
{
	struct FRotator                                    InRotation;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.SetLastAttackTimeForAttack
struct APrimalDinoCharacter_SetLastAttackTimeForAttack_Params
{
	int                                                AttackIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                             NewTime;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.SetImprintPlayer
struct APrimalDinoCharacter_SetImprintPlayer_Params
{
	class AShooterCharacter*                           forChar;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.SetForceDisableClientGravitySim
struct APrimalDinoCharacter_SetForceDisableClientGravitySim_Params
{
	bool                                               bForceDisable;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.SetFlight
struct APrimalDinoCharacter_SetFlight_Params
{
	bool                                               bFly;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bCancelForceLand;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.SetCurrentAttackIndex
struct APrimalDinoCharacter_SetCurrentAttackIndex_Params
{
	unsigned char                                      index;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.SetColorizationData
struct APrimalDinoCharacter_SetColorizationData_Params
{
	TArray<unsigned char>                              ColorData;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function ShooterGame.PrimalDinoCharacter.SetCharacterStatusTameable
struct APrimalDinoCharacter_SetCharacterStatusTameable_Params
{
	bool                                               bSetTameable;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bCreateInventory;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bInventoryForWakingTame;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.SetBabyAge
struct APrimalDinoCharacter_SetBabyAge_Params
{
	float                                              TheAge;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.SetAnimWeightsForAttackAtIndex
struct APrimalDinoCharacter_SetAnimWeightsForAttackAtIndex_Params
{
	int                                                AttackIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<float>                                      newWeights;                                                // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.PrimalDinoCharacter.SetAllowedPaintingColorRegion
struct APrimalDinoCharacter_SetAllowedPaintingColorRegion_Params
{
	int                                                RegionIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsAllowed;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.ServerUpdateAttackTargets
struct APrimalDinoCharacter_ServerUpdateAttackTargets_Params
{
	class AActor*                                      attackTarget;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     AttackLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.ServerToggleCharging
struct APrimalDinoCharacter_ServerToggleCharging_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.ServerToClientsPlayAttackAnimation
struct APrimalDinoCharacter_ServerToClientsPlayAttackAnimation_Params
{
	int8_t                                             AttackinfoIndex;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int8_t                                             animationIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InPlayRate;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       StartSectionName;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceTickPoseAndServerUpdateMesh;                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceTickPoseOnServer;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      MyTarget;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.ServerTamedTick
struct APrimalDinoCharacter_ServerTamedTick_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.ServerSleepingTick
struct APrimalDinoCharacter_ServerSleepingTick_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.ServerSetRiderMountedWeaponRotation
struct APrimalDinoCharacter_ServerSetRiderMountedWeaponRotation_Params
{
	struct FRotator                                    InVal;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.ServerRequestWaterSurfaceJump
struct APrimalDinoCharacter_ServerRequestWaterSurfaceJump_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.ServerRequestToggleFlight
struct APrimalDinoCharacter_ServerRequestToggleFlight_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.ServerRequestBraking
struct APrimalDinoCharacter_ServerRequestBraking_Params
{
	bool                                               bWantsToBrake;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.ServerRequestAttack
struct APrimalDinoCharacter_ServerRequestAttack_Params
{
	int                                                AttackIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.ServerInterruptLanding
struct APrimalDinoCharacter_ServerInterruptLanding_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.ServerFinishedLanding
struct APrimalDinoCharacter_ServerFinishedLanding_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.ServerClearRider
struct APrimalDinoCharacter_ServerClearRider_Params
{
	int                                                OverrideUnboardDirection;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.RidingTick
struct APrimalDinoCharacter_RidingTick_Params
{
	float                                              DeltaSeconds;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.ResetBrainComponent
struct APrimalDinoCharacter_ResetBrainComponent_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.RemovePassenger
struct APrimalDinoCharacter_RemovePassenger_Params
{
	class APrimalCharacter*                            ACharacter;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bFromCharacter;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bFromPlayerController;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.RemoveFromMeleeSwingHurtList
struct APrimalDinoCharacter_RemoveFromMeleeSwingHurtList_Params
{
	class AActor*                                      anActor;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.RemoveDinoReferenceFromLatchingStructure
struct APrimalDinoCharacter_RemoveDinoReferenceFromLatchingStructure_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.RefreshColorization
struct APrimalDinoCharacter_RefreshColorization_Params
{
	bool                                               bForceRefresh;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.RefreshBabyScaling
struct APrimalDinoCharacter_RefreshBabyScaling_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.ReassertColorization
struct APrimalDinoCharacter_ReassertColorization_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.ProcessOrderMoveTo
struct APrimalDinoCharacter_ProcessOrderMoveTo_Params
{
	struct FVector                                     MoveToLoc;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bClearFollowTargets;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.ProcessOrderFollowTarget
struct APrimalDinoCharacter_ProcessOrderFollowTarget_Params
{
	class AActor*                                      TheTarget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bClearFollowTargets;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.ProcessOrderAttackTarget
struct APrimalDinoCharacter_ProcessOrderAttackTarget_Params
{
	class AActor*                                      TheTarget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bClearFollowTargets;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.PlayWeightedAttackAnimation
struct APrimalDinoCharacter_PlayWeightedAttackAnimation_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.PlayHardEndChargingShake
struct APrimalDinoCharacter_PlayHardEndChargingShake_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.PlayedAnimationHasAttack
struct APrimalDinoCharacter_PlayedAnimationHasAttack_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.OverrideRandomWanderLocation
struct APrimalDinoCharacter_OverrideRandomWanderLocation_Params
{
	struct FVector                                     originalDestination;                                       // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     inVec;                                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.OverrideFinalWanderLocation
struct APrimalDinoCharacter_OverrideFinalWanderLocation_Params
{
	struct FVector                                     outVec;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.OverrideBasedCharactersCameraInterpSpeed
struct APrimalDinoCharacter_OverrideBasedCharactersCameraInterpSpeed_Params
{
	class APrimalCharacter*                            ForBasedChar;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DefaultTPVCameraSpeedInterpMultiplier;                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DefaultTPVOffsetInterpSpeed;                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              TPVCameraSpeedInterpMultiplier;                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              TPVOffsetInterpSpeed;                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.OnVoiceTalkingStateChanged
struct APrimalDinoCharacter_OnVoiceTalkingStateChanged_Params
{
	bool                                               isTalking;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsMuted;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.OnUpdateMountedDinoMeshHiding
struct APrimalDinoCharacter_OnUpdateMountedDinoMeshHiding_Params
{
	bool                                               bshouldBeVisible;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.OnUncryo
struct APrimalDinoCharacter_OnUncryo_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.OnSpawnedForItem
struct APrimalDinoCharacter_OnSpawnedForItem_Params
{
	class UPrimalItem*                                 ForItem;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.OnSetMountedDino__DelegateSignature
struct APrimalDinoCharacter_OnSetMountedDino__DelegateSignature_Params
{
	class APrimalDinoCharacter*                        MountDino;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalCharacter*                            forCharacter;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.OnRep_Saddle
struct APrimalDinoCharacter_OnRep_Saddle_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.OnRep_Rider
struct APrimalDinoCharacter_OnRep_Rider_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.OnRep_PassengerPerSeat
struct APrimalDinoCharacter_OnRep_PassengerPerSeat_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.OnRep_CarriedCharacter
struct APrimalDinoCharacter_OnRep_CarriedCharacter_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.OnRep_bIsFlying
struct APrimalDinoCharacter_OnRep_bIsFlying_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.OnRep_bIsCharging
struct APrimalDinoCharacter_OnRep_bIsCharging_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.OnRep_bBonesHidden
struct APrimalDinoCharacter_OnRep_bBonesHidden_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.OnCryo
struct APrimalDinoCharacter_OnCryo_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.OnClearMountedDino__DelegateSignature
struct APrimalDinoCharacter_OnClearMountedDino__DelegateSignature_Params
{
	class APrimalDinoCharacter*                        UnmountedDino;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalCharacter*                            forCharacter;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.NotifySetRider__DelegateSignature
struct APrimalDinoCharacter_NotifySetRider__DelegateSignature_Params
{
	class AShooterCharacter*                           RiderSetting;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalDinoCharacter*                        ForDino;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.NotifyFlyerLanded__DelegateSignature
struct APrimalDinoCharacter_NotifyFlyerLanded__DelegateSignature_Params
{
	class APrimalDinoCharacter*                        ForDino;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.NotifyClearRider__DelegateSignature
struct APrimalDinoCharacter_NotifyClearRider__DelegateSignature_Params
{
	class AShooterCharacter*                           RiderClearing;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalDinoCharacter*                        ForDino;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.NotifyClearPassenger__DelegateSignature
struct APrimalDinoCharacter_NotifyClearPassenger__DelegateSignature_Params
{
	class APrimalCharacter*                            Passenger;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalDinoCharacter*                        ForDino;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                SeatIndex;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.NotifyAddPassenger__DelegateSignature
struct APrimalDinoCharacter_NotifyAddPassenger__DelegateSignature_Params
{
	class APrimalCharacter*                            Passenger;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalDinoCharacter*                        ForDino;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                SeatIndex;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.NetUpdateDinoOwnerData
struct APrimalDinoCharacter_NetUpdateDinoOwnerData_Params
{
	struct FString                                     NewOwningPlayerName;                                       // (Parm, ZeroConstructor)
	int                                                NewOwningPlayerID;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.NetUpdateDinoNameStrings
struct APrimalDinoCharacter_NetUpdateDinoNameStrings_Params
{
	struct FString                                     NewTamerString;                                            // (Parm, ZeroConstructor)
	struct FString                                     NewTamedName;                                              // (Parm, ZeroConstructor)
};

// Function ShooterGame.PrimalDinoCharacter.MulticastUpdateAllColorSets
struct APrimalDinoCharacter_MulticastUpdateAllColorSets_Params
{
	int                                                Color0;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                Color1;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                Color2;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                Color3;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                Color4;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                Color5;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.Multi_OnCryo
struct APrimalDinoCharacter_Multi_OnCryo_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.LowerDinoBP
struct APrimalDinoCharacter_LowerDinoBP_Params
{
	float                                              val;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.KeepFlightTimer
struct APrimalDinoCharacter_KeepFlightTimer_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.IsWakingTame
struct APrimalDinoCharacter_IsWakingTame_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.IsVoiceTalking
struct APrimalDinoCharacter_IsVoiceTalking_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.IsPassengerSeatAvailable
struct APrimalDinoCharacter_IsPassengerSeatAvailable_Params
{
	int                                                PassengerSeatIndex;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.IsMissionDino
struct APrimalDinoCharacter_IsMissionDino_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.IsInTekShield
struct APrimalDinoCharacter_IsInTekShield_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.IsImprintPlayer
struct APrimalDinoCharacter_IsImprintPlayer_Params
{
	class AShooterCharacter*                           forChar;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.IsFleeing
struct APrimalDinoCharacter_IsFleeing_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.IsCurrentlyPlayingAttackAnimation
struct APrimalDinoCharacter_IsCurrentlyPlayingAttackAnimation_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.IsCurrentAttackStopsMovement
struct APrimalDinoCharacter_IsCurrentAttackStopsMovement_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.IsAttacking
struct APrimalDinoCharacter_IsAttacking_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.IsAllowedToTransfer
struct APrimalDinoCharacter_IsAllowedToTransfer_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.IsActiveEventDino
struct APrimalDinoCharacter_IsActiveEventDino_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.InterruptLatching
struct APrimalDinoCharacter_InterruptLatching_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.InterruptLanding
struct APrimalDinoCharacter_InterruptLanding_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.InterceptRiderEmoteAnim
struct APrimalDinoCharacter_InterceptRiderEmoteAnim_Params
{
	class UAnimMontage*                                EmoteAnim;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.InterceptMountedOnPlayerEmoteAnim
struct APrimalDinoCharacter_InterceptMountedOnPlayerEmoteAnim_Params
{
	class UAnimMontage*                                EmoteAnim;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.ImprintOnPlayerTarget
struct APrimalDinoCharacter_ImprintOnPlayerTarget_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIgnoreMaxTameLimit;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.HasTarget
struct APrimalDinoCharacter_HasTarget_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.HasSelfBuried
struct APrimalDinoCharacter_HasSelfBuried_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.HasBuffPreventingFlight
struct APrimalDinoCharacter_HasBuffPreventingFlight_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.HasBuffPreventingClearRiderOnDinoImmobilized
struct APrimalDinoCharacter_HasBuffPreventingClearRiderOnDinoImmobilized_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.HandleMountedDinoAction
struct APrimalDinoCharacter_HandleMountedDinoAction_Params
{
	class AShooterPlayerController*                    PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GiveSaddleFromString
struct APrimalDinoCharacter_GiveSaddleFromString_Params
{
	struct FString                                     blueprintPath;                                             // (Parm, ZeroConstructor)
	float                                              Quality;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MinRandomQuality;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bAutoEquip;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GiveSaddle
struct APrimalDinoCharacter_GiveSaddle_Params
{
	class UClass*                                      SaddleType;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Quality;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MinRandomQuality;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bAutoEquip;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GiveDeathDossier
struct APrimalDinoCharacter_GiveDeathDossier_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.GetWiegthedAttack
struct APrimalDinoCharacter_GetWiegthedAttack_Params
{
	float                                              Distance;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              attackRangeOffset;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      OtherTarget;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	unsigned char                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetUntamedTargetingTeam
struct APrimalDinoCharacter_GetUntamedTargetingTeam_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetTamedLandTarget
struct APrimalDinoCharacter_GetTamedLandTarget_Params
{
	class AActor*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetTamedFollowTarget
struct APrimalDinoCharacter_GetTamedFollowTarget_Params
{
	class AActor*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetStateOfPlayedAnimationAttack
struct APrimalDinoCharacter_GetStateOfPlayedAnimationAttack_Params
{
	class UPrimalAIState*                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetSocketLocationTemp
struct APrimalDinoCharacter_GetSocketLocationTemp_Params
{
	struct FName                                       SocketName;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetSocketForMeleeTraceForHitBlockers
struct APrimalDinoCharacter_GetSocketForMeleeTraceForHitBlockers_Params
{
	int                                                AttackIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetSeatIndexForPassenger
struct APrimalDinoCharacter_GetSeatIndexForPassenger_Params
{
	class APrimalCharacter*                            PassengerChar;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetSaddleMeshComponents
struct APrimalDinoCharacter_GetSaddleMeshComponents_Params
{
	TArray<class UMeshComponent*>                      OutMeshes;                                                 // (Parm, OutParm, ZeroConstructor, ContainsInstancedReference)
};

// Function ShooterGame.PrimalDinoCharacter.GetSaddleMeshComponent
struct APrimalDinoCharacter_GetSaddleMeshComponent_Params
{
	class USkeletalMeshComponent*                      ReturnValue;                                               // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetRootYawSpeed
struct APrimalDinoCharacter_GetRootYawSpeed_Params
{
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetPlayerSpawnRotation
struct APrimalDinoCharacter_GetPlayerSpawnRotation_Params
{
	struct FRotator                                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetPlayerSpawnLocation
struct APrimalDinoCharacter_GetPlayerSpawnLocation_Params
{
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetPassengersSeatIndex
struct APrimalDinoCharacter_GetPassengersSeatIndex_Params
{
	class APrimalCharacter*                            Passenger;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetPassengersAndSeatIndexes
struct APrimalDinoCharacter_GetPassengersAndSeatIndexes_Params
{
	TArray<class APrimalCharacter*>                    Passengers;                                                // (Parm, OutParm, ZeroConstructor)
	TArray<int>                                        Indexes;                                                   // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetPassengers
struct APrimalDinoCharacter_GetPassengers_Params
{
	TArray<class APrimalCharacter*>                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalDinoCharacter.GetPassengerPerSeat
struct APrimalDinoCharacter_GetPassengerPerSeat_Params
{
	int                                                SeatIndex;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalCharacter*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetNumPassengerSeats
struct APrimalDinoCharacter_GetNumPassengerSeats_Params
{
	bool                                               bOnlyManualPassengerSeats;                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetNumAvailablePassengerSeats
struct APrimalDinoCharacter_GetNumAvailablePassengerSeats_Params
{
	bool                                               bOnlyManualPassengerSeats;                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetLastStartedTalkingTime
struct APrimalDinoCharacter_GetLastStartedTalkingTime_Params
{
	double                                             ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetLandingLocation
struct APrimalDinoCharacter_GetLandingLocation_Params
{
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetGestationTimeRemaining
struct APrimalDinoCharacter_GetGestationTimeRemaining_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetForceTickPose
struct APrimalDinoCharacter_GetForceTickPose_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetFoodItemEffectivenessMultipliersIndex
struct APrimalDinoCharacter_GetFoodItemEffectivenessMultipliersIndex_Params
{
	class UPrimalItem*                                 foodItem;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetFirstAffinityFoodItemClass
struct APrimalDinoCharacter_GetFirstAffinityFoodItemClass_Params
{
	class UClass*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetDinoVelocity
struct APrimalDinoCharacter_GetDinoVelocity_Params
{
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetDinoTameSound
struct APrimalDinoCharacter_GetDinoTameSound_Params
{
	class USoundBase*                                  ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetDinoPlatformCollisionIgnoreActors
struct APrimalDinoCharacter_GetDinoPlatformCollisionIgnoreActors_Params
{
	TArray<class AActor*>                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalDinoCharacter.GetDinoLevelUpAnimation
struct APrimalDinoCharacter_GetDinoLevelUpAnimation_Params
{
	class UAnimMontage*                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetDinoIDsAsStrings
struct APrimalDinoCharacter_GetDinoIDsAsStrings_Params
{
	struct FString                                     OutDinoID1;                                                // (Parm, OutParm, ZeroConstructor)
	struct FString                                     OutDinoID2;                                                // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetDinoIDs
struct APrimalDinoCharacter_GetDinoIDs_Params
{
	int                                                OutDinoID1;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                OutDinoID2;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetDinoEntryIcon
struct APrimalDinoCharacter_GetDinoEntryIcon_Params
{
	class UTexture*                                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetDinoDescriptiveName
struct APrimalDinoCharacter_GetDinoDescriptiveName_Params
{
	bool                                               IgnoreArticle;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               IncludeDetails;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalDinoCharacter.GetDinoDeathTime
struct APrimalDinoCharacter_GetDinoDeathTime_Params
{
	double                                             ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetDinoData
struct APrimalDinoCharacter_GetDinoData_Params
{
	struct FARKDinoData                                OutDinoData;                                               // (Parm, OutParm)
};

// Function ShooterGame.PrimalDinoCharacter.GetDinoColor
struct APrimalDinoCharacter_GetDinoColor_Params
{
	int                                                ColorRegionIndex;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetCurrentDinoName
struct APrimalDinoCharacter_GetCurrentDinoName_Params
{
	class APlayerController*                           ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalDinoCharacter.GetCurrentAttackInfo
struct APrimalDinoCharacter_GetCurrentAttackInfo_Params
{
	int                                                AttackIndex;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDinoAttackInfo                             AttackInfo;                                                // (Parm, OutParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetCurrentAimOffsetsRotation
struct APrimalDinoCharacter_GetCurrentAimOffsetsRotation_Params
{
	struct FRotator                                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetColorSetNamesAsArray
struct APrimalDinoCharacter_GetColorSetNamesAsArray_Params
{
	TArray<struct FName>                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalDinoCharacter.GetColorSetInidcesAsString
struct APrimalDinoCharacter_GetColorSetInidcesAsString_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalDinoCharacter.GetColorizationData
struct APrimalDinoCharacter_GetColorizationData_Params
{
	TArray<unsigned char>                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalDinoCharacter.GetColorForColorizationRegion
struct APrimalDinoCharacter_GetColorForColorizationRegion_Params
{
	int                                                Region;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ColorIndexOverride;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetBedFilterClass
struct APrimalDinoCharacter_GetBedFilterClass_Params
{
	class UClass*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetBabyCuddleInterval
struct APrimalDinoCharacter_GetBabyCuddleInterval_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetAllowedPaintingColorRegion
struct APrimalDinoCharacter_GetAllowedPaintingColorRegion_Params
{
	int                                                RegionIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetAllAttachedExplosives
struct APrimalDinoCharacter_GetAllAttachedExplosives_Params
{
	bool                                               bInlcudeAttachedChars;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class APrimalStructureExplosive*>           ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalDinoCharacter.GetAimOffsetsTransform
struct APrimalDinoCharacter_GetAimOffsetsTransform_Params
{
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct UObject_FTransform                          RootRotOffsetTransform;                                    // (Parm, OutParm, IsPlainOldData, NoDestructor)
	float                                              TheRootYawSpeed;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MaxYawAimClamp;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     RootLocOffset;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetAIFollowStoppingDistanceOffset
struct APrimalDinoCharacter_GetAIFollowStoppingDistanceOffset_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetAIFollowStoppingDistanceMultiplier
struct APrimalDinoCharacter_GetAIFollowStoppingDistanceMultiplier_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetAffinityIncreaseForFoodItem
struct APrimalDinoCharacter_GetAffinityIncreaseForFoodItem_Params
{
	class UPrimalItem*                                 foodItem;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetActorCenterTraceLocation
struct APrimalDinoCharacter_GetActorCenterTraceLocation_Params
{
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.GetActiveState
struct APrimalDinoCharacter_GetActiveState_Params
{
	class UPrimalAIState*                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.ForceUpdateColorSets
struct APrimalDinoCharacter_ForceUpdateColorSets_Params
{
	int                                                ColorRegion;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ColorSet;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.ForceSetTamedAggressionLevel
struct APrimalDinoCharacter_ForceSetTamedAggressionLevel_Params
{
	int                                                AggressionLevel;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.ForceClearRider
struct APrimalDinoCharacter_ForceClearRider_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.FireProjectile
struct APrimalDinoCharacter_FireProjectile_Params
{
	struct FVector                                     Origin;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector_NetQuantizeNormal                   ShootDir;                                                  // (Parm)
	bool                                               bScaleProjDamageByDinoDamage;                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.FireMultipleProjectilesEx
struct APrimalDinoCharacter_FireMultipleProjectilesEx_Params
{
	class UClass*                                      ProjectileClass;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FVector>                             Locations;                                                 // (ConstParm, Parm, ZeroConstructor)
	TArray<struct FVector>                             Directions;                                                // (ConstParm, Parm, ZeroConstructor)
	bool                                               bAddPawnVelocityToProjectile;                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bScaleProjDamageByDinoDamage;                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USceneComponent*                             HomingTarget;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FVector                                     HomingTargetOffset;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OverrideInitialSpeed;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.FireMultipleProjectiles
struct APrimalDinoCharacter_FireMultipleProjectiles_Params
{
	TArray<struct FVector>                             Locations;                                                 // (ConstParm, Parm, ZeroConstructor)
	TArray<struct FVector>                             Directions;                                                // (ConstParm, Parm, ZeroConstructor)
	bool                                               bScaleProjectileDamageByDinoDamage;                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.FedWakingTameDino
struct APrimalDinoCharacter_FedWakingTameDino_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.EndCharging
struct APrimalDinoCharacter_EndCharging_Params
{
	bool                                               bForce;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.ElevateDinoBP
struct APrimalDinoCharacter_ElevateDinoBP_Params
{
	float                                              val;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.DoOverrideMountedAirControl
struct APrimalDinoCharacter_DoOverrideMountedAirControl_Params
{
	float                                              AirControlIn;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.DoNeuter
struct APrimalDinoCharacter_DoNeuter_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.DoDeathHarvestingFadeOut
struct APrimalDinoCharacter_DoDeathHarvestingFadeOut_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.DoAttack
struct APrimalDinoCharacter_DoAttack_Params
{
	int                                                AttackIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSetCurrentAttack;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bInterruptCurrentAttack;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.DinoShoulderMountedLaunch
struct APrimalDinoCharacter_DinoShoulderMountedLaunch_Params
{
	struct FVector                                     launchDir;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           throwingCharacter;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.DinoFireProjectileEx
struct APrimalDinoCharacter_DinoFireProjectileEx_Params
{
	class UClass*                                      ProjectileClass;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Origin;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector_NetQuantizeNormal                   ShootDir;                                                  // (Parm)
	bool                                               bScaleProjDamageByDinoDamage;                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bAddDinoVelocityToProjectile;                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OverrideInitialSpeed;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OverrideMaxSpeed;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ExtraDirectDamageMultiplier;                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ExtraExplosionDamageMultiplier;                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               spawnOnOwningClient;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.Die
struct APrimalDinoCharacter_Die_Params
{
	float                                              KillingDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	class AController*                                 Killer;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.DestroyController
struct APrimalDinoCharacter_DestroyController_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.CycleAttackWeightsForAttackAtIndex
struct APrimalDinoCharacter_CycleAttackWeightsForAttackAtIndex_Params
{
	int                                                AttackIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.CreateCloneFertilizedEgg
struct APrimalDinoCharacter_CreateCloneFertilizedEgg_Params
{
	struct FVector                                     AtLoc;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    AtRot;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      DroppedItemTemplateOverride;                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                NumMutationsToAdd;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ADroppedItem*                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.CopySettingsToOtherDino
struct APrimalDinoCharacter_CopySettingsToOtherDino_Params
{
	class APlayerController*                           ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalDinoCharacter*                        FromDino;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalDinoCharacter*                        OtherDino;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                SettingTypeUseIndex;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.CopyPaintingComponentFrom
struct APrimalDinoCharacter_CopyPaintingComponentFrom_Params
{
	class APrimalDinoCharacter*                        Other;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.ClientStartLanding
struct APrimalDinoCharacter_ClientStartLanding_Params
{
	struct FVector                                     landingLoc;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.ClientShouldNotifyLanded
struct APrimalDinoCharacter_ClientShouldNotifyLanded_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.ClientInterruptLanding
struct APrimalDinoCharacter_ClientInterruptLanding_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.ClearTamedLandTarget
struct APrimalDinoCharacter_ClearTamedLandTarget_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.ClearRider
struct APrimalDinoCharacter_ClearRider_Params
{
	bool                                               bFromRider;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bCancelForceLand;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               SpawnDinoDefaultController;                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                OverrideUnboardDirection;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceEvenIfBuffPreventsClear;                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.ClearPassengers
struct APrimalDinoCharacter_ClearPassengers_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.ClearMountCharacter
struct APrimalDinoCharacter_ClearMountCharacter_Params
{
	bool                                               bFromMountCharacter;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.ClearCharacterAIMovement
struct APrimalDinoCharacter_ClearCharacterAIMovement_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.ClearCarriedCharacter
struct APrimalDinoCharacter_ClearCarriedCharacter_Params
{
	bool                                               fromCarriedCharacter;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bCancelAnyCarryBuffs;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.CheckForTamedFoodConsumption
struct APrimalDinoCharacter_CheckForTamedFoodConsumption_Params
{
	int                                                Steps;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.CarryCharacter
struct APrimalDinoCharacter_CarryCharacter_Params
{
	class APrimalCharacter*                            aRider;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               byPassCanCarryCheck;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.CanTakePassenger
struct APrimalDinoCharacter_CanTakePassenger_Params
{
	class APrimalCharacter*                            ACharacter;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                PassengerSeatIndex;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForcePassenger;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bAllowFlyersAndWaterDinos;                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSkipLineTrace;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.CanOrder
struct APrimalDinoCharacter_CanOrder_Params
{
	class APrimalCharacter*                            FromCharacter;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bBuildingStructures;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.CanNurseDino
struct APrimalDinoCharacter_CanNurseDino_Params
{
	class APrimalDinoCharacter*                        OtherDino;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.CanMount
struct APrimalDinoCharacter_CanMount_Params
{
	class APrimalCharacter*                            ACharacter;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.CanFly
struct APrimalDinoCharacter_CanFly_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.CanDinoAttackTargetsWithoutRider
struct APrimalDinoCharacter_CanDinoAttackTargetsWithoutRider_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.CanCryo
struct APrimalDinoCharacter_CanCryo_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.CanClearRider
struct APrimalDinoCharacter_CanClearRider_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.CancelCurrentAttack
struct APrimalDinoCharacter_CancelCurrentAttack_Params
{
	bool                                               bStopCurrentAttackAnim;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              AttackAnimBlendOutTime;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.CanCarryCharacter
struct APrimalDinoCharacter_CanCarryCharacter_Params
{
	class APrimalCharacter*                            CanCarryPawn;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.CanAttack
struct APrimalDinoCharacter_CanAttack_Params
{
	int                                                AttackIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BSetupDinoTameable
struct APrimalDinoCharacter_BSetupDinoTameable_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.BrakeDinoBP
struct APrimalDinoCharacter_BrakeDinoBP_Params
{
	float                                              val;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPUntamedConsumeFoodItem
struct APrimalDinoCharacter_BPUntamedConsumeFoodItem_Params
{
	class UPrimalItem*                                 foodItem;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPUnstasisConsumeFood
struct APrimalDinoCharacter_BPUnstasisConsumeFood_Params
{
	float                                              FoodNeeded;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPUnstasis
struct APrimalDinoCharacter_BPUnstasis_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.BPUnsetupDinoTameable
struct APrimalDinoCharacter_BPUnsetupDinoTameable_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.BPTamedConsumeFoodItem
struct APrimalDinoCharacter_BPTamedConsumeFoodItem_Params
{
	class UPrimalItem*                                 foodItem;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPStaticCreateBabyDinoNoAncestors
struct APrimalDinoCharacter_BPStaticCreateBabyDinoNoAncestors_Params
{
	class UWorld*                                      TheWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      EggDinoClassToSpawn;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     theGroundLoc;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              actorRotationYaw;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<unsigned char>                              EggColorSetIndices;                                        // (Parm, ZeroConstructor)
	TArray<unsigned char>                              EggNumberOfLevelUpPointsApplied;                           // (Parm, ZeroConstructor)
	float                                              EggTamedIneffectivenessModifier;                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                NotifyTeamOverride;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                EggRandomMutationsFemale;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                EggRandomMutationsMale;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalDinoCharacter*                        ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPStaticCreateBabyDino
struct APrimalDinoCharacter_BPStaticCreateBabyDino_Params
{
	class UWorld*                                      TheWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      EggDinoClassToSpawn;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     theGroundLoc;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              actorRotationYaw;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<unsigned char>                              EggColorSetIndices;                                        // (Parm, ZeroConstructor)
	TArray<unsigned char>                              EggNumberOfLevelUpPointsApplied;                           // (Parm, ZeroConstructor)
	float                                              EggTamedIneffectivenessModifier;                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FDinoAncestorsEntry>                 EggDinoAncestors;                                          // (Parm, ZeroConstructor)
	TArray<struct FDinoAncestorsEntry>                 EggDinoAncestorsMale;                                      // (Parm, ZeroConstructor)
	int                                                NotifyTeamOverride;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                EggRandomMutationsFemale;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                EggRandomMutationsMale;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                EggGenderOverride;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalDinoCharacter*                        ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPShowTamingPanel
struct APrimalDinoCharacter_BPShowTamingPanel_Params
{
	bool                                               currentVisibility;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPShouldForceFlee
struct APrimalDinoCharacter_BPShouldForceFlee_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPShouldCancelDoAttack
struct APrimalDinoCharacter_BPShouldCancelDoAttack_Params
{
	int                                                AttackIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPSetupTamed
struct APrimalDinoCharacter_BPSetupTamed_Params
{
	bool                                               bWasJustTamed;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPSetSimulatedInterpRollOverride
struct APrimalDinoCharacter_BPSetSimulatedInterpRollOverride_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPSetForcedAggro
struct APrimalDinoCharacter_BPSetForcedAggro_Params
{
	class AActor*                                      TargetableActor;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              AggroAmount;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ForcedAggroTime;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPSentKilledNotification
struct APrimalDinoCharacter_BPSentKilledNotification_Params
{
	class AShooterPlayerController*                    ToPC;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPResetClone
struct APrimalDinoCharacter_BPResetClone_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.BPPreventSpawnForPlayer
struct APrimalDinoCharacter_BPPreventSpawnForPlayer_Params
{
	class AShooterPlayerController*                    PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bCheckCooldownTime;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPPreventRiding
struct APrimalDinoCharacter_BPPreventRiding_Params
{
	class AShooterCharacter*                           ByPawn;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDontCheckDistance;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPPreventOrderAllowed
struct APrimalDinoCharacter_BPPreventOrderAllowed_Params
{
	class APrimalCharacter*                            FromCharacter;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_EDinoTamedOrder>           OrderType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForce;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      enemyTarget;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               orderNotExecuted;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPOverrideTamingDescriptionLabel
struct APrimalDinoCharacter_BPOverrideTamingDescriptionLabel_Params
{
	struct FSlateColor                                 TextColor;                                                 // (Parm, OutParm, ReferenceParm)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalDinoCharacter.BPOverrideStencilAllianceForTarget
struct APrimalDinoCharacter_BPOverrideStencilAllianceForTarget_Params
{
	class APrimalCharacter*                            TargetDino;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                         Component;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_EStencilAlliance>          ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPOverridePassengerAdditiveAnim
struct APrimalDinoCharacter_BPOverridePassengerAdditiveAnim_Params
{
	class APrimalCharacter*                            ForPassenger;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimSequence*                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPOverrideMutationLabels
struct APrimalDinoCharacter_BPOverrideMutationLabels_Params
{
	bool                                               male;                                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalDinoCharacter.BPOverrideMoveToOrder
struct APrimalDinoCharacter_BPOverrideMoveToOrder_Params
{
	struct FVector                                     MoveToLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           OrderingPlayer;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPOverrideHealthBarOffset
struct APrimalDinoCharacter_BPOverrideHealthBarOffset_Params
{
	class APlayerController*                           ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPOverrideGetAttackAnimationIndex
struct APrimalDinoCharacter_BPOverrideGetAttackAnimationIndex_Params
{
	int                                                AttackIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UAnimMontage*>                        AnimationArray;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPOverrideFloatingHUDLocation
struct APrimalDinoCharacter_BPOverrideFloatingHUDLocation_Params
{
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPOverrideCameraViewTarget
struct APrimalDinoCharacter_BPOverrideCameraViewTarget_Params
{
	struct FName                                       CurrentCameraMode;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     DesiredCameraLocation;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    DesiredCameraRotation;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DesiredFOV;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bOverrideCameraLocation;                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     CameraLocation;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bOverrideCameraRotation;                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    CameraRotation;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bOverrideCameraFOV;                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              CameraFOV;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPOrderedMoveToLoc
struct APrimalDinoCharacter_BPOrderedMoveToLoc_Params
{
	struct FVector                                     DestLoc;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPOnTamedProcessOrder
struct APrimalDinoCharacter_BPOnTamedProcessOrder_Params
{
	class APrimalCharacter*                            FromCharacter;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_EDinoTamedOrder>           OrderType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForce;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      enemyTarget;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               orderNotExecuted;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPOnStopJump
struct APrimalDinoCharacter_BPOnStopJump_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPOnStartJump
struct APrimalDinoCharacter_BPOnStartJump_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPOnSetMountedDino
struct APrimalDinoCharacter_BPOnSetMountedDino_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.BPOnSetFlight
struct APrimalDinoCharacter_BPOnSetFlight_Params
{
	bool                                               bFly;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPOnRepIsCharging
struct APrimalDinoCharacter_BPOnRepIsCharging_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.BPOnRefreshColorization
struct APrimalDinoCharacter_BPOnRefreshColorization_Params
{
	TArray<struct FLinearColor>                        Colors;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function ShooterGame.PrimalDinoCharacter.BPOnEndCharging
struct APrimalDinoCharacter_BPOnEndCharging_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.BPOnDinoStartled
struct APrimalDinoCharacter_BPOnDinoStartled_Params
{
	class UAnimMontage*                                StartledAnimPlayed;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bFromAIController;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPOnDinoCheat
struct APrimalDinoCharacter_BPOnDinoCheat_Params
{
	struct FName                                       CheatName;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSetValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Value;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPOnClearMountedDino
struct APrimalDinoCharacter_BPOnClearMountedDino_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.BPNotifyWildHarvestAttack
struct APrimalDinoCharacter_BPNotifyWildHarvestAttack_Params
{
	int                                                harvestIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPNotifyStructurePlacedNearby
struct APrimalDinoCharacter_BPNotifyStructurePlacedNearby_Params
{
	class APrimalStructure*                            NewStructure;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPNotifySetRider
struct APrimalDinoCharacter_BPNotifySetRider_Params
{
	class AShooterCharacter*                           RiderSetting;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPNotifyNameEditText
struct APrimalDinoCharacter_BPNotifyNameEditText_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPNotifyMateBoostChanged
struct APrimalDinoCharacter_BPNotifyMateBoostChanged_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.BPNotifyIfPassengerLaunchShoulderMount
struct APrimalDinoCharacter_BPNotifyIfPassengerLaunchShoulderMount_Params
{
	class APrimalCharacter*                            launchedCharacter;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPNotifyClearRider
struct APrimalDinoCharacter_BPNotifyClearRider_Params
{
	class AShooterCharacter*                           RiderClearing;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPNotifyClearPassenger
struct APrimalDinoCharacter_BPNotifyClearPassenger_Params
{
	class APrimalCharacter*                            PassengerChar;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                SeatIndex;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPNotifyClaimed
struct APrimalDinoCharacter_BPNotifyClaimed_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.BPNotifyCarriedDinoBabyAgeIncrement
struct APrimalDinoCharacter_BPNotifyCarriedDinoBabyAgeIncrement_Params
{
	class APrimalDinoCharacter*                        AgingCarriedDino;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              PreviousAge;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              NewAge;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPNotifyBabyAgeIncrement
struct APrimalDinoCharacter_BPNotifyBabyAgeIncrement_Params
{
	float                                              PreviousAge;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              NewAge;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPNotifyAddPassenger
struct APrimalDinoCharacter_BPNotifyAddPassenger_Params
{
	class APrimalCharacter*                            PassengerChar;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                SeatIndex;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPModifyHarvestingWeightsArray
struct APrimalDinoCharacter_BPModifyHarvestingWeightsArray_Params
{
	TArray<float>                                      resourceWeightsIn;                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class UPrimalItem*>                         resourceItems;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<float>                                      resourceWeightsOut;                                        // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPModifyHarvestingQuantity
struct APrimalDinoCharacter_BPModifyHarvestingQuantity_Params
{
	float                                              originalQuantity;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      resourceSelected;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPModifyHarvestDamage
struct APrimalDinoCharacter_BPModifyHarvestDamage_Params
{
	class UPrimalHarvestingComponent*                  harvestComponent;                                          // (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	float                                              inDamage;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPModifyDesiredRotation
struct APrimalDinoCharacter_BPModifyDesiredRotation_Params
{
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    InDesiredRotation;                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    OutDesiredRotation;                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPModifyControlRotation
struct APrimalDinoCharacter_BPModifyControlRotation_Params
{
	struct FRotator                                    ControlRotation;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    outControlRotation;                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPModifyAimOffsetTargetLocation
struct APrimalDinoCharacter_BPModifyAimOffsetTargetLocation_Params
{
	struct FVector                                     AimTargetLocation;                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPModifyAimOffsetNoTarget
struct APrimalDinoCharacter_BPModifyAimOffsetNoTarget_Params
{
	struct FRotator                                    Aim;                                                       // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPKilledSomethingEvent
struct APrimalDinoCharacter_BPKilledSomethingEvent_Params
{
	class APrimalCharacter*                            killedTarget;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPIsValidUnStasisCaster
struct APrimalDinoCharacter_BPIsValidUnStasisCaster_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPIsTamed
struct APrimalDinoCharacter_BPIsTamed_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPIsHidden
struct APrimalDinoCharacter_BPIsHidden_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPIsBasedOnActor
struct APrimalDinoCharacter_BPIsBasedOnActor_Params
{
	class AActor*                                      Other;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPHasCurrentAttack
struct APrimalDinoCharacter_BPHasCurrentAttack_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPHandleUseButtonPress
struct APrimalDinoCharacter_BPHandleUseButtonPress_Params
{
	class AShooterPlayerController*                    RiderController;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPHandleOnStopTargeting
struct APrimalDinoCharacter_BPHandleOnStopTargeting_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPHandleOnStopFire
struct APrimalDinoCharacter_BPHandleOnStopFire_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPHandleControllerInitiatedAttack
struct APrimalDinoCharacter_BPHandleControllerInitiatedAttack_Params
{
	int                                                AttackIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPGetTargetingDesirability
struct APrimalDinoCharacter_BPGetTargetingDesirability_Params
{
	class AActor*                                      Attacker;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPGetRiderUnboardLocation
struct APrimalDinoCharacter_BPGetRiderUnboardLocation_Params
{
	class APrimalCharacter*                            RidingCharacter;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPGetRiderUnboardDirection
struct APrimalDinoCharacter_BPGetRiderUnboardDirection_Params
{
	class APrimalCharacter*                            RidingCharacter;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPGetRiderSocket
struct APrimalDinoCharacter_BPGetRiderSocket_Params
{
	struct FName                                       ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPGetPassengerDinoAdditionalOffset
struct APrimalDinoCharacter_BPGetPassengerDinoAdditionalOffset_Params
{
	class APrimalDinoCharacter*                        Passenger;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPGetOtherActorToIgnore
struct APrimalDinoCharacter_BPGetOtherActorToIgnore_Params
{
	class AActor*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPGetLookOffsetSocketName
struct APrimalDinoCharacter_BPGetLookOffsetSocketName_Params
{
	class APrimalCharacter*                            ForPrimalChar;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPGetHealthBarColor
struct APrimalDinoCharacter_BPGetHealthBarColor_Params
{
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPGetDragSocketName
struct APrimalDinoCharacter_BPGetDragSocketName_Params
{
	class APrimalCharacter*                            DraggingChar;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPGetDragSocketDinoName
struct APrimalDinoCharacter_BPGetDragSocketDinoName_Params
{
	class APrimalDinoCharacter*                        aGrabbedDino;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPGetCustomDinoSetup
struct APrimalDinoCharacter_BPGetCustomDinoSetup_Params
{
	struct FDinoSetup                                  ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.PrimalDinoCharacter.BPGetCurrentAttackIndex
struct APrimalDinoCharacter_BPGetCurrentAttackIndex_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPGetCrosshairSpread
struct APrimalDinoCharacter_BPGetCrosshairSpread_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPGetCrosshairLocation
struct APrimalDinoCharacter_BPGetCrosshairLocation_Params
{
	float                                              CanvasClipX;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              CanvasClipY;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OutX;                                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OutY;                                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPGetCrosshairColor
struct APrimalDinoCharacter_BPGetCrosshairColor_Params
{
	struct FLinearColor                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPGetCrosshairAlpha
struct APrimalDinoCharacter_BPGetCrosshairAlpha_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPGetAttackOfPlayedAnimation
struct APrimalDinoCharacter_BPGetAttackOfPlayedAnimation_Params
{
	struct FDinoAttackInfo                             AttackInfo;                                                // (Parm, OutParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPForceTurretFastTargeting
struct APrimalDinoCharacter_BPForceTurretFastTargeting_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPForceReachedDestination
struct APrimalDinoCharacter_BPForceReachedDestination_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.BPFedWakingTameEvent
struct APrimalDinoCharacter_BPFedWakingTameEvent_Params
{
	class APlayerController*                           ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPDrawToRiderHUD
struct APrimalDinoCharacter_BPDrawToRiderHUD_Params
{
	class AShooterHUD*                                 HUD;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPDoHarvestAttack
struct APrimalDinoCharacter_BPDoHarvestAttack_Params
{
	int                                                harvestIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPDoAttack
struct APrimalDinoCharacter_BPDoAttack_Params
{
	int                                                AttackIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPDisplayTamedMessage
struct APrimalDinoCharacter_BPDisplayTamedMessage_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPDinoTooltipCustomTorpidityProgressBar
struct APrimalDinoCharacter_BPDinoTooltipCustomTorpidityProgressBar_Params
{
	bool                                               overrideTorpidityProgressBarIfActive;                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              progressPercent;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     Label;                                                     // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPDinoTooltipCustomTamingProgressBar
struct APrimalDinoCharacter_BPDinoTooltipCustomTamingProgressBar_Params
{
	bool                                               overrideTamingProgressBarIfActive;                         // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              progressPercent;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     Label;                                                     // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPDinoPrepareForARKUploading
struct APrimalDinoCharacter_BPDinoPrepareForARKUploading_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.BPDinoPostBeginPlay
struct APrimalDinoCharacter_BPDinoPostBeginPlay_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.BPDinoARKDownloadedEnd
struct APrimalDinoCharacter_BPDinoARKDownloadedEnd_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.BPDinoARKDownloadedBegin
struct APrimalDinoCharacter_BPDinoARKDownloadedBegin_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.BPDidSetCarriedCharacter
struct APrimalDinoCharacter_BPDidSetCarriedCharacter_Params
{
	class APrimalCharacter*                            PreviousCarriedCharacter;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPDidClearCarriedCharacter
struct APrimalDinoCharacter_BPDidClearCarriedCharacter_Params
{
	class APrimalCharacter*                            PreviousCarriedCharacter;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPDesiredRotationIsLocalSpace
struct APrimalDinoCharacter_BPDesiredRotationIsLocalSpace_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPConsumeInventoryFoodItem
struct APrimalDinoCharacter_BPConsumeInventoryFoodItem_Params
{
	class UPrimalItem*                                 foodItem;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bConsumeEntireStack;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPClampMaxHarvestHealth
struct APrimalDinoCharacter_BPClampMaxHarvestHealth_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPCheckSeven
struct APrimalDinoCharacter_BPCheckSeven_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPCheckCanSpawnFromLocation
struct APrimalDinoCharacter_BPCheckCanSpawnFromLocation_Params
{
	struct FVector                                     CheckLocation;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPChargingModifyInputAcceleration
struct APrimalDinoCharacter_BPChargingModifyInputAcceleration_Params
{
	struct FVector                                     inputAcceleration;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPCarriedDinoBabyRescaled
struct APrimalDinoCharacter_BPCarriedDinoBabyRescaled_Params
{
	class APrimalDinoCharacter*                        AgingCarriedDino;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              NewAge;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPCanTargetCorpse
struct APrimalDinoCharacter_BPCanTargetCorpse_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPCanTakePassenger
struct APrimalDinoCharacter_BPCanTakePassenger_Params
{
	class APrimalCharacter*                            Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                PassengerSeatIndex;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForcePassenger;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bAllowFlyersAndWaterDinos;                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPCanMountOnCharacter
struct APrimalDinoCharacter_BPCanMountOnCharacter_Params
{
	class APrimalCharacter*                            Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPCanIgnoreImmobilizationTrap
struct APrimalDinoCharacter_BPCanIgnoreImmobilizationTrap_Params
{
	class UClass*                                      TrapClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceTrigger;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPCanDragCharacter
struct APrimalDinoCharacter_BPCanDragCharacter_Params
{
	class APrimalCharacter*                            Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPCanCryo
struct APrimalDinoCharacter_BPCanCryo_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPCanAutodrag
struct APrimalDinoCharacter_BPCanAutodrag_Params
{
	class APrimalCharacter*                            characterToDrag;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPBecomeBaby
struct APrimalDinoCharacter_BPBecomeBaby_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.BPBecomeAdult
struct APrimalDinoCharacter_BPBecomeAdult_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.BPBecameNewBaby
struct APrimalDinoCharacter_BPBecameNewBaby_Params
{
	class APrimalDinoCharacter*                        Parent;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPAllowEquippingItemType
struct APrimalDinoCharacter_BPAllowEquippingItemType_Params
{
	TEnumAsByte<Engine_EPrimalEquipmentType>           equipmentType;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPAllowClaiming
struct APrimalDinoCharacter_BPAllowClaiming_Params
{
	class AShooterPlayerController*                    ForPlayer;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPAllowCarryCharacter
struct APrimalDinoCharacter_BPAllowCarryCharacter_Params
{
	class APrimalCharacter*                            checkCharacter;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BPAdjustAttackIndex
struct APrimalDinoCharacter_BPAdjustAttackIndex_Params
{
	int                                                AttackIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BP_ShouldDisableBasedCharactersCameraInterpolation
struct APrimalDinoCharacter_BP_ShouldDisableBasedCharactersCameraInterpolation_Params
{
	class APrimalCharacter*                            ForBasedChar;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BP_PreventUnmounting
struct APrimalDinoCharacter_BP_PreventUnmounting_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BP_PreventCarryingByCharacter
struct APrimalDinoCharacter_BP_PreventCarryingByCharacter_Params
{
	class APrimalCharacter*                            ByCarrier;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BP_PreventCarrying
struct APrimalDinoCharacter_BP_PreventCarrying_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BP_OverrideRiderCameraCollisionSweep
struct APrimalDinoCharacter_BP_OverrideRiderCameraCollisionSweep_Params
{
	struct FVector                                     SweepStart;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     SweepEnd;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FHitResult                                  ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.PrimalDinoCharacter.BP_OverrideDinoName
struct APrimalDinoCharacter_BP_OverrideDinoName_Params
{
	struct FString                                     CurrentDinoName;                                           // (Parm, ZeroConstructor)
	class APlayerController*                           ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalDinoCharacter.BP_OverrideCarriedCharacterTransform
struct APrimalDinoCharacter_BP_OverrideCarriedCharacterTransform_Params
{
	class APrimalCharacter*                            ForCarriedChar;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BP_OverrideBasedCharactersCameraInterpSpeed
struct APrimalDinoCharacter_BP_OverrideBasedCharactersCameraInterpSpeed_Params
{
	class APrimalCharacter*                            ForBasedChar;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DefaultTPVCameraSpeedInterpMultiplier;                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DefaultTPVOffsetInterpSpeed;                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              TPVCameraSpeedInterpMultiplier;                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              TPVOffsetInterpSpeed;                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BP_OnUncryo
struct APrimalDinoCharacter_BP_OnUncryo_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BP_OnTargetedByTamedOrder
struct APrimalDinoCharacter_BP_OnTargetedByTamedOrder_Params
{
	class APrimalCharacter*                            OrderingCharacter;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalDinoCharacter*                        AttackingDino;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForced;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BP_OnTamedOrderReceived
struct APrimalDinoCharacter_BP_OnTamedOrderReceived_Params
{
	class APrimalCharacter*                            FromCharacter;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_EDinoTamedOrder>           OrderType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForce;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      enemyTarget;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               orderNotExecuted;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BP_OnStartLandingNotify
struct APrimalDinoCharacter_BP_OnStartLandingNotify_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.BP_OnStartLandFailed
struct APrimalDinoCharacter_BP_OnStartLandFailed_Params
{
	int                                                ReasonIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BP_OnRiderChangeWeapons
struct APrimalDinoCharacter_BP_OnRiderChangeWeapons_Params
{
	class AShooterCharacter*                           theRider;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 newWeapon;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BP_OnPostNetReplication
struct APrimalDinoCharacter_BP_OnPostNetReplication_Params
{
	struct FVector                                     ReplicatedLoc;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    ReplicatedRot;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BP_OnLandingInterruptedNotify
struct APrimalDinoCharacter_BP_OnLandingInterruptedNotify_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.BP_OnCryo
struct APrimalDinoCharacter_BP_OnCryo_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BP_OnBasedPawnRemovedNotify
struct APrimalDinoCharacter_BP_OnBasedPawnRemovedNotify_Params
{
	class AActor*                                      RemovedActor;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BP_OnBasedPawnAddedNotify
struct APrimalDinoCharacter_BP_OnBasedPawnAddedNotify_Params
{
	class AActor*                                      AddedActor;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BP_InterceptTurnInput
struct APrimalDinoCharacter_BP_InterceptTurnInput_Params
{
	float                                              AxisValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BP_InterceptMoveRight
struct APrimalDinoCharacter_BP_InterceptMoveRight_Params
{
	float                                              AxisValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BP_InterceptMoveForward
struct APrimalDinoCharacter_BP_InterceptMoveForward_Params
{
	float                                              AxisValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BP_GetCustomModifier_RotationRate
struct APrimalDinoCharacter_BP_GetCustomModifier_RotationRate_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BP_GetCustomModifier_MaxSpeed
struct APrimalDinoCharacter_BP_GetCustomModifier_MaxSpeed_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BP_ForceAllowMountedWeapon
struct APrimalDinoCharacter_BP_ForceAllowMountedWeapon_Params
{
	class UClass*                                      WeaponTemplate;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BP_CanFly
struct APrimalDinoCharacter_BP_CanFly_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BP_AllowWalkableSlopeOverride
struct APrimalDinoCharacter_BP_AllowWalkableSlopeOverride_Params
{
	class UPrimitiveComponent*                         ForComponent;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BlueprintTamedTick
struct APrimalDinoCharacter_BlueprintTamedTick_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.BlueprintPlayDying
struct APrimalDinoCharacter_BlueprintPlayDying_Params
{
	float                                              KillingDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	class APawn*                                       InstigatingPawn;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BlueprintOverrideWantsToRun
struct APrimalDinoCharacter_BlueprintOverrideWantsToRun_Params
{
	bool                                               bInputWantsToRun;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BlueprintOverrideHarvestDamageType
struct APrimalDinoCharacter_BlueprintOverrideHarvestDamageType_Params
{
	float                                              OutHarvestDamageMultiplier;                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BlueprintGetAttackWeight
struct APrimalDinoCharacter_BlueprintGetAttackWeight_Params
{
	int                                                AttackIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              inputWeight;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Distance;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              attackRangeOffset;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      OtherTarget;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BlueprintExtraBabyScaling
struct APrimalDinoCharacter_BlueprintExtraBabyScaling_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BlueprintDrawFloatingHUD
struct APrimalDinoCharacter_BlueprintDrawFloatingHUD_Params
{
	class AShooterHUD*                                 HUD;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              CenterX;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              CenterY;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DrawScale;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BlueprintCanRiderAttack
struct APrimalDinoCharacter_BlueprintCanRiderAttack_Params
{
	int                                                AttackIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BlueprintCanAttack
struct APrimalDinoCharacter_BlueprintCanAttack_Params
{
	int                                                AttackIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Distance;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              attackRangeOffset;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      OtherTarget;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.BlueprintAdjustOutputDamage
struct APrimalDinoCharacter_BlueprintAdjustOutputDamage_Params
{
	int                                                AttackIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OriginalDamageAmount;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      HitActor;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      OutDamageType;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OutDamageImpulse;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.AssertColorNames
struct APrimalDinoCharacter_AssertColorNames_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.AreSpawnerSublevelsLoaded
struct APrimalDinoCharacter_AreSpawnerSublevelsLoaded_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.ApplyRidingAttackExtraVelocity
struct APrimalDinoCharacter_ApplyRidingAttackExtraVelocity_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.ApplyMutagen
struct APrimalDinoCharacter_ApplyMutagen_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.AnimNotifyMountedDino
struct APrimalDinoCharacter_AnimNotifyMountedDino_Params
{
};

// Function ShooterGame.PrimalDinoCharacter.AllowWakingTame
struct APrimalDinoCharacter_AllowWakingTame_Params
{
	class APlayerController*                           ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.AllowMountedWeaponry
struct APrimalDinoCharacter_AllowMountedWeaponry_Params
{
	bool                                               bIgnoreCurrentWeapon;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bWeaponForcesMountedWeaponry;                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.AllowCarryCharacter
struct APrimalDinoCharacter_AllowCarryCharacter_Params
{
	class APrimalCharacter*                            CanCarryPawn;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.AddToMeleeSwingHurtList
struct APrimalDinoCharacter_AddToMeleeSwingHurtList_Params
{
	class AActor*                                      anActor;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.AddPassenger
struct APrimalDinoCharacter_AddPassenger_Params
{
	class APrimalCharacter*                            ACharacter;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                PassengerSeatIndex;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForcePassenger;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bAllowFlyersAndWaterDinos;                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSkipLineTrace;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.AddedImprintingQuality
struct APrimalDinoCharacter_AddedImprintingQuality_Params
{
	float                                              amount;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalDinoCharacter.AddDinoReferenceInLatchingStructure
struct APrimalDinoCharacter_AddDinoReferenceInLatchingStructure_Params
{
	class APrimalStructure*                            Structure;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBotCharacter.OnRep_RidingDino
struct APrimalBotCharacter_OnRep_RidingDino_Params
{
};

// Function ShooterGame.PrimalBotCharacter.IsUsingAlternateSkelMesh
struct APrimalBotCharacter_IsUsingAlternateSkelMesh_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBotCharacter.GetMinAttackRange
struct APrimalBotCharacter_GetMinAttackRange_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBotCharacter.GetMaxAttackRange
struct APrimalBotCharacter_GetMaxAttackRange_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBotCharacter.GetDinoRidingMoveAnimation
struct APrimalBotCharacter_GetDinoRidingMoveAnimation_Params
{
	class UAnimSequence*                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBotCharacter.GetDinoRidingAnimation
struct APrimalBotCharacter_GetDinoRidingAnimation_Params
{
	class UAnimSequence*                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBotCharacter.GetBotAnimSequenceOverride
struct APrimalBotCharacter_GetBotAnimSequenceOverride_Params
{
	class UAnimSequence*                               AnimSeq;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimSequence*                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBotCharacter.CurrentlyRiddenDino
struct APrimalBotCharacter_CurrentlyRiddenDino_Params
{
	class APrimalDinoCharacter*                        ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBotCharacter.ClearRidingDino
struct APrimalBotCharacter_ClearRidingDino_Params
{
};

// Function ShooterGame.PrimalBotCharacter.CanRideDino
struct APrimalBotCharacter_CanRideDino_Params
{
	class APrimalDinoCharacter*                        Dino;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBotCharacter.AttachToDino
struct APrimalBotCharacter_AttachToDino_Params
{
	class APrimalDinoCharacter*                        Dino;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalRaft.TempDisableForcedVelcoityDirection
struct APrimalRaft_TempDisableForcedVelcoityDirection_Params
{
};

// Function ShooterGame.PrimalRaft.BPOverrideSwimmingVelocity
struct APrimalRaft_BPOverrideSwimmingVelocity_Params
{
	struct FVector                                     InitialVelocity;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Gravity;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              FluidFriction;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              NetBuoyancy;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalRaft.BPAllowMovementSound
struct APrimalRaft_BPAllowMovementSound_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalRaft.BP_OverrideSwimmingAcceleration
struct APrimalRaft_BP_OverrideSwimmingAcceleration_Params
{
	struct FVector                                     ModifyAcceleration;                                        // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalWheeledVehicleCharacter.StopHonk
struct APrimalWheeledVehicleCharacter_StopHonk_Params
{
};

// Function ShooterGame.PrimalWheeledVehicleCharacter.StartHonk
struct APrimalWheeledVehicleCharacter_StartHonk_Params
{
};

// Function ShooterGame.PrimalWheeledVehicleCharacter.ServerHonk
struct APrimalWheeledVehicleCharacter_ServerHonk_Params
{
	bool                                               bEnable;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalWheeledVehicleCharacter.NetHonk
struct APrimalWheeledVehicleCharacter_NetHonk_Params
{
	bool                                               bEnable;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalWheeledVehicleCharacter.GetVehicleMovementComponent
struct APrimalWheeledVehicleCharacter_GetVehicleMovementComponent_Params
{
	class UWheeledVehicleMovementComponent*            ReturnValue;                                               // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.WeaponEvent__DelegateSignature
struct AShooterCharacter_WeaponEvent__DelegateSignature_Params
{
	class AShooterWeapon*                              weapon;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.UseAlternateStandingAnim
struct AShooterCharacter_UseAlternateStandingAnim_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.UseAltAimOffsetAnim
struct AShooterCharacter_UseAltAimOffsetAnim_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.UseAdditiveStandingAnim
struct AShooterCharacter_UseAdditiveStandingAnim_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.UpdateExpectedBase
struct AShooterCharacter_UpdateExpectedBase_Params
{
};

// Function ShooterGame.ShooterCharacter.UpdateAutoTurn
struct AShooterCharacter_UpdateAutoTurn_Params
{
};

// Function ShooterGame.ShooterCharacter.UpdateAutoPlayer
struct AShooterCharacter_UpdateAutoPlayer_Params
{
};

// Function ShooterGame.ShooterCharacter.UpdateAutoMove
struct AShooterCharacter_UpdateAutoMove_Params
{
};

// Function ShooterGame.ShooterCharacter.UpdateAutoJump
struct AShooterCharacter_UpdateAutoJump_Params
{
};

// Function ShooterGame.ShooterCharacter.UpdateAutoFire
struct AShooterCharacter_UpdateAutoFire_Params
{
};

// Function ShooterGame.ShooterCharacter.TryCutEnemyGrapplingCable
struct AShooterCharacter_TryCutEnemyGrapplingCable_Params
{
};

// Function ShooterGame.ShooterCharacter.SyncGrapHookDistance
struct AShooterCharacter_SyncGrapHookDistance_Params
{
	float                                              Distance;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.StructurePlacementUseAlternateOriginActor
struct AShooterCharacter_StructurePlacementUseAlternateOriginActor_Params
{
	class AActor*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.StartWeaponSwitch
struct AShooterCharacter_StartWeaponSwitch_Params
{
	class UPrimalItem*                                 aPrimalItem;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDontClearLastWeapon;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.StartCameraTransition
struct AShooterCharacter_StartCameraTransition_Params
{
	float                                              Duration;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.ShowWeapon
struct AShooterCharacter_ShowWeapon_Params
{
};

// Function ShooterGame.ShooterCharacter.SetPreventEquipAllWeapons
struct AShooterCharacter_SetPreventEquipAllWeapons_Params
{
	bool                                               bPrevent;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.SetPlayerHexagonCount
struct AShooterCharacter_SetPlayerHexagonCount_Params
{
	int                                                NewHexagonCount;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.SetExpectedBase
struct AShooterCharacter_SetExpectedBase_Params
{
	class APrimalStructure*                            BaseStructure;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.SetCarriedPitchYaw
struct AShooterCharacter_SetCarriedPitchYaw_Params
{
	float                                              NewCarriedPitch;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              NewCarriedYaw;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.SetCameraMode
struct AShooterCharacter_SetCameraMode_Params
{
	bool                                               bFirstperson;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIgnoreSettingFirstPersonRiding;                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForce;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.SetAutoPlayer
struct AShooterCharacter_SetAutoPlayer_Params
{
	bool                                               bEnable;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.ServerToClientsPlayFireBallistaAnimation
struct AShooterCharacter_ServerToClientsPlayFireBallistaAnimation_Params
{
};

// Function ShooterGame.ShooterCharacter.ServerSwitchMap
struct AShooterCharacter_ServerSwitchMap_Params
{
};

// Function ShooterGame.ShooterCharacter.ServerSwitchBallistaAmmo
struct AShooterCharacter_ServerSwitchBallistaAmmo_Params
{
};

// Function ShooterGame.ShooterCharacter.ServerStopFireBallista
struct AShooterCharacter_ServerStopFireBallista_Params
{
};

// Function ShooterGame.ShooterCharacter.ServerStartSurfaceCameraForPassenger
struct AShooterCharacter_ServerStartSurfaceCameraForPassenger_Params
{
	float                                              Yaw;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Pitch;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Roll;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bShouldInvertInput;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.ServerSetViewingInventory
struct AShooterCharacter_ServerSetViewingInventory_Params
{
	bool                                               bIsViewing;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.ServerSetTargeting
struct AShooterCharacter_ServerSetTargeting_Params
{
	bool                                               bNewTargeting;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.ServerSetBallistaTargeting
struct AShooterCharacter_ServerSetBallistaTargeting_Params
{
	bool                                               StartTargeting;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.ServerSetBallistaNewRotation
struct AShooterCharacter_ServerSetBallistaNewRotation_Params
{
	float                                              Pitch;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Yaw;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.ServerSeatingStructureAction
struct AShooterCharacter_ServerSeatingStructureAction_Params
{
	unsigned char                                      ActionNumber;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.ServerRequestHexagonTrade
struct AShooterCharacter_ServerRequestHexagonTrade_Params
{
	int                                                RequestedTradableItemIndex;                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                Quantity;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.ServerReleaseGrapHookCable
struct AShooterCharacter_ServerReleaseGrapHookCable_Params
{
	bool                                               bReleasing;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.ServerPlayFireBallistaAnimation
struct AShooterCharacter_ServerPlayFireBallistaAnimation_Params
{
};

// Function ShooterGame.ShooterCharacter.ServerNotifyBallistaShot
struct AShooterCharacter_ServerNotifyBallistaShot_Params
{
	struct FHitResult                                  Impact;                                                    // (Parm)
	struct FVector_NetQuantizeNormal                   ShootDir;                                                  // (Parm)
};

// Function ShooterGame.ShooterCharacter.ServerNetEndClimbingLadder
struct AShooterCharacter_ServerNetEndClimbingLadder_Params
{
	bool                                               bIsClimbOver;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ClimbOverLoc;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              RightDir;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.ServerLaunchMountedDino
struct AShooterCharacter_ServerLaunchMountedDino_Params
{
};

// Function ShooterGame.ShooterCharacter.ServerForceUpdatedAimedActors
struct AShooterCharacter_ServerForceUpdatedAimedActors_Params
{
	float                                              OverrideMaxDistance;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bReplicateToSimulatedClients;                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.ServerFireBallistaProjectile
struct AShooterCharacter_ServerFireBallistaProjectile_Params
{
	struct FVector                                     Origin;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector_NetQuantizeNormal                   ShootDir;                                                  // (Parm)
};

// Function ShooterGame.ShooterCharacter.ServerDetachGrapHookCable
struct AShooterCharacter_ServerDetachGrapHookCable_Params
{
	bool                                               bDoUpwardsJump;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              UpwardsJumpYaw;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.ServerClearSwitchingWeapon
struct AShooterCharacter_ServerClearSwitchingWeapon_Params
{
	bool                                               bOnlyIfDefaultWeapon;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bClientRequestNextWeaponID;                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.ServerCheckDrinkingWater
struct AShooterCharacter_ServerCheckDrinkingWater_Params
{
};

// Function ShooterGame.ShooterCharacter.RenamePlayer
struct AShooterCharacter_RenamePlayer_Params
{
	struct FString                                     NewName;                                                   // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCharacter.RefreshRiderSocket
struct AShooterCharacter_RefreshRiderSocket_Params
{
};

// Function ShooterGame.ShooterCharacter.PlayEmoteAnimation
struct AShooterCharacter_PlayEmoteAnimation_Params
{
	unsigned char                                      EmoteIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.PlayDrinkingAnimation
struct AShooterCharacter_PlayDrinkingAnimation_Params
{
};

// Function ShooterGame.ShooterCharacter.OnWeaponUnequipped
struct AShooterCharacter_OnWeaponUnequipped_Params
{
	class AShooterWeapon*                              OldWeapon;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.OnWeaponEquipped
struct AShooterCharacter_OnWeaponEquipped_Params
{
	class AShooterWeapon*                              newWeapon;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.OnThirdPersonCameraView__DelegateSignature
struct AShooterCharacter_OnThirdPersonCameraView__DelegateSignature_Params
{
};

// Function ShooterGame.ShooterCharacter.OnRep_RawBoneModifiers
struct AShooterCharacter_OnRep_RawBoneModifiers_Params
{
};

// Function ShooterGame.ShooterCharacter.OnRep_HatHidden
struct AShooterCharacter_OnRep_HatHidden_Params
{
};

// Function ShooterGame.ShooterCharacter.OnRep_CurrentWeapon
struct AShooterCharacter_OnRep_CurrentWeapon_Params
{
	class AShooterWeapon*                              LastWeapon;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.OnFirstPersonCameraView__DelegateSignature
struct AShooterCharacter_OnFirstPersonCameraView__DelegateSignature_Params
{
};

// Function ShooterGame.ShooterCharacter.NetSimulatedForceUpdateAimedActors
struct AShooterCharacter_NetSimulatedForceUpdateAimedActors_Params
{
	float                                              OverrideMaxDistance;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.NetSetOverrideHeadHairColor
struct AShooterCharacter_NetSetOverrideHeadHairColor_Params
{
	struct FLinearColor                                HairColor;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.NetSetOverrideFacialHairColor
struct AShooterCharacter_NetSetOverrideFacialHairColor_Params
{
	struct FLinearColor                                HairColor;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.NetSetHeadHairPercent
struct AShooterCharacter_NetSetHeadHairPercent_Params
{
	float                                              thePercent;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                newHeadHairIndex;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.NetSetFacialHairPercent
struct AShooterCharacter_NetSetFacialHairPercent_Params
{
	float                                              thePercent;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                newFacialHairIndex;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.LinkedPlayerIDString
struct AShooterCharacter_LinkedPlayerIDString_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.ShooterCharacter.LaunchMountedDino
struct AShooterCharacter_LaunchMountedDino_Params
{
};

// Function ShooterGame.ShooterCharacter.IsWatchingExplorerNote
struct AShooterCharacter_IsWatchingExplorerNote_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.IsUsingShield
struct AShooterCharacter_IsUsingShield_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.IsUsingClimbingPick
struct AShooterCharacter_IsUsingClimbingPick_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.IsTargeting
struct AShooterCharacter_IsTargeting_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.IsPlayingUpperBodyCallAnimation
struct AShooterCharacter_IsPlayingUpperBodyCallAnimation_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.IsPlayingRepawnAnim
struct AShooterCharacter_IsPlayingRepawnAnim_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.IsPlayingInitialSpawnAnim
struct AShooterCharacter_IsPlayingInitialSpawnAnim_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.IsOutside
struct AShooterCharacter_IsOutside_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.IsNearTopOfLadder
struct AShooterCharacter_IsNearTopOfLadder_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.IsIndoorsAtLoc
struct AShooterCharacter_IsIndoorsAtLoc_Params
{
	class UWorld*                                      TheWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     actorLoc;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.IsGrapplingHardAttached
struct AShooterCharacter_IsGrapplingHardAttached_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.IsGrapplingAttachedToMe
struct AShooterCharacter_IsGrapplingAttachedToMe_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.IsFiring
struct AShooterCharacter_IsFiring_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.IsCurrentPassengerLimitCameraYaw
struct AShooterCharacter_IsCurrentPassengerLimitCameraYaw_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.IsCarriedAsPassenger
struct AShooterCharacter_IsCarriedAsPassenger_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.IsBlockingWithShield
struct AShooterCharacter_IsBlockingWithShield_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.HideWeapon
struct AShooterCharacter_HideWeapon_Params
{
};

// Function ShooterGame.ShooterCharacter.HasAnyOtherBuffsUsingConsolidatedMultiUse
struct AShooterCharacter_HasAnyOtherBuffsUsingConsolidatedMultiUse_Params
{
	class APrimalBuff*                                 BuffToSkip;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.GivePrimalItemWeapon
struct AShooterCharacter_GivePrimalItemWeapon_Params
{
	class UPrimalItem*                                 aPrimalItem;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.GiveHexagonsOnMissionReward
struct AShooterCharacter_GiveHexagonsOnMissionReward_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                BonusEarnedHexagons;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                HexagonAmountOverride;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.GiveHexagons
struct AShooterCharacter_GiveHexagons_Params
{
	int                                                NumHexagons;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                TriggerIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OverrideHexGainFalloffRate;                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                OverrideHexGainFalloffMin;                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OverrideCollectSFXVolume;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     OverrideVfxSpawnLoc;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                OverrideHexagonVFXActorCount;                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               VFXImmediatelyAttracts;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.GiveDefaultWeaponTimer
struct AShooterCharacter_GiveDefaultWeaponTimer_Params
{
};

// Function ShooterGame.ShooterCharacter.GiveDefaultWeapon
struct AShooterCharacter_GiveDefaultWeapon_Params
{
	bool                                               bForceGiveDefaultWeapon;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.GetWeapon
struct AShooterCharacter_GetWeapon_Params
{
	class AShooterWeapon*                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.GetTargetingSpeedModifier
struct AShooterCharacter_GetTargetingSpeedModifier_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.GetSpawnedForController
struct AShooterCharacter_GetSpawnedForController_Params
{
	class AShooterPlayerController*                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.GetSeatingAnimation
struct AShooterCharacter_GetSeatingAnimation_Params
{
	class UAnimSequence*                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.GetRidingDinoAnimSpeedRatio
struct AShooterCharacter_GetRidingDinoAnimSpeedRatio_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.GetRidingDino
struct AShooterCharacter_GetRidingDino_Params
{
	class APrimalDinoCharacter*                        ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.GetPlayerHexagonCount
struct AShooterCharacter_GetPlayerHexagonCount_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.GetPlayerData
struct AShooterCharacter_GetPlayerData_Params
{
	class UPrimalPlayerData*                           ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.GetPercentageOfHeadHairGrowth
struct AShooterCharacter_GetPercentageOfHeadHairGrowth_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.GetPercentageOfFacialHairGrowth
struct AShooterCharacter_GetPercentageOfFacialHairGrowth_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.GetLastAttackTime
struct AShooterCharacter_GetLastAttackTime_Params
{
	double                                             ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.GetHeadHairIndex
struct AShooterCharacter_GetHeadHairIndex_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.GetHeadHairColor
struct AShooterCharacter_GetHeadHairColor_Params
{
	struct FLinearColor                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.GetFacialHairIndex
struct AShooterCharacter_GetFacialHairIndex_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.GetFacialHairColor
struct AShooterCharacter_GetFacialHairColor_Params
{
	struct FLinearColor                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.GetDinoRidingMoveAnimation
struct AShooterCharacter_GetDinoRidingMoveAnimation_Params
{
	class UAnimSequence*                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.GetDinoRidingAnimation
struct AShooterCharacter_GetDinoRidingAnimation_Params
{
	class UAnimSequence*                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.GetBlockingShieldOffsets
struct AShooterCharacter_GetBlockingShieldOffsets_Params
{
	struct FVector                                     OutBlockingShieldFPVTranslation;                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    OutBlockingShieldFPVRotation;                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.GetAlternateStandingAnim
struct AShooterCharacter_GetAlternateStandingAnim_Params
{
	float                                              OutBlendInTime;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OutBlendOutTime;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimSequence*                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.GetAdditiveStandingAnimNonAdditive
struct AShooterCharacter_GetAdditiveStandingAnimNonAdditive_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.GetAdditiveStandingAnim
struct AShooterCharacter_GetAdditiveStandingAnim_Params
{
	float                                              OutBlendInTime;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OutBlendOutTime;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimSequence*                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.GetActualTargetingFOV
struct AShooterCharacter_GetActualTargetingFOV_Params
{
	float                                              DefaultTargetingFOV;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.GetActiveMission
struct AShooterCharacter_GetActiveMission_Params
{
	class AMissionType*                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.GameStateHandleEvent
struct AShooterCharacter_GameStateHandleEvent_Params
{
	struct FName                                       NameParam;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     VecParam;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.FinishWeaponSwitch
struct AShooterCharacter_FinishWeaponSwitch_Params
{
};

// Function ShooterGame.ShooterCharacter.FindForPlayerController
struct AShooterCharacter_FindForPlayerController_Params
{
	class AShooterPlayerController*                    aPC;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.DetachGrapHookCable
struct AShooterCharacter_DetachGrapHookCable_Params
{
};

// Function ShooterGame.ShooterCharacter.DetachFromLadder
struct AShooterCharacter_DetachFromLadder_Params
{
};

// Function ShooterGame.ShooterCharacter.ClientUpdateTranspondersInfo
struct AShooterCharacter_ClientUpdateTranspondersInfo_Params
{
	TArray<struct FTransponderInfo>                    TranspondersInfo;                                          // (ConstParm, Parm, ZeroConstructor)
	bool                                               bNewData;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.ClientsSpawnHexagonVFX
struct AShooterCharacter_ClientsSpawnHexagonVFX_Params
{
	int                                                NumHexagons;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OverrideCollectSFXVolume;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     OverrideVfxSpawnLoc;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                OverrideHexagonVFXActorCount;                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               VFXImmediatelyAttracts;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.ClientSetExpectedBase
struct AShooterCharacter_ClientSetExpectedBase_Params
{
	uint32_t                                           BaseID;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.ClientReceiveNextWeaponID
struct AShooterCharacter_ClientReceiveNextWeaponID_Params
{
	struct FItemNetID                                  theItemID;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.ClientPlayHarvestAnim
struct AShooterCharacter_ClientPlayHarvestAnim_Params
{
};

// Function ShooterGame.ShooterCharacter.ClientNotifyTribeRequest
struct AShooterCharacter_ClientNotifyTribeRequest_Params
{
	struct FString                                     RequestTribeName;                                          // (Parm, ZeroConstructor)
	class AShooterCharacter*                           PlayerCharacter;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.ClientNetEndClimbingLadder
struct AShooterCharacter_ClientNetEndClimbingLadder_Params
{
};

// Function ShooterGame.ShooterCharacter.ClientInviteToAlliance
struct AShooterCharacter_ClientInviteToAlliance_Params
{
	int                                                RequestingTeam;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint32_t                                           AllianceID;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     AllianceName;                                              // (Parm, ZeroConstructor)
	struct FString                                     InviteeName;                                               // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCharacter.ClientClearTribeRequest
struct AShooterCharacter_ClientClearTribeRequest_Params
{
};

// Function ShooterGame.ShooterCharacter.ClearSpawnAnim
struct AShooterCharacter_ClearSpawnAnim_Params
{
};

// Function ShooterGame.ShooterCharacter.ClearRidingDino
struct AShooterCharacter_ClearRidingDino_Params
{
	bool                                               bFromDino;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                OverrideUnboardDirection;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceEvenIfBuffPreventsClear;                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.CanEquipWeapons
struct AShooterCharacter_CanEquipWeapons_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.CallGameStateHandleEvent
struct AShooterCharacter_CallGameStateHandleEvent_Params
{
	struct FName                                       NameParam;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     VecParam;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.BuffsPreventFirstPerson
struct AShooterCharacter_BuffsPreventFirstPerson_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.BreakGrapple
struct AShooterCharacter_BreakGrapple_Params
{
};

// Function ShooterGame.ShooterCharacter.BPUnstasis
struct AShooterCharacter_BPUnstasis_Params
{
};

// Function ShooterGame.ShooterCharacter.BPUnlockedAllExplorerNotes
struct AShooterCharacter_BPUnlockedAllExplorerNotes_Params
{
};

// Function ShooterGame.ShooterCharacter.BPSetupFirstPersonHandsMesh
struct AShooterCharacter_BPSetupFirstPersonHandsMesh_Params
{
};

// Function ShooterGame.ShooterCharacter.BPSetPlayerHexagonCount
struct AShooterCharacter_BPSetPlayerHexagonCount_Params
{
	int                                                NewHexagonCount;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.BPSetFirstPersonMasterPoseComponent
struct AShooterCharacter_BPSetFirstPersonMasterPoseComponent_Params
{
	class USkeletalMeshComponent*                      firstPersonMasterPosecomponent;                            // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.BPOverrideHealthBarOffset
struct AShooterCharacter_BPOverrideHealthBarOffset_Params
{
	class APlayerController*                           ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.BPNonDedicatedPostAnimUpdate
struct AShooterCharacter_BPNonDedicatedPostAnimUpdate_Params
{
};

// Function ShooterGame.ShooterCharacter.BPGetPlayerHexagonCount
struct AShooterCharacter_BPGetPlayerHexagonCount_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.BPGetHealthBarColor
struct AShooterCharacter_BPGetHealthBarColor_Params
{
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.AuthPostSpawnInit
struct AShooterCharacter_AuthPostSpawnInit_Params
{
};

// Function ShooterGame.ShooterCharacter.AttachToLadder
struct AShooterCharacter_AttachToLadder_Params
{
	class USceneComponent*                             Parent;                                                    // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.ApplyBoneModifiers
struct AShooterCharacter_ApplyBoneModifiers_Params
{
};

// Function ShooterGame.ShooterCharacter.ApplyBodyColors
struct AShooterCharacter_ApplyBodyColors_Params
{
	class USkeletalMeshComponent*                      toMesh;                                                    // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacter.AnimUseAimOffset
struct AShooterCharacter_AnimUseAimOffset_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalUI.SetInputMode
struct UPrimalUI_SetInputMode_Params
{
};

// Function ShooterGame.PrimalUI.RemovedFromViewport
struct UPrimalUI_RemovedFromViewport_Params
{
};

// Function ShooterGame.PrimalUI.OnMouseButtonDownEvent
struct UPrimalUI_OnMouseButtonDownEvent_Params
{
	struct FGeometry                                   MyGeometry;                                                // (Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                               MouseEvent;                                                // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FEventReply                                 ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.PrimalUI.OnKeyUpEvent
struct UPrimalUI_OnKeyUpEvent_Params
{
	struct FGeometry                                   MyGeometry;                                                // (Parm, IsPlainOldData, NoDestructor)
	struct FKeyboardEvent                              InKeyboardEvent;                                           // (Parm)
	struct FEventReply                                 ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.PrimalUI.OnKeyDownEvent
struct UPrimalUI_OnKeyDownEvent_Params
{
	struct FGeometry                                   MyGeometry;                                                // (Parm, IsPlainOldData, NoDestructor)
	struct FKeyboardEvent                              InKeyboardEvent;                                           // (Parm)
	struct FEventReply                                 ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.PrimalUI.OnHTTPGetResponse__DelegateSignature
struct UPrimalUI_OnHTTPGetResponse__DelegateSignature_Params
{
	bool                                               bSuccess;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     StringResult;                                              // (Parm, ZeroConstructor)
};

// Function ShooterGame.PrimalUI.OnConfirmationDialogClosed
struct UPrimalUI_OnConfirmationDialogClosed_Params
{
	bool                                               bAccept;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalUI.HTTPGetString
struct UPrimalUI_HTTPGetString_Params
{
	struct FString                                     InURL;                                                     // (Parm, ZeroConstructor)
};

// Function ShooterGame.PrimalUI.GetShooterHUD
struct UPrimalUI_GetShooterHUD_Params
{
	class AShooterHUD*                                 ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalUI.GetPlayerState
struct UPrimalUI_GetPlayerState_Params
{
	class AShooterPlayerState*                         ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalUI.GetPC
struct UPrimalUI_GetPC_Params
{
	class AShooterPlayerController*                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalUI.GetPawn
struct UPrimalUI_GetPawn_Params
{
	class APrimalCharacter*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalUI.CloseWithAnimation
struct UPrimalUI_CloseWithAnimation_Params
{
};

// Function ShooterGame.PrimalUI.ClickedSecondaryButton
struct UPrimalUI_ClickedSecondaryButton_Params
{
	class UWidget*                                     clickedWidget;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalUI.ClickedButton
struct UPrimalUI_ClickedButton_Params
{
	class UWidget*                                     clickedWidget;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalUI.BPProcessSplitscreenAndAddToViewport
struct UPrimalUI_BPProcessSplitscreenAndAddToViewport_Params
{
	bool                                               ScaleX;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalUI.AddedToViewport
struct UPrimalUI_AddedToViewport_Params
{
};

// Function ShooterGame.UI_Spawn.SlotButtonSelected
struct UUI_Spawn_SlotButtonSelected_Params
{
	class UWidget*                                     theWidget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_Spawn.SavedPresetListButtonSelected
struct UUI_Spawn_SavedPresetListButtonSelected_Params
{
	class UWidget*                                     theWidget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_Spawn.RespawnSlotButtonSelected
struct UUI_Spawn_RespawnSlotButtonSelected_Params
{
	class UWidget*                                     theWidget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_Spawn.OnSaveToFileEditableCommitted
struct UUI_Spawn_OnSaveToFileEditableCommitted_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<SlateCore_ETextCommit>                 CommitMethod;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_Spawn.OnBedFilterChanged
struct UUI_Spawn_OnBedFilterChanged_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.UI_Spawn.MultiSelectSpawnPointButtonSelected
struct UUI_Spawn_MultiSelectSpawnPointButtonSelected_Params
{
	class UWidget*                                     theWidget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.UpdateWeightStat
struct UPrimalCharacterStatusComponent_UpdateWeightStat_Params
{
	bool                                               bForceSetValue;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.UpdatedCurrentStatusValue
struct UPrimalCharacterStatusComponent_UpdatedCurrentStatusValue_Params
{
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> ValueType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              amount;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bManualModification;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      DamageTypeClass;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDamageDontKill;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDontAdjustOtherStats;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.TickStatus
struct UPrimalCharacterStatusComponent_TickStatus_Params
{
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceStatusUpdate;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.SetTamed
struct UPrimalCharacterStatusComponent_SetTamed_Params
{
	float                                              TameIneffectivenessModifier;                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSkipAddingTamedLevels;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.SetMaxStatusValue
struct UPrimalCharacterStatusComponent_SetMaxStatusValue_Params
{
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> statType;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              newValue;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.SetLevelUpPoints
struct UPrimalCharacterStatusComponent_SetLevelUpPoints_Params
{
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> ValueType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bTamedPoints;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                newPoints;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.SetExtraCharacterLevel
struct UPrimalCharacterStatusComponent_SetExtraCharacterLevel_Params
{
	int                                                NewExtraCharacterLevel;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.SetBaseLevelNoStatChange
struct UPrimalCharacterStatusComponent_SetBaseLevelNoStatChange_Params
{
	int                                                Level;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.SetBaseLevelCustomized
struct UPrimalCharacterStatusComponent_SetBaseLevelCustomized_Params
{
	int                                                Level;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FStatValuePair>                      CustomBaseStats;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue>> PrioritizeStats;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bDontCurrentSetToMax;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.SetBaseLevel
struct UPrimalCharacterStatusComponent_SetBaseLevel_Params
{
	int                                                Level;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDontCurrentSetToMax;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.SetAllStatsToMaximumExcluding
struct UPrimalCharacterStatusComponent_SetAllStatsToMaximumExcluding_Params
{
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> exclude;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.SetAllStatsToMaximum
struct UPrimalCharacterStatusComponent_SetAllStatsToMaximum_Params
{
};

// Function ShooterGame.PrimalCharacterStatusComponent.ServerSyncReplicatedValues
struct UPrimalCharacterStatusComponent_ServerSyncReplicatedValues_Params
{
};

// Function ShooterGame.PrimalCharacterStatusComponent.RescaleMaxStat
struct UPrimalCharacterStatusComponent_RescaleMaxStat_Params
{
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> LevelUpValueType;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              TargetValue;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsPercentOfTrueValue;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.RescaleAllStats
struct UPrimalCharacterStatusComponent_RescaleAllStats_Params
{
};

// Function ShooterGame.PrimalCharacterStatusComponent.OnRep_ReplicatedExperiencePoints
struct UPrimalCharacterStatusComponent_OnRep_ReplicatedExperiencePoints_Params
{
};

// Function ShooterGame.PrimalCharacterStatusComponent.OnRep_GlobalMaxStatusValues
struct UPrimalCharacterStatusComponent_OnRep_GlobalMaxStatusValues_Params
{
};

// Function ShooterGame.PrimalCharacterStatusComponent.OnRep_GlobalCurrentStatusValues
struct UPrimalCharacterStatusComponent_OnRep_GlobalCurrentStatusValues_Params
{
};

// Function ShooterGame.PrimalCharacterStatusComponent.OnRep_GlobalBaseLevelMaxStatusValues
struct UPrimalCharacterStatusComponent_OnRep_GlobalBaseLevelMaxStatusValues_Params
{
};

// Function ShooterGame.PrimalCharacterStatusComponent.OnRep_CurrentStatusValues
struct UPrimalCharacterStatusComponent_OnRep_CurrentStatusValues_Params
{
};

// Function ShooterGame.PrimalCharacterStatusComponent.NetSyncMaxStatusValues
struct UPrimalCharacterStatusComponent_NetSyncMaxStatusValues_Params
{
	TArray<float>                                      NetMaxStatusValues;                                        // (ConstParm, Parm, ZeroConstructor)
	TArray<float>                                      NetBaseMaxStatusValues;                                    // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.ModifyCurrentStatusValue
struct UPrimalCharacterStatusComponent_ModifyCurrentStatusValue_Params
{
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> ValueType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              amount;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bPercentOfMax;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bPercentOfCurrent;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bManualModification;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSetValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      DamageTypeClass;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDamageDontKill;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceSetValue;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.IsInStatusState
struct UPrimalCharacterStatusComponent_IsInStatusState_Params
{
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusState> StateType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.IsAtMaxLevel
struct UPrimalCharacterStatusComponent_IsAtMaxLevel_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.HasExperienceForLevelUp
struct UPrimalCharacterStatusComponent_HasExperienceForLevelUp_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.GetStatusValueString
struct UPrimalCharacterStatusComponent_GetStatusValueString_Params
{
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> ValueType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bValueOnly;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalCharacterStatusComponent.GetStatusValueRecoveryRate
struct UPrimalCharacterStatusComponent_GetStatusValueRecoveryRate_Params
{
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> ValueType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.GetStatusNameString
struct UPrimalCharacterStatusComponent_GetStatusNameString_Params
{
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> ValueType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalCharacterStatusComponent.GetStatusMaxValueString
struct UPrimalCharacterStatusComponent_GetStatusMaxValueString_Params
{
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> ValueType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bValueOnly;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalCharacterStatusComponent.GetRawStatusValueRecoveryRate
struct UPrimalCharacterStatusComponent_GetRawStatusValueRecoveryRate_Params
{
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> ValueType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.GetMovementSpeedModifier
struct UPrimalCharacterStatusComponent_GetMovementSpeedModifier_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.GetMeleeDamageModifier
struct UPrimalCharacterStatusComponent_GetMeleeDamageModifier_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.GetLevelUpPoints
struct UPrimalCharacterStatusComponent_GetLevelUpPoints_Params
{
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> ValueType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bTamedPoints;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.GetExtraCharacterLevel
struct UPrimalCharacterStatusComponent_GetExtraCharacterLevel_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.GetExperienceRequiredForPreviousLevelUp
struct UPrimalCharacterStatusComponent_GetExperienceRequiredForPreviousLevelUp_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.GetExperienceRequiredForNextLevelUp
struct UPrimalCharacterStatusComponent_GetExperienceRequiredForNextLevelUp_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.GetDinoFoodConsumptionRateMultiplier
struct UPrimalCharacterStatusComponent_GetDinoFoodConsumptionRateMultiplier_Params
{
	float                                              amount;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.GetDebugString
struct UPrimalCharacterStatusComponent_GetDebugString_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalCharacterStatusComponent.GetCraftingSpeedModifier
struct UPrimalCharacterStatusComponent_GetCraftingSpeedModifier_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.GetCharacterLevel
struct UPrimalCharacterStatusComponent_GetCharacterLevel_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.GetBaseLevelFromLevelUpPoints
struct UPrimalCharacterStatusComponent_GetBaseLevelFromLevelUpPoints_Params
{
	bool                                               bIncludePlayerAddedLevels;                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.CopyPrimalStatusComponentValues
struct UPrimalCharacterStatusComponent_CopyPrimalStatusComponentValues_Params
{
	class UPrimalCharacterStatusComponent*             src;                                                       // (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.ConvertIntToCharacterStatusEnum
struct UPrimalCharacterStatusComponent_ConvertIntToCharacterStatusEnum_Params
{
	int                                                InInteger;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.ClientSyncMaxStatusValues
struct UPrimalCharacterStatusComponent_ClientSyncMaxStatusValues_Params
{
	TArray<float>                                      NetMaxStatusValues;                                        // (ConstParm, Parm, ZeroConstructor)
	TArray<float>                                      NetBaseMaxStatusValues;                                    // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.ClearAllLevelUpPoints
struct UPrimalCharacterStatusComponent_ClearAllLevelUpPoints_Params
{
	bool                                               bTamedPoints;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.CanLevelUp
struct UPrimalCharacterStatusComponent_CanLevelUp_Params
{
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> LevelUpValueType;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bCheckExperience;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.CanGainLevel
struct UPrimalCharacterStatusComponent_CanGainLevel_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.BPSetRecoveryRateStatusValue
struct UPrimalCharacterStatusComponent_BPSetRecoveryRateStatusValue_Params
{
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> ValueType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              newValue;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.BPModifyMaxLevel
struct UPrimalCharacterStatusComponent_BPModifyMaxLevel_Params
{
	int                                                InMaxLevel;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.BPModifyMaxExperiencePoints
struct UPrimalCharacterStatusComponent_BPModifyMaxExperiencePoints_Params
{
	float                                              InMaxExperiencePoints;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.BPGetPercentStatusValue
struct UPrimalCharacterStatusComponent_BPGetPercentStatusValue_Params
{
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> ValueType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.BPGetMaxStatusValue
struct UPrimalCharacterStatusComponent_BPGetMaxStatusValue_Params
{
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> ValueType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.BPGetCurrentStatusValue
struct UPrimalCharacterStatusComponent_BPGetCurrentStatusValue_Params
{
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> ValueType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.BPDirectSetMaxStatusValue
struct UPrimalCharacterStatusComponent_BPDirectSetMaxStatusValue_Params
{
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> ValueType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              newValue;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.BPDirectSetCurrentStatusValue
struct UPrimalCharacterStatusComponent_BPDirectSetCurrentStatusValue_Params
{
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> ValueType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              newValue;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.BPAdjustStatusValueModification
struct UPrimalCharacterStatusComponent_BPAdjustStatusValueModification_Params
{
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> ValueType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              amount;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      DamageTypeClass;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bManualModification;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.AddStatusValueModifier
struct UPrimalCharacterStatusComponent_AddStatusValueModifier_Params
{
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> ValueType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              amount;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Speed;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bContinueOnUnchangedValue;                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSetValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                StatusValueModifierDescriptionIndex;                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bResetExistingModifierDescriptionIndex;                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              LimitExistingModifierDescriptionToMaxAmount;               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSetAdditionalValue;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> StopAtValueNearMax;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bMakeUntameable;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      ScaleValueByCharacterDamageType;                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalCharacterStatusComponent.AddExperience
struct UPrimalCharacterStatusComponent_AddExperience_Params
{
	float                                              HowMuch;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bShareWithTribe;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_EXPType>                   XPType;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBotAIController.UpdateDinoClaim
struct APrimalBotAIController_UpdateDinoClaim_Params
{
};

// Function ShooterGame.PrimalBotAIController.TimeSinceGivenAttackPriority
struct APrimalBotAIController_TimeSinceGivenAttackPriority_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBotAIController.SetAttackCoordinator
struct APrimalBotAIController_SetAttackCoordinator_Params
{
	class AAIAttackCoordinator*                        Coordinator;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBotAIController.ReleaseClaimOnDino
struct APrimalBotAIController_ReleaseClaimOnDino_Params
{
};

// Function ShooterGame.PrimalBotAIController.IsTooFarToAttack
struct APrimalBotAIController_IsTooFarToAttack_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBotAIController.IsTooCloseToAttack
struct APrimalBotAIController_IsTooCloseToAttack_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBotAIController.InitializeBlackboardValues
struct APrimalBotAIController_InitializeBlackboardValues_Params
{
	class APrimalBotCharacter*                         Bot;                                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBotAIController.ClaimDino
struct APrimalBotAIController_ClaimDino_Params
{
	class APrimalDinoCharacter*                        Dino;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.UpdateTethersByState
struct APrimalBuff_Grappled_UpdateTethersByState_Params
{
	float                                              DeltaTime;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.UpdateTetherMasterRef
struct APrimalBuff_Grappled_UpdateTetherMasterRef_Params
{
	struct FGrappleTether                              ForTether;                                                 // (Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                               bInit;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.UpdateOwnerSwingingVelocity
struct APrimalBuff_Grappled_UpdateOwnerSwingingVelocity_Params
{
};

// Function ShooterGame.PrimalBuff_Grappled.UpdateOwnerMovementSpeed
struct APrimalBuff_Grappled_UpdateOwnerMovementSpeed_Params
{
	struct FVector                                     WithCharVelocity;                                          // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.UpdateGrappleTetherVars
struct APrimalBuff_Grappled_UpdateGrappleTetherVars_Params
{
	struct FGrappleTether                              ForTether;                                                 // (Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};

// Function ShooterGame.PrimalBuff_Grappled.UpdateBrokenTethers
struct APrimalBuff_Grappled_UpdateBrokenTethers_Params
{
};

// Function ShooterGame.PrimalBuff_Grappled.UpdateAgainstSurfaceFromHits
struct APrimalBuff_Grappled_UpdateAgainstSurfaceFromHits_Params
{
	TArray<struct FHitResult>                          Hits;                                                      // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.PrimalBuff_Grappled.Tick_UpdateGrappleTethers
struct APrimalBuff_Grappled_Tick_UpdateGrappleTethers_Params
{
	float                                              DeltaTime;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.Tick_UpdateAgainstSurface
struct APrimalBuff_Grappled_Tick_UpdateAgainstSurface_Params
{
	float                                              DeltaTime;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.TetherHasValidMasterRef
struct APrimalBuff_Grappled_TetherHasValidMasterRef_Params
{
	struct FGrappleTether                              ForTether;                                                 // (Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.SyncOwnerInputs
struct APrimalBuff_Grappled_SyncOwnerInputs_Params
{
	struct FVector2D                                   NewInputs;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.SyncGrappleTetherLengths
struct APrimalBuff_Grappled_SyncGrappleTetherLengths_Params
{
};

// Function ShooterGame.PrimalBuff_Grappled.SimulateTetherFriction
struct APrimalBuff_Grappled_SimulateTetherFriction_Params
{
	struct FVector                                     WithCharVelocity;                                          // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.SimulateTautTetherForces
struct APrimalBuff_Grappled_SimulateTautTetherForces_Params
{
	struct FVector                                     WithCharVelocity;                                          // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              LastGravityZ;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.ShouldUseDynamicTetherTension
struct APrimalBuff_Grappled_ShouldUseDynamicTetherTension_Params
{
	struct FGrappleTether                              ForTether;                                                 // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.ShouldTetherBreak
struct APrimalBuff_Grappled_ShouldTetherBreak_Params
{
	struct FGrappleTether                              ForTether;                                                 // (Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class APrimalCharacter*                            forChar;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OverrideBreakPastDist;                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.ShouldReturnToIdleGrappleState
struct APrimalBuff_Grappled_ShouldReturnToIdleGrappleState_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.ShouldReplicateOwnerInputs
struct APrimalBuff_Grappled_ShouldReplicateOwnerInputs_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.ShouldOwnerBeAffectedByTether
struct APrimalBuff_Grappled_ShouldOwnerBeAffectedByTether_Params
{
	struct FGrappleTether                              ForTether;                                                 // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TEnumAsByte<ShooterGame_EGrappleState>             ForGrappeState;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.ShouldForceOwnerIntoFallingState
struct APrimalBuff_Grappled_ShouldForceOwnerIntoFallingState_Params
{
	struct FGrappleTether                              ForTether;                                                 // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FVector                                     WithOwnerVelocity;                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_EMovementMode>                  CheckMovementModeOverride;                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.SetupDelegateBindingsForChar
struct APrimalBuff_Grappled_SetupDelegateBindingsForChar_Params
{
	class APrimalCharacter*                            forChar;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDoBind;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.SetGrappleTetherLength
struct APrimalBuff_Grappled_SetGrappleTetherLength_Params
{
	struct FGrappleTether                              ForTether;                                                 // (Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	float                                              SetNewLength;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ForTetherIndex;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.SetGrappleTetherAtIndexLength
struct APrimalBuff_Grappled_SetGrappleTetherAtIndexLength_Params
{
	int                                                AtIndex;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              SetNewLength;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.SetGrappleState
struct APrimalBuff_Grappled_SetGrappleState_Params
{
	TEnumAsByte<ShooterGame_EGrappleState>             NewGrappleState;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceUpdate;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.Server_SyncOwnerInputs
struct APrimalBuff_Grappled_Server_SyncOwnerInputs_Params
{
	struct FVector2D                                   NewInputs;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.Server_SuggestTetherLengths
struct APrimalBuff_Grappled_Server_SuggestTetherLengths_Params
{
	TArray<float>                                      NewTetherLengths;                                          // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.PrimalBuff_Grappled.Server_SuggestTetherLength
struct APrimalBuff_Grappled_Server_SuggestTetherLength_Params
{
	float                                              NewTetherLength;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.Server_SetGrappleState
struct APrimalBuff_Grappled_Server_SetGrappleState_Params
{
	unsigned char                                      NewGrappleState;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceUpdate;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.ResetOwnerVars
struct APrimalBuff_Grappled_ResetOwnerVars_Params
{
};

// Function ShooterGame.PrimalBuff_Grappled.ResetOwnerClientPositionErrorTolerance
struct APrimalBuff_Grappled_ResetOwnerClientPositionErrorTolerance_Params
{
};

// Function ShooterGame.PrimalBuff_Grappled.RemoveGrappleTether
struct APrimalBuff_Grappled_RemoveGrappleTether_Params
{
	int                                                AtIndex;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     WithTag;                                                   // (ConstParm, Parm, ZeroConstructor)
	class APrimalBuff_Grappled*                        WithMasterBuff;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceNetSync;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bRemoveAllTethersWithTag;                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.RefreshAllTetherMasterRefs
struct APrimalBuff_Grappled_RefreshAllTetherMasterRefs_Params
{
};

// Function ShooterGame.PrimalBuff_Grappled.ReceiveTetherLengthSuggestion
struct APrimalBuff_Grappled_ReceiveTetherLengthSuggestion_Params
{
	int                                                ForTetherIndex;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              NewTetherLength;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.ReceiveTetherLengthsSuggestion
struct APrimalBuff_Grappled_ReceiveTetherLengthsSuggestion_Params
{
	TArray<float>                                      NewTetherLengths;                                          // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function ShooterGame.PrimalBuff_Grappled.OnRep_ReplicatedGrappleTethers
struct APrimalBuff_Grappled_OnRep_ReplicatedGrappleTethers_Params
{
};

// Function ShooterGame.PrimalBuff_Grappled.OnRep_GrappleState
struct APrimalBuff_Grappled_OnRep_GrappleState_Params
{
};

// Function ShooterGame.PrimalBuff_Grappled.OnReleasedPrimalChar
struct APrimalBuff_Grappled_OnReleasedPrimalChar_Params
{
	class APrimalCharacter*                            ReleasedChar;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.OnOwnerSleepStateChanged
struct APrimalBuff_Grappled_OnOwnerSleepStateChanged_Params
{
	class APrimalCharacter*                            forChar;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsSleeping;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.OnOwnerDeath
struct APrimalBuff_Grappled_OnOwnerDeath_Params
{
	class APrimalCharacter*                            DyingChar;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.OnOwnerCapsuleHit
struct APrimalBuff_Grappled_OnOwnerCapsuleHit_Params
{
	class AActor*                                      OtherActor;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                         OtherComp;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FVector                                     NormalImpulse;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                                  Hit;                                                       // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.PrimalBuff_Grappled.OnGrappleTethersChanged
struct APrimalBuff_Grappled_OnGrappleTethersChanged_Params
{
};

// Function ShooterGame.PrimalBuff_Grappled.OnGrappleTetherRemoved
struct APrimalBuff_Grappled_OnGrappleTetherRemoved_Params
{
	struct FGrappleTether                              RemovedTether;                                             // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};

// Function ShooterGame.PrimalBuff_Grappled.OnGrappleTetherBroken
struct APrimalBuff_Grappled_OnGrappleTetherBroken_Params
{
	int                                                BrokenIndex;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.OnGrappleTetherAdded
struct APrimalBuff_Grappled_OnGrappleTetherAdded_Params
{
	struct FGrappleTether                              AddedTether;                                               // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};

// Function ShooterGame.PrimalBuff_Grappled.OnGrappleStateChangedNotify
struct APrimalBuff_Grappled_OnGrappleStateChangedNotify_Params
{
	unsigned char                                      NewGrappleState;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               bIsEarlyNotify;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.OnGrappleStateChanged
struct APrimalBuff_Grappled_OnGrappleStateChanged_Params
{
};

// Function ShooterGame.PrimalBuff_Grappled.OnGrappledPrimalChar
struct APrimalBuff_Grappled_OnGrappledPrimalChar_Params
{
	class APrimalCharacter*                            GrappledChar;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGrappleTether                              WithMasterTether;                                          // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};

// Function ShooterGame.PrimalBuff_Grappled.OnGrappledCharSleepStateChange
struct APrimalBuff_Grappled_OnGrappledCharSleepStateChange_Params
{
	class APrimalCharacter*                            forChar;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsSleeping;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.OnGrappledCharDeath
struct APrimalBuff_Grappled_OnGrappledCharDeath_Params
{
	class APrimalCharacter*                            DyingChar;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.OnAgainstValidSurfaceUpdated
struct APrimalBuff_Grappled_OnAgainstValidSurfaceUpdated_Params
{
};

// Function ShooterGame.PrimalBuff_Grappled.OnAgainstValidSurfaceStateChanged
struct APrimalBuff_Grappled_OnAgainstValidSurfaceStateChanged_Params
{
};

// Function ShooterGame.PrimalBuff_Grappled.NetSyncGrappleTethers
struct APrimalBuff_Grappled_NetSyncGrappleTethers_Params
{
};

// Function ShooterGame.PrimalBuff_Grappled.Multi_SyncGrappleTetherLengths
struct APrimalBuff_Grappled_Multi_SyncGrappleTetherLengths_Params
{
	TArray<float>                                      SyncedTetherLengths;                                       // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.PrimalBuff_Grappled.Multi_SyncGrappleTetherLength
struct APrimalBuff_Grappled_Multi_SyncGrappleTetherLength_Params
{
	float                                              SyncedTetherLength;                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.ModifyTetherTensionLerpValue
struct APrimalBuff_Grappled_ModifyTetherTensionLerpValue_Params
{
	float                                              CurrentLerpValue;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.ModifyTetherMoveVelocity
struct APrimalBuff_Grappled_ModifyTetherMoveVelocity_Params
{
	struct FVector                                     CurrentMoveVelocity;                                       // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FGrappleTether                              ForTether;                                                 // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};

// Function ShooterGame.PrimalBuff_Grappled.ModifyOverriddenCharVelocity
struct APrimalBuff_Grappled_ModifyOverriddenCharVelocity_Params
{
	struct FVector                                     CurrentCharVelocity;                                       // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              DeltaTime;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.ModifyGrappledCharVelocity
struct APrimalBuff_Grappled_ModifyGrappledCharVelocity_Params
{
	struct FVector                                     CurrentCharVelocity;                                       // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FGrappleTether                              ForTether;                                                 // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	float                                              DeltaTime;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.MakeGrappleTether
struct APrimalBuff_Grappled_MakeGrappleTether_Params
{
	struct FCreateGrappleTetherData                    FromData;                                                  // (Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class APrimalBuff_Grappled*                        ForMasterBuff;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGrappleTether                              ReturnValue;                                               // (Parm, OutParm, ReturnParm, ContainsInstancedReference)
};

// Function ShooterGame.PrimalBuff_Grappled.IsValidSurfaceHit
struct APrimalBuff_Grappled_IsValidSurfaceHit_Params
{
	struct FHitResult                                  ForHit;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.IsValidGrappleHit
struct APrimalBuff_Grappled_IsValidGrappleHit_Params
{
	struct FHitResult                                  ForHit;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.IsTethersMasterGrappleBuff
struct APrimalBuff_Grappled_IsTethersMasterGrappleBuff_Params
{
	struct FGrappleTether                              CheckTether;                                               // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.IsTetherAtMaxLength
struct APrimalBuff_Grappled_IsTetherAtMaxLength_Params
{
	struct FGrappleTether                              ForTether;                                                 // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.IsSwingingTowardsAxisCenter
struct APrimalBuff_Grappled_IsSwingingTowardsAxisCenter_Params
{
	struct FGrappleTether                              ForTether;                                                 // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.IsOwnerLookingAtAgainstSurface
struct APrimalBuff_Grappled_IsOwnerLookingAtAgainstSurface_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.IsOwnerAgainstValidSurface
struct APrimalBuff_Grappled_IsOwnerAgainstValidSurface_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.IsOwnerAboveGround
struct APrimalBuff_Grappled_IsOwnerAboveGround_Params
{
	struct FVector                                     FoundGroundLocation;                                       // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              CheckDistance;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.IsHitWithinGrappleRange
struct APrimalBuff_Grappled_IsHitWithinGrappleRange_Params
{
	struct FHitResult                                  ForHit;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.IsGrappleTetherValid
struct APrimalBuff_Grappled_IsGrappleTetherValid_Params
{
	struct FGrappleTether                              CheckTether;                                               // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.IsGrappledCharHardAttached
struct APrimalBuff_Grappled_IsGrappledCharHardAttached_Params
{
	class APrimalCharacter*                            forChar;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.IsCharPastMaxTetherLength
struct APrimalBuff_Grappled_IsCharPastMaxTetherLength_Params
{
	struct FGrappleTether                              ForTether;                                                 // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class APrimalCharacter*                            forChar;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.InitializeGrappleTether
struct APrimalBuff_Grappled_InitializeGrappleTether_Params
{
	struct FGrappleTether                              InitTether;                                                // (Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class APrimalBuff_Grappled*                        ByGrappleBuff;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.InitGrappleBuff
struct APrimalBuff_Grappled_InitGrappleBuff_Params
{
};

// Function ShooterGame.PrimalBuff_Grappled.GrappleTick
struct APrimalBuff_Grappled_GrappleTick_Params
{
	float                                              DeltaTime;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.GetTetherMasterRef
struct APrimalBuff_Grappled_GetTetherMasterRef_Params
{
	struct FGrappleTether                              ForTether;                                                 // (Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FGrappleTether                              MasterRef;                                                 // (Parm, OutParm, ContainsInstancedReference)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.GetTetherBreakLimit_OwnerPastCurrentLengthForTime
struct APrimalBuff_Grappled_GetTetherBreakLimit_OwnerPastCurrentLengthForTime_Params
{
	struct FGrappleTether                              ForTether;                                                 // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.GetTetherBreakLimit_OwnerPastCurrentLengthDelta
struct APrimalBuff_Grappled_GetTetherBreakLimit_OwnerPastCurrentLengthDelta_Params
{
	struct FGrappleTether                              ForTether;                                                 // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.GetTetherBreakLimit_GrappledActorAboveVelocity
struct APrimalBuff_Grappled_GetTetherBreakLimit_GrappledActorAboveVelocity_Params
{
	struct FGrappleTether                              ForTether;                                                 // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.GetRequiredTetherLengthForChar
struct APrimalBuff_Grappled_GetRequiredTetherLengthForChar_Params
{
	struct FGrappleTether                              ForTether;                                                 // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class APrimalCharacter*                            forChar;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.GetReplicatedOwnerInputs
struct APrimalBuff_Grappled_GetReplicatedOwnerInputs_Params
{
	struct FVector2D                                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.GetOwnerAppendedTetherTag
struct APrimalBuff_Grappled_GetOwnerAppendedTetherTag_Params
{
	struct FString                                     WithRootTag;                                               // (ConstParm, Parm, ZeroConstructor)
	class APrimalBuff_Grappled*                        OwnerGrappleBuff;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalBuff_Grappled.GetNumValidTethers
struct APrimalBuff_Grappled_GetNumValidTethers_Params
{
	bool                                               bOnlyReservedTethers;                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.GetNumReservedTethers
struct APrimalBuff_Grappled_GetNumReservedTethers_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.GetMinTetherLength
struct APrimalBuff_Grappled_GetMinTetherLength_Params
{
	struct FGrappleTether                              ForTether;                                                 // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.GetMaxTetherLength
struct APrimalBuff_Grappled_GetMaxTetherLength_Params
{
	struct FGrappleTether                              ForTether;                                                 // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.GetInitGrappleAnchorRelativeOffset
struct APrimalBuff_Grappled_GetInitGrappleAnchorRelativeOffset_Params
{
	struct FGrappleAnchor                              ForAnchorData;                                             // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class AActor*                                      WithAnchorOwner;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.GetGrappleVelocityDampingRate
struct APrimalBuff_Grappled_GetGrappleVelocityDampingRate_Params
{
	class APrimalCharacter*                            forChar;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGrappleTether                              ForTether;                                                 // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.GetGrappleTetherRootTag
struct APrimalBuff_Grappled_GetGrappleTetherRootTag_Params
{
	struct FString                                     ForTag;                                                    // (ConstParm, Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalBuff_Grappled.GetGrappleTetherReleaseMaxVelocity
struct APrimalBuff_Grappled_GetGrappleTetherReleaseMaxVelocity_Params
{
	class APrimalCharacter*                            ForReleasingChar;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGrappleTether                              ForTether;                                                 // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.GetGrappleTetherPullMaxVelocity
struct APrimalBuff_Grappled_GetGrappleTetherPullMaxVelocity_Params
{
	class APrimalCharacter*                            ForPullingChar;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGrappleTether                              ForTether;                                                 // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.GetGrappleTetherPullAcceleration
struct APrimalBuff_Grappled_GetGrappleTetherPullAcceleration_Params
{
	class APrimalCharacter*                            ForPullingChar;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGrappleTether                              ForTether;                                                 // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.GetGrappleAnchorWorldLocation
struct APrimalBuff_Grappled_GetGrappleAnchorWorldLocation_Params
{
	struct FGrappleAnchor                              ForAnchorData;                                             // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class AActor*                                      WithAnchorOwner;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.GetCurrentTetherMoveDir
struct APrimalBuff_Grappled_GetCurrentTetherMoveDir_Params
{
	struct FGrappleTether                              ForTether;                                                 // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.GetCurrentSwingingAxisValues
struct APrimalBuff_Grappled_GetCurrentSwingingAxisValues_Params
{
	struct FVector2D                                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.GetCurrentGrappleState
struct APrimalBuff_Grappled_GetCurrentGrappleState_Params
{
	struct FGrappleTether                              ForTether;                                                 // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TEnumAsByte<ShooterGame_EGrappleState>             ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.GetCharDistanceFromTetherEndRatio
struct APrimalBuff_Grappled_GetCharDistanceFromTetherEndRatio_Params
{
	struct FGrappleTether                              ForTether;                                                 // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class APrimalCharacter*                            forChar;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.GetCharAngleToGrappleTetherEnd
struct APrimalBuff_Grappled_GetCharAngleToGrappleTetherEnd_Params
{
	struct FGrappleTether                              ForTether;                                                 // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class APrimalCharacter*                            forChar;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.GetAverageTetherEndLocation
struct APrimalBuff_Grappled_GetAverageTetherEndLocation_Params
{
	bool                                               bReservedTethersOnly;                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.GetAllCurrentGrapplers
struct APrimalBuff_Grappled_GetAllCurrentGrapplers_Params
{
	TArray<class APrimalCharacter*>                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalBuff_Grappled.GetActorAttachParentChar
struct APrimalBuff_Grappled_GetActorAttachParentChar_Params
{
	class AActor*                                      forActor;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalCharacter*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.EndGrapple
struct APrimalBuff_Grappled_EndGrapple_Params
{
};

// Function ShooterGame.PrimalBuff_Grappled.DisplayGrappleSystemHudNotification
struct APrimalBuff_Grappled_DisplayGrappleSystemHudNotification_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      FromActor;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	unsigned char                                      NotificationType;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                NotificationID;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReasonString;                                              // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.CustomGrappleTick
struct APrimalBuff_Grappled_CustomGrappleTick_Params
{
	float                                              DeltaTime;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.ClampOwnerReleasingVelocity
struct APrimalBuff_Grappled_ClampOwnerReleasingVelocity_Params
{
	struct FVector                                     WithReleasingVelocity;                                     // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.ClampGrappleVelocity
struct APrimalBuff_Grappled_ClampGrappleVelocity_Params
{
	struct FVector                                     ClampVelocity;                                             // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.CheckForTetherBreak
struct APrimalBuff_Grappled_CheckForTetherBreak_Params
{
	struct FGrappleTether                              CheckTether;                                               // (Parm, OutParm, ContainsInstancedReference)
	int                                                WithIndex;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OverrideBreakPastDist;                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.CheckForAutoBreakTether
struct APrimalBuff_Grappled_CheckForAutoBreakTether_Params
{
	struct FGrappleTether                              CheckTether;                                               // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.CanUpdateTetherLength
struct APrimalBuff_Grappled_CanUpdateTetherLength_Params
{
	struct FGrappleTether                              ForTether;                                                 // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	float                                              WithLength;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.CanTetherOwnerPullGrappledChar
struct APrimalBuff_Grappled_CanTetherOwnerPullGrappledChar_Params
{
	struct FGrappleTether                              ForTether;                                                 // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.CanSyncGrappleTetherLengths
struct APrimalBuff_Grappled_CanSyncGrappleTetherLengths_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.CanReceiveNewGrappleTether
struct APrimalBuff_Grappled_CanReceiveNewGrappleTether_Params
{
	struct FString                                     WithTag;                                                   // (ConstParm, Parm, ZeroConstructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.CanPullChar
struct APrimalBuff_Grappled_CanPullChar_Params
{
	class APrimalCharacter*                            PullChar;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForStart;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.CanOwnerGrappleSwing
struct APrimalBuff_Grappled_CanOwnerGrappleSwing_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.CanManipulateOwnerVelocity
struct APrimalBuff_Grappled_CanManipulateOwnerVelocity_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.CanGrappleTetherAffectOwnerMovement
struct APrimalBuff_Grappled_CanGrappleTetherAffectOwnerMovement_Params
{
	struct FGrappleTether                              ForTether;                                                 // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.CanCharControlGrappleTether
struct APrimalBuff_Grappled_CanCharControlGrappleTether_Params
{
	class APrimalCharacter*                            forChar;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGrappleTether                              ForTether;                                                 // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                               bAllowSlaveGrappleToControl;                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.CanChangeGrappleState
struct APrimalBuff_Grappled_CanChangeGrappleState_Params
{
	unsigned char                                      DesiredGrappleState;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.CanBeGrappledAgainstSurface
struct APrimalBuff_Grappled_CanBeGrappledAgainstSurface_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.BreakGrappleTether
struct APrimalBuff_Grappled_BreakGrappleTether_Params
{
	int                                                AtIndex;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     WithTag;                                                   // (ConstParm, Parm, ZeroConstructor)
	class APrimalBuff_Grappled*                        WithMasterBuff;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bBreakAllTethersWithTag;                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.BreakChildTetherOnGrappledChar
struct APrimalBuff_Grappled_BreakChildTetherOnGrappledChar_Params
{
	struct FGrappleTether                              WithTether;                                                // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.BreakAllTethers
struct APrimalBuff_Grappled_BreakAllTethers_Params
{
};

// Function ShooterGame.PrimalBuff_Grappled.BP_InterceptGrappleLogic
struct APrimalBuff_Grappled_BP_InterceptGrappleLogic_Params
{
	struct FVector                                     CharVelocity;                                              // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.AreGrappleTetherTagsEqual
struct APrimalBuff_Grappled_AreGrappleTetherTagsEqual_Params
{
	struct FString                                     TagA;                                                      // (ConstParm, Parm, ZeroConstructor)
	struct FString                                     TagB;                                                      // (ConstParm, Parm, ZeroConstructor)
	bool                                               bOnlyCompareRootTag;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.ApplyTetherMoveVelocity
struct APrimalBuff_Grappled_ApplyTetherMoveVelocity_Params
{
	struct FVector                                     CurrentVelocity;                                           // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.ApplyOwnerSwingingVelocity
struct APrimalBuff_Grappled_ApplyOwnerSwingingVelocity_Params
{
	struct FVector                                     CurrentVelocity;                                           // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.AllowGrappleLogic
struct APrimalBuff_Grappled_AllowGrappleLogic_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.AdjustMovementVectorIfAgainstSurface
struct APrimalBuff_Grappled_AdjustMovementVectorIfAgainstSurface_Params
{
	struct FVector                                     AdjustVector;                                              // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_Grappled.AddGrappleTether
struct APrimalBuff_Grappled_AddGrappleTether_Params
{
	struct FCreateGrappleTetherData                    FromData;                                                  // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                               bPreventNetSync;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                AddAtIndex;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.UnloadLevelsForMissionTag
struct APrimalBuff_MissionData_UnloadLevelsForMissionTag_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.SetMissionData_Vector
struct APrimalBuff_MissionData_SetMissionData_Vector_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       Key;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Value;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.SetMissionData_Struct
struct APrimalBuff_MissionData_SetMissionData_Struct_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       Key;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UProperty*                                   Value;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.SetMissionData_String
struct APrimalBuff_MissionData_SetMissionData_String_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       Key;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     Value;                                                     // (Parm, ZeroConstructor)
};

// Function ShooterGame.PrimalBuff_MissionData.SetMissionData_Rotator
struct APrimalBuff_MissionData_SetMissionData_Rotator_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       Key;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    Value;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.SetMissionData_Int
struct APrimalBuff_MissionData_SetMissionData_Int_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       Key;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                Value;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.SetMissionData_Float
struct APrimalBuff_MissionData_SetMissionData_Float_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       Key;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Value;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.SetMissionData_Double
struct APrimalBuff_MissionData_SetMissionData_Double_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       Key;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                             Value;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.SetMissionData_Bool
struct APrimalBuff_MissionData_SetMissionData_Bool_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       Key;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               Value;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.ServerRequestToggleWeapon
struct APrimalBuff_MissionData_ServerRequestToggleWeapon_Params
{
	class AMissionType*                                Mission;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.ServerRequestStartMissionWithMissionTag
struct APrimalBuff_MissionData_ServerRequestStartMissionWithMissionTag_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AMissionDispatcher*                          FromDispatcher;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.ServerRequestStartMission
struct APrimalBuff_MissionData_ServerRequestStartMission_Params
{
	class UClass*                                      MissionType;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AMissionDispatcher*                          FromDispatcher;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.ServerRequestMissionEligibilityCheck
struct APrimalBuff_MissionData_ServerRequestMissionEligibilityCheck_Params
{
	class AMissionDispatcher*                          dispatcherFilter;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.ServerRequestEquipMissionItem
struct APrimalBuff_MissionData_ServerRequestEquipMissionItem_Params
{
	class AMissionType*                                Mission;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ItemId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.ServerRequestCancelMission
struct APrimalBuff_MissionData_ServerRequestCancelMission_Params
{
};

// Function ShooterGame.PrimalBuff_MissionData.ServerMulticastRequiredProps
struct APrimalBuff_MissionData_ServerMulticastRequiredProps_Params
{
};

// Function ShooterGame.PrimalBuff_MissionData.ReplicatedMissionDataUpdated
struct APrimalBuff_MissionData_ReplicatedMissionDataUpdated_Params
{
};

// Function ShooterGame.PrimalBuff_MissionData.OnRep_MissionIndicatorParticles
struct APrimalBuff_MissionData_OnRep_MissionIndicatorParticles_Params
{
};

// Function ShooterGame.PrimalBuff_MissionData.OnRep_CurrentMissions
struct APrimalBuff_MissionData_OnRep_CurrentMissions_Params
{
};

// Function ShooterGame.PrimalBuff_MissionData.OnRep_ActiveMissionIndex
struct APrimalBuff_MissionData_OnRep_ActiveMissionIndex_Params
{
};

// Function ShooterGame.PrimalBuff_MissionData.OnMissionClientEvent__DelegateSignature
struct APrimalBuff_MissionData_OnMissionClientEvent__DelegateSignature_Params
{
	class APrimalBuff_MissionData*                     MissionDataBuff;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AMissionType*                                Mission;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.OnMissionClientDataUpdated__DelegateSignature
struct APrimalBuff_MissionData_OnMissionClientDataUpdated__DelegateSignature_Params
{
	class APrimalBuff_MissionData*                     MissionDataBuff;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.OnMissionClientBoolEvent__DelegateSignature
struct APrimalBuff_MissionData_OnMissionClientBoolEvent__DelegateSignature_Params
{
	class APrimalBuff_MissionData*                     MissionDataBuff;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AMissionType*                                Mission;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSuccess;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.OnActiveMissionPhaseStarted
struct APrimalBuff_MissionData_OnActiveMissionPhaseStarted_Params
{
	class AMissionType*                                Mission;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       OldPhase;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       NewPhase;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.OnActiveMissionPhaseEnded
struct APrimalBuff_MissionData_OnActiveMissionPhaseEnded_Params
{
	class AMissionType*                                Mission;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       OldPhase;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       NewPhase;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.MultiUpdateMissionData_Int
struct APrimalBuff_MissionData_MultiUpdateMissionData_Int_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       Key;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                Value;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.MultiUpdateMissionData_Bool
struct APrimalBuff_MissionData_MultiUpdateMissionData_Bool_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       Key;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               Value;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.MultiClearParticleIndicator
struct APrimalBuff_MissionData_MultiClearParticleIndicator_Params
{
	float                                              RemoveAfterDuration;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.LoadLevelsForMissionTag
struct APrimalBuff_MissionData_LoadLevelsForMissionTag_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.IsPlayerEligibleForMission_CheckFromClient
struct APrimalBuff_MissionData_IsPlayerEligibleForMission_CheckFromClient_Params
{
	class UClass*                                      MissionType;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bOutIsRecentData;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FClientMissionEligibility                   OutEligibilityData;                                        // (Parm, OutParm)
	float                                              MaxTimeConsideredRecent;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AMissionDispatcher*                          dispatcherFilter;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.IsMissionTypeActiveWithMissionTag
struct APrimalBuff_MissionData_IsMissionTypeActiveWithMissionTag_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.IsMissionTypeActive
struct APrimalBuff_MissionData_IsMissionTypeActive_Params
{
	class UClass*                                      MissionType;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bExactClassMatch;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.GetWorldIndicatorsForMission
struct APrimalBuff_MissionData_GetWorldIndicatorsForMission_Params
{
	class AMissionType*                                Mission;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FMissionWorldIndicator>              WorldIndicators;                                           // (Parm, OutParm, ZeroConstructor)
	bool                                               bCompanionOnly;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSortByPriority;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.GetMissionDebugData
struct APrimalBuff_MissionData_GetMissionDebugData_Params
{
	TArray<struct FSerializedMissionData>              OutMissionData;                                            // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.PrimalBuff_MissionData.GetMissionData_Vector
struct APrimalBuff_MissionData_GetMissionData_Vector_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       Key;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     OutValue;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.GetMissionData_Struct
struct APrimalBuff_MissionData_GetMissionData_Struct_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       Key;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UProperty*                                   DestStruct;                                                // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.GetMissionData_String
struct APrimalBuff_MissionData_GetMissionData_String_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       Key;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     OutValue;                                                  // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.GetMissionData_Rotator
struct APrimalBuff_MissionData_GetMissionData_Rotator_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       Key;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    OutValue;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.GetMissionData_Int
struct APrimalBuff_MissionData_GetMissionData_Int_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       Key;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                OutValue;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.GetMissionData_Float
struct APrimalBuff_MissionData_GetMissionData_Float_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       Key;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OutValue;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.GetMissionData_Double
struct APrimalBuff_MissionData_GetMissionData_Double_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       Key;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                             OutValue;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.GetMissionData_Bool
struct APrimalBuff_MissionData_GetMissionData_Bool_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       Key;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               OutValue;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.GetBiomeMissionTag
struct APrimalBuff_MissionData_GetBiomeMissionTag_Params
{
	struct FVector                                     Location;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FName                                       ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.GetAllCurrentMissions
struct APrimalBuff_MissionData_GetAllCurrentMissions_Params
{
	TArray<class AMissionType*>                        OutMissions;                                               // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.PrimalBuff_MissionData.GetActiveMission
struct APrimalBuff_MissionData_GetActiveMission_Params
{
	class AMissionType*                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.ClientUnloadMissionLevels
struct APrimalBuff_MissionData_ClientUnloadMissionLevels_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.ClientSpawnEmitter
struct APrimalBuff_MissionData_ClientSpawnEmitter_Params
{
	class UClass*                                      EmitterType;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct UObject_FTransform                          EmitterTransform;                                          // (Parm, IsPlainOldData, NoDestructor)
	float                                              EmitterLifespan;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.ClientSendMissionNotification
struct APrimalBuff_MissionData_ClientSendMissionNotification_Params
{
	class AMissionType*                                FromMission;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       NotificationTag;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                MessageColor;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTexture2D*                                  MessageIcon;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DisplayTime;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DisplayScale;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsSingleton;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USoundBase*                                  MessageSound;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.ClientSendMissionAlert
struct APrimalBuff_MissionData_ClientSendMissionAlert_Params
{
	TEnumAsByte<ShooterGame_EMissionAlertType>         AlertType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     AlertTitle;                                                // (Parm, ZeroConstructor)
	TArray<struct FMissionAlertEntry>                  AlertEntries;                                              // (ConstParm, Parm, ZeroConstructor)
	float                                              DisplayTime;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USoundBase*                                  Sound;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               FlyoutFromTop;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.ClientMissionEvent
struct APrimalBuff_MissionData_ClientMissionEvent_Params
{
	class AMissionType*                                Mission;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bMissionStarted;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bMissionCompletedSuccessfully;                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.ClientMissionEligibilityResponse
struct APrimalBuff_MissionData_ClientMissionEligibilityResponse_Params
{
	TArray<struct FMissionEligibilityData>             EligibilityData;                                           // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.PrimalBuff_MissionData.ClientLoadMissionLevels
struct APrimalBuff_MissionData_ClientLoadMissionLevels_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalBuff_MissionData.AutoHideIndicatorParticles
struct APrimalBuff_MissionData_AutoHideIndicatorParticles_Params
{
};

// Function ShooterGame.PrimalHarvestingComponent.OnItemHarvested__DelegateSignature
struct UPrimalHarvestingComponent_OnItemHarvested__DelegateSignature_Params
{
	class AActor*                                      Harvester;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 HarvestedItem;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ItemQuantity;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalHarvestingComponent.BPRecieveComponentDamage
struct UPrimalHarvestingComponent_BPRecieveComponentDamage_Params
{
	float                                              Damage;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	class AController*                                 EventInstigator;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalHarvestingComponent.BPCustomHarvestResource
struct UPrimalHarvestingComponent_BPCustomHarvestResource_Params
{
	class UPrimalInventoryComponent*                   invComp;                                                   // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	int                                                NumToGive;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      DamageTypeClass;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      ToActor;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalRichTextBlock.SetText
struct UPrimalRichTextBlock_SetText_Params
{
	struct FText                                       InText;                                                    // (Parm)
	bool                                               bDoParse;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalRichTextBlock.SetString
struct UPrimalRichTextBlock_SetString_Params
{
	struct FString                                     InString;                                                  // (Parm, ZeroConstructor)
};

// Function ShooterGame.PrimalRichTextBlock.GetText
struct UPrimalRichTextBlock_GetText_Params
{
	struct FText                                       ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.PrimalStructurePlacer.SetForceDisplayMissionAreaStructureNoBuildZones
struct APrimalStructurePlacer_SetForceDisplayMissionAreaStructureNoBuildZones_Params
{
	bool                                               bForceDisplay;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructurePlacer.SetChoosingRotation
struct APrimalStructurePlacer_SetChoosingRotation_Params
{
	bool                                               bNewChoosingRotation;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructurePlacer.IsPlacingActive
struct APrimalStructurePlacer_IsPlacingActive_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructurePlacer.GetLastPlacementProperties
struct APrimalStructurePlacer_GetLastPlacementProperties_Params
{
	struct FVector                                     OutLastHitLoc;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    OutLastHitRot;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    OutLastViewRot;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructurePlacer.DrawStructurePreviewHUD
struct APrimalStructurePlacer_DrawStructurePreviewHUD_Params
{
	class AShooterHUD*                                 HUD;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalStructure*                            PlacingStructure;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureBearTrap.TriggerTouched
struct APrimalStructureBearTrap_TriggerTouched_Params
{
	class AActor*                                      Other;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                         OtherComp;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	int                                                OtherBodyIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bFromSweep;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                                  SweepResult;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.PrimalStructureBearTrap.PeriodicalTrapDamageTimer
struct APrimalStructureBearTrap_PeriodicalTrapDamageTimer_Params
{
};

// Function ShooterGame.PrimalStructureBearTrap.OnRep_CurrentTrapState
struct APrimalStructureBearTrap_OnRep_CurrentTrapState_Params
{
};

// Function ShooterGame.PrimalStructureBearTrap.NetGotoTrapState
struct APrimalStructureBearTrap_NetGotoTrapState_Params
{
	int8_t                                             TrapState;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureBearTrap.IsTrapPrepared
struct APrimalStructureBearTrap_IsTrapPrepared_Params
{
	float                                              AnimSetupTime;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureBearTrap.HideAnimatedSK
struct APrimalStructureBearTrap_HideAnimatedSK_Params
{
};

// Function ShooterGame.PrimalStructureBearTrap.DecreaseDamageTimer
struct APrimalStructureBearTrap_DecreaseDamageTimer_Params
{
};

// Function ShooterGame.PrimalStructureBearTrap.BPNotifyImmobilizedCharacterIsDeadOrInConscious
struct APrimalStructureBearTrap_BPNotifyImmobilizedCharacterIsDeadOrInConscious_Params
{
	bool                                               IsDead;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               IsConscious;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureDoor.OnRep_DoorOpenState
struct APrimalStructureDoor_OnRep_DoorOpenState_Params
{
	int8_t                                             PrevDoorOpenState;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureDoor.NetGotoDoorState
struct APrimalStructureDoor_NetGotoDoorState_Params
{
	int8_t                                             DoorState;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureDoor.HasSamePinCode
struct APrimalStructureDoor_HasSamePinCode_Params
{
	class APrimalStructureItemContainer*               otherContainer;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureDoor.GetDoorState
struct APrimalStructureDoor_GetDoorState_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureDoor.DelayedGotoDoorStateTimer
struct APrimalStructureDoor_DelayedGotoDoorStateTimer_Params
{
};

// Function ShooterGame.PrimalStructureDoor.CanOpen
struct APrimalStructureDoor_CanOpen_Params
{
	class APlayerController*                           ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureDoor.BPSetDoorState
struct APrimalStructureDoor_BPSetDoorState_Params
{
	int                                                DoorState;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureDoor.BPGotoDoorState
struct APrimalStructureDoor_BPGotoDoorState_Params
{
	int                                                NewDoorState;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureSkeletalDoor.OnEndOverlap
struct APrimalStructureSkeletalDoor_OnEndOverlap_Params
{
	class AActor*                                      OtherActor;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                         OtherComp;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	int                                                OtherBodyIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureSkeletalDoor.OnBeginOverlap
struct APrimalStructureSkeletalDoor_OnBeginOverlap_Params
{
	class AActor*                                      OtherActor;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                         OtherComp;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	int                                                OtherBodyIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bFromSweep;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                                  SweepResult;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.PrimalStructureSkeletalDoor.GetDoorOpenState
struct APrimalStructureSkeletalDoor_GetDoorOpenState_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureElevatorPlatform.ServerActivate
struct APrimalStructureElevatorPlatform_ServerActivate_Params
{
	class APlayerController*                           ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceDirection;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_EPrimalStructureElevatorState> Dir;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureElevatorPlatform.PlatformIsActive
struct APrimalStructureElevatorPlatform_PlatformIsActive_Params
{
	TEnumAsByte<ShooterGame_EPrimalStructureElevatorState> Direction;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureElevatorPlatform.OnRep_bIsActivated
struct APrimalStructureElevatorPlatform_OnRep_bIsActivated_Params
{
};

// Function ShooterGame.PrimalStructureElevatorPlatform.HasSamePinCode
struct APrimalStructureElevatorPlatform_HasSamePinCode_Params
{
	class APrimalStructureItemContainer*               otherContainer;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureElevatorPlatform.HasReachedMaxWeight
struct APrimalStructureElevatorPlatform_HasReachedMaxWeight_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureElevatorPlatform.GetTrackHeight
struct APrimalStructureElevatorPlatform_GetTrackHeight_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureElevatorPlatform.GetCurrentLiftedWeight
struct APrimalStructureElevatorPlatform_GetCurrentLiftedWeight_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureElevatorPlatform.GetAllTrackStructures
struct APrimalStructureElevatorPlatform_GetAllTrackStructures_Params
{
	TArray<class AActor*>                              Tracks;                                                    // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.PrimalStructureElevatorPlatform.Deactivate
struct APrimalStructureElevatorPlatform_Deactivate_Params
{
	bool                                               bSwitchDirection;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureElevatorPlatform.BPElevatorStopped
struct APrimalStructureElevatorPlatform_BPElevatorStopped_Params
{
	bool                                               bSwitchedDirection;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_EPrimalStructureElevatorState> NewDirection;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureElevatorPlatform.Activate
struct APrimalStructureElevatorPlatform_Activate_Params
{
	class APlayerController*                           ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceDirection;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_EPrimalStructureElevatorState> Dir;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DistanceToTravelOverride;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureExplosive.NetIgnoreDestructionEvents
struct APrimalStructureExplosive_NetIgnoreDestructionEvents_Params
{
};

// Function ShooterGame.PrimalStructureExplosive.ApplyPlacementPreview
struct APrimalStructureExplosive_ApplyPlacementPreview_Params
{
};

// Function ShooterGame.PrimalStructureExplosiveTransGPS.NetSetLocation
struct APrimalStructureExplosiveTransGPS_NetSetLocation_Params
{
	struct FVector                                     NewLocation;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureTripwire.WireCheck
struct APrimalStructureTripwire_WireCheck_Params
{
};

// Function ShooterGame.PrimalStructureTripwire.TriggerTouched
struct APrimalStructureTripwire_TriggerTouched_Params
{
	class AActor*                                      Other;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                         OtherComp;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	int                                                OtherBodyIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bFromSweep;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                                  SweepResult;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.PrimalStructureTripwire.OnRep_UnwiredTrap
struct APrimalStructureTripwire_OnRep_UnwiredTrap_Params
{
};

// Function ShooterGame.PrimalStructureTripwire.OnRep_ConnectedTo
struct APrimalStructureTripwire_OnRep_ConnectedTo_Params
{
};

// Function ShooterGame.PrimalStructureTripwire.NetUpdateBoxName
struct APrimalStructureTripwire_NetUpdateBoxName_Params
{
	struct FString                                     NewName;                                                   // (Parm, ZeroConstructor)
};

// Function ShooterGame.PrimalStructureTripwire.DisconnectMe
struct APrimalStructureTripwire_DisconnectMe_Params
{
};

// Function ShooterGame.PrimalStructureElevatorTrack.HasPlatformAttachedToTheTrack
struct APrimalStructureElevatorTrack_HasPlatformAttachedToTheTrack_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureElevatorTrack.ClientHasPlatform
struct APrimalStructureElevatorTrack_ClientHasPlatform_Params
{
};

// Function ShooterGame.PrimalStructureElevatorTrack.BPGetElevatorPlatform
struct APrimalStructureElevatorTrack_BPGetElevatorPlatform_Params
{
	class APrimalStructureElevatorPlatform*            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureItemContainer_CropPlot.RemovePlantedCrop
struct APrimalStructureItemContainer_CropPlot_RemovePlantedCrop_Params
{
};

// Function ShooterGame.PrimalStructureItemContainer_CropPlot.OnRep_PlantedCrop
struct APrimalStructureItemContainer_CropPlot_OnRep_PlantedCrop_Params
{
	class UClass*                                      PrevPlantedCrop;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureItemContainer_CropPlot.OnRep_HasFruitItems
struct APrimalStructureItemContainer_CropPlot_OnRep_HasFruitItems_Params
{
	bool                                               bPreviousHasFruitItems;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureItemContainer_CropPlot.OnRep_CurrentCropPhase
struct APrimalStructureItemContainer_CropPlot_OnRep_CurrentCropPhase_Params
{
	TEnumAsByte<ShooterGame_ESeedCropPhase>            PrevCropPhase;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureItemContainer_CropPlot.BPGetAdditionalGrowthMultiplier
struct APrimalStructureItemContainer_CropPlot_BPGetAdditionalGrowthMultiplier_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureItemContainer_CropPlot.AutoWaterRefreshCrop
struct APrimalStructureItemContainer_CropPlot_AutoWaterRefreshCrop_Params
{
};

// Function ShooterGame.PrimalStructureItemContainer_CropPlot.AddWater
struct APrimalStructureItemContainer_CropPlot_AddWater_Params
{
	float                                              amount;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bAllowNetworking;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureItemContainer_CropPlot_VisualItems.OnRep_HasItems
struct APrimalStructureItemContainer_CropPlot_VisualItems_OnRep_HasItems_Params
{
};

// Function ShooterGame.PrimalStructureItemContainer_CropPlot_VisualItems.BPUpdateItemVisuals
struct APrimalStructureItemContainer_CropPlot_VisualItems_BPUpdateItemVisuals_Params
{
};

// Function ShooterGame.PrimalStructureItemContainer_SupplyCrate.StartLosingHealth
struct APrimalStructureItemContainer_SupplyCrate_StartLosingHealth_Params
{
};

// Function ShooterGame.PrimalStructureItemContainer_SupplyCrate.SetAppliedBuff
struct APrimalStructureItemContainer_SupplyCrate_SetAppliedBuff_Params
{
	bool                                               bSet;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureItemContainer_SupplyCrate.LoseHealth
struct APrimalStructureItemContainer_SupplyCrate_LoseHealth_Params
{
};

// Function ShooterGame.PrimalStructureItemContainer_HordeCrate.SpawnElementNodePostProcess
struct APrimalStructureItemContainer_HordeCrate_SpawnElementNodePostProcess_Params
{
};

// Function ShooterGame.PrimalStructureItemContainer_VisualItems.UpdateVisuals
struct APrimalStructureItemContainer_VisualItems_UpdateVisuals_Params
{
};

// Function ShooterGame.PrimalStructureItemContainer_VisualItems.OnRep_HasItems
struct APrimalStructureItemContainer_VisualItems_OnRep_HasItems_Params
{
};

// Function ShooterGame.PrimalStructureItemContainer_VisualItems.BPUpdateItemVisuals
struct APrimalStructureItemContainer_VisualItems_BPUpdateItemVisuals_Params
{
};

// Function ShooterGame.PrimalStructureKeypad.ActivateKeypad
struct APrimalStructureKeypad_ActivateKeypad_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                pinCode;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bEnable;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureSeating.Release
struct APrimalStructureSeating_Release_Params
{
	class AShooterCharacter*                           ShooterCharacter;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureSeating.OnRep_SeatedCharacter
struct APrimalStructureSeating_OnRep_SeatedCharacter_Params
{
};

// Function ShooterGame.PrimalStructureSeating.OnRep_CharacterPerSeat
struct APrimalStructureSeating_OnRep_CharacterPerSeat_Params
{
};

// Function ShooterGame.PrimalStructureSeating.GetNearestFreeSpot
struct APrimalStructureSeating_GetNearestFreeSpot_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     CharacterLocation;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureSeating.Control
struct APrimalStructureSeating_Control_Params
{
	class AShooterCharacter*                           ShooterCharacter;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                SeatNumber;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bLockedToSeat;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureSeating.ClearSeats
struct APrimalStructureSeating_ClearSeats_Params
{
};

// Function ShooterGame.PrimalStructureSeating.CanSeat
struct APrimalStructureSeating_CanSeat_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           forCharacter;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForce;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureSeating.BPSeatedPlayer
struct APrimalStructureSeating_BPSeatedPlayer_Params
{
	class AShooterCharacter*                           SeatedChar;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                AtSeatNumber;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureSeating.BPReleasedPlayer
struct APrimalStructureSeating_BPReleasedPlayer_Params
{
	class AShooterCharacter*                           ReleasedChar;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                AtSeatNumber;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureSeating.BPPreventReleaseSeatingStructure
struct APrimalStructureSeating_BPPreventReleaseSeatingStructure_Params
{
	class AShooterCharacter*                           ForSitter;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureSeating.BPOnStopTargeting
struct APrimalStructureSeating_BPOnStopTargeting_Params
{
};

// Function ShooterGame.PrimalStructureSeating.BPOnStartTargeting
struct APrimalStructureSeating_BPOnStartTargeting_Params
{
};

// Function ShooterGame.PrimalStructureSeating.BPHandleSitterPoop
struct APrimalStructureSeating_BPHandleSitterPoop_Params
{
	class AShooterCharacter*                           ForSitter;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureSeating.BPGetBestSeatNumber
struct APrimalStructureSeating_BPGetBestSeatNumber_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                InBestSeatNumber;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureSeating.BPAllowSeating
struct APrimalStructureSeating_BPAllowSeating_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureBed.SpawnedPlayerFor
struct APrimalStructureBed_SpawnedPlayerFor_Params
{
	class AShooterPlayerController*                    PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                       ForPawn;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureTurretBallista.TryFiring
struct APrimalStructureTurretBallista_TryFiring_Params
{
	bool                                               shouldFire;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureTurretBallista.ServerSwitchAmmoType
struct APrimalStructureTurretBallista_ServerSwitchAmmoType_Params
{
};

// Function ShooterGame.PrimalStructureTurretBallista.ServerSetTargeting
struct APrimalStructureTurretBallista_ServerSetTargeting_Params
{
	bool                                               bTargeting;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureTurretBallista.GetCurrentAmmoType
struct APrimalStructureTurretBallista_GetCurrentAmmoType_Params
{
	class UClass*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureTurretBallista.ClientsPlayFireAnim
struct APrimalStructureTurretBallista_ClientsPlayFireAnim_Params
{
};

// Function ShooterGame.PrimalStructureTurretBallista.ClientsFireProjectile
struct APrimalStructureTurretBallista_ClientsFireProjectile_Params
{
	struct FVector                                     Origin;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector_NetQuantizeNormal                   ShootDir;                                                  // (Parm)
};

// Function ShooterGame.PrimalStructureTurretBallista.BPFiredWeapon
struct APrimalStructureTurretBallista_BPFiredWeapon_Params
{
};

// Function ShooterGame.PrimalStructureTurretBallista.BPCanFire
struct APrimalStructureTurretBallista_BPCanFire_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureTurret.UpdatedTargeting
struct APrimalStructureTurret_UpdatedTargeting_Params
{
};

// Function ShooterGame.PrimalStructureTurret.StartWarning
struct APrimalStructureTurret_StartWarning_Params
{
};

// Function ShooterGame.PrimalStructureTurret.GetTargetAltAimSocket
struct APrimalStructureTurret_GetTargetAltAimSocket_Params
{
	class APrimalCharacter*                            forTarget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureTurret.ClientsFireProjectile
struct APrimalStructureTurret_ClientsFireProjectile_Params
{
	struct FVector                                     Origin;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector_NetQuantizeNormal                   ShootDir;                                                  // (Parm)
};

// Function ShooterGame.PrimalStructureTurret.BPTurretPreventsTargeting
struct APrimalStructureTurret_BPTurretPreventsTargeting_Params
{
	class APrimalCharacter*                            PotentialTarget;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureTurret.BPCopyCustomSettingsFromTurret
struct APrimalStructureTurret_BPCopyCustomSettingsFromTurret_Params
{
	class APrimalStructureTurret*                      FromTurret;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureTurretPlant.RecoverHealthTimer
struct APrimalStructureTurretPlant_RecoverHealthTimer_Params
{
};

// Function ShooterGame.PrimalStructureUnderwaterBase.UpdateCurrentPinCodes
struct APrimalStructureUnderwaterBase_UpdateCurrentPinCodes_Params
{
	TArray<uint32_t>                                   NewPinCodes;                                               // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.PrimalStructureUnderwaterBase.SetPortholeState
struct APrimalStructureUnderwaterBase_SetPortholeState_Params
{
	int                                                index;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bOpen;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureUnderwaterBase.SetPortholeLocked
struct APrimalStructureUnderwaterBase_SetPortholeLocked_Params
{
	int                                                index;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bLocked;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureUnderwaterBase.OnRep_IsFlooded
struct APrimalStructureUnderwaterBase_OnRep_IsFlooded_Params
{
};

// Function ShooterGame.PrimalStructureUnderwaterBase.MultiSetPortholeStates
struct APrimalStructureUnderwaterBase_MultiSetPortholeStates_Params
{
	TArray<bool>                                       portholes;                                                 // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.PrimalStructureUnderwaterBase.ChangedCompartmentFloodState
struct APrimalStructureUnderwaterBase_ChangedCompartmentFloodState_Params
{
};

// Function ShooterGame.PrimalStructureLadder.UpdateRetraction
struct APrimalStructureLadder_UpdateRetraction_Params
{
};

// Function ShooterGame.PrimalStructureLadder.EndClimbingLadder
struct APrimalStructureLadder_EndClimbingLadder_Params
{
	class AShooterCharacter*                           TheCharacter;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bServerClimbOver;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ServerClimbOverLoc;                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureLadder.BP_SetLaddersRetracted
struct APrimalStructureLadder_BP_SetLaddersRetracted_Params
{
	bool                                               bRetract;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructurePortableLadder.UpdateLadder
struct APrimalStructurePortableLadder_UpdateLadder_Params
{
};

// Function ShooterGame.PrimalStructurePortableLadder.UpdateBoxCollisionForRetraction
struct APrimalStructurePortableLadder_UpdateBoxCollisionForRetraction_Params
{
	bool                                               bRetracted;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructurePortableLadder.PlaySetupAnimation
struct APrimalStructurePortableLadder_PlaySetupAnimation_Params
{
};

// Function ShooterGame.PrimalStructurePortableLadder.BuildLadder
struct APrimalStructurePortableLadder_BuildLadder_Params
{
};

// Function ShooterGame.PrimalStructureSeaMine.RefreshSeaMineTarget
struct APrimalStructureSeaMine_RefreshSeaMineTarget_Params
{
};

// Function ShooterGame.PrimalStructureSeaMine.OnTriggerEndOverlap
struct APrimalStructureSeaMine_OnTriggerEndOverlap_Params
{
	class AActor*                                      Other;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                         OtherComp;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	int                                                OtherBodyIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureSeaMine.OnTriggerBeginOverlap
struct APrimalStructureSeaMine_OnTriggerBeginOverlap_Params
{
	class AActor*                                      Other;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                         OtherComp;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	int                                                OtherBodyIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bFromSweep;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                                  SweepResult;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.PrimalStructureSeaMine.OnRep_SeaMineTarget
struct APrimalStructureSeaMine_OnRep_SeaMineTarget_Params
{
};

// Function ShooterGame.PrimalStructureSeaMine.OnHit
struct APrimalStructureSeaMine_OnHit_Params
{
	class AActor*                                      SelfActor;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      OtherActor;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     NormalImpulse;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                                  Hit;                                                       // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.PrimalStructureSeaMine.OnExplodingTriggerBeginOverlap
struct APrimalStructureSeaMine_OnExplodingTriggerBeginOverlap_Params
{
	class AActor*                                      Other;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                         OtherComp;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	int                                                OtherBodyIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bFromSweep;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                                  SweepResult;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.PrimalStructureSeaMine.Explode
struct APrimalStructureSeaMine_Explode_Params
{
};

// Function ShooterGame.PrimalStructureSign.OnRep_SignText
struct APrimalStructureSign_OnRep_SignText_Params
{
	struct FString                                     PreviousSignText;                                          // (Parm, ZeroConstructor)
};

// Function ShooterGame.PrimalStructureWaterPipe.SetHasWater
struct APrimalStructureWaterPipe_SetHasWater_Params
{
	bool                                               bNewHasWater;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureWaterPipe.RefreshWaterState
struct APrimalStructureWaterPipe_RefreshWaterState_Params
{
};

// Function ShooterGame.PrimalStructureWaterPipe.RefreshHasSourceMaterials
struct APrimalStructureWaterPipe_RefreshHasSourceMaterials_Params
{
};

// Function ShooterGame.PrimalStructureWaterPipe.OnRep_HasWater
struct APrimalStructureWaterPipe_OnRep_HasWater_Params
{
	bool                                               bPreviousHasWater;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureWaterPipe.BPOnWaterStateChange
struct APrimalStructureWaterPipe_BPOnWaterStateChange_Params
{
	bool                                               bPipeHasWaterOrPower;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalStructureWaterPipe.BPOnRefreshPipeMaterials
struct APrimalStructureWaterPipe_BPOnRefreshPipeMaterials_Params
{
	bool                                               bPipeHasWaterOrPower;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInterface*                          NewMaterial;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.DinoListButtonWidget.OnGetContextMenuContent
struct UDinoListButtonWidget_OnGetContextMenuContent_Params
{
	class UWidget*                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDActiveMissionWidget.ShowMissionAlert
struct UHUDActiveMissionWidget_ShowMissionAlert_Params
{
	TEnumAsByte<ShooterGame_EMissionAlertType>         AlertType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     AlertTitle;                                                // (Parm, ZeroConstructor)
	TArray<struct FMissionAlertEntry>                  NewEntries;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bInstant;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bFlyoutFromTop;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDActiveMissionWidget.SetRacePositionText
struct UHUDActiveMissionWidget_SetRacePositionText_Params
{
	struct FText                                       PositionText;                                              // (Parm)
};

// Function ShooterGame.HUDActiveMissionWidget.SetRacePanelVisibility
struct UHUDActiveMissionWidget_SetRacePanelVisibility_Params
{
	TEnumAsByte<UMG_ESlateVisibility>                  NewVisibility;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDActiveMissionWidget.IsMissionAlertVisible
struct UHUDActiveMissionWidget_IsMissionAlertVisible_Params
{
	bool                                               bIsTop;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDActiveMissionWidget.HideMissionAlert
struct UHUDActiveMissionWidget_HideMissionAlert_Params
{
	bool                                               bInstant;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bHideTop;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDActiveMissionWidget.HaveActiveMission
struct UHUDActiveMissionWidget_HaveActiveMission_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDActiveMissionWidget.GetActiveMissionWidget
struct UHUDActiveMissionWidget_GetActiveMissionWidget_Params
{
	class APlayerController*                           PlayerController;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UHUDActiveMissionWidget*                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementVisibility
struct UHUDCustomStatusWidget_SetHUDElementVisibility_Params
{
	struct FHUDElement                                 ElementInfo;                                               // (Parm, OutParm, ReferenceParm)
	bool                                               bIsVisible;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementTitle
struct UHUDCustomStatusWidget_SetHUDElementTitle_Params
{
	struct FHUDElement                                 ElementInfo;                                               // (Parm, OutParm, ReferenceParm)
	struct FString                                     NewTitle;                                                  // (Parm, ZeroConstructor)
};

// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementTextScale
struct UHUDCustomStatusWidget_SetHUDElementTextScale_Params
{
	struct FHUDElement                                 ElementInfo;                                               // (Parm, OutParm, ReferenceParm)
	float                                              NewScale;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementTextPadding
struct UHUDCustomStatusWidget_SetHUDElementTextPadding_Params
{
	struct FHUDElement                                 ElementInfo;                                               // (Parm, OutParm, ReferenceParm)
	struct FMargin                                     NewPadding;                                                // (Parm)
};

// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementTextColor
struct UHUDCustomStatusWidget_SetHUDElementTextColor_Params
{
	struct FHUDElement                                 ElementInfo;                                               // (Parm, OutParm, ReferenceParm)
	struct FLinearColor                                NewColor;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementTextAlignment_Title
struct UHUDCustomStatusWidget_SetHUDElementTextAlignment_Title_Params
{
	struct FHUDElement                                 ElementInfo;                                               // (Parm, OutParm, ReferenceParm)
	TEnumAsByte<Slate_ETextJustify>                    NewAlignment;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementTextAlignment_Label
struct UHUDCustomStatusWidget_SetHUDElementTextAlignment_Label_Params
{
	struct FHUDElement                                 ElementInfo;                                               // (Parm, OutParm, ReferenceParm)
	TEnumAsByte<Slate_ETextJustify>                    NewAlignment;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementSize
struct UHUDCustomStatusWidget_SetHUDElementSize_Params
{
	struct FHUDElement                                 ElementInfo;                                               // (Parm, OutParm, ReferenceParm)
	struct FVector2D                                   NewSize;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementScale
struct UHUDCustomStatusWidget_SetHUDElementScale_Params
{
	struct FHUDElement                                 ElementInfo;                                               // (Parm, OutParm, ReferenceParm)
	struct FVector2D                                   NewScale;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementProgressColor
struct UHUDCustomStatusWidget_SetHUDElementProgressColor_Params
{
	struct FHUDElement                                 ElementInfo;                                               // (Parm, OutParm, ReferenceParm)
	struct FLinearColor                                NewColor;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementProgressBarScale
struct UHUDCustomStatusWidget_SetHUDElementProgressBarScale_Params
{
	struct FHUDElement                                 ElementInfo;                                               // (Parm, OutParm, ReferenceParm)
	struct FVector2D                                   NewScale;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementProgressBarPadding
struct UHUDCustomStatusWidget_SetHUDElementProgressBarPadding_Params
{
	struct FHUDElement                                 ElementInfo;                                               // (Parm, OutParm, ReferenceParm)
	struct FMargin                                     NewPadding;                                                // (Parm)
};

// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementProgress
struct UHUDCustomStatusWidget_SetHUDElementProgress_Params
{
	struct FHUDElement                                 ElementInfo;                                               // (Parm, OutParm, ReferenceParm)
	float                                              NewProgress;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementLocation
struct UHUDCustomStatusWidget_SetHUDElementLocation_Params
{
	struct FHUDElement                                 ElementInfo;                                               // (Parm, OutParm, ReferenceParm)
	struct FVector2D                                   NewLocation;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementLabelNumeric
struct UHUDCustomStatusWidget_SetHUDElementLabelNumeric_Params
{
	struct FHUDElement                                 ElementInfo;                                               // (Parm, OutParm, ReferenceParm)
	float                                              LabelValue;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_ERoundingMode>                  RoundingMode;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                               bUseGrouping;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	int                                                MinIntDigits;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	int                                                MaxIntDigits;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	int                                                MinFractionalDigits;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	int                                                MaxFractionalDigits;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                               bAddPercentSymbol;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
};

// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementLabel
struct UHUDCustomStatusWidget_SetHUDElementLabel_Params
{
	struct FHUDElement                                 ElementInfo;                                               // (Parm, OutParm, ReferenceParm)
	struct FString                                     NewLabel;                                                  // (Parm, ZeroConstructor)
};

// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementImage
struct UHUDCustomStatusWidget_SetHUDElementImage_Params
{
	struct FHUDElement                                 ElementInfo;                                               // (Parm, OutParm, ReferenceParm)
	class UTexture2D*                                  NewIcon;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSetIcon;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSetProgressBarFillImage;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSetBackgroundImage;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementIconScale
struct UHUDCustomStatusWidget_SetHUDElementIconScale_Params
{
	struct FHUDElement                                 ElementInfo;                                               // (Parm, OutParm, ReferenceParm)
	struct FVector2D                                   NewScale;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementIconRotation
struct UHUDCustomStatusWidget_SetHUDElementIconRotation_Params
{
	struct FHUDElement                                 ElementInfo;                                               // (Parm, OutParm, ReferenceParm)
	float                                              NewAngle;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementIconPadding
struct UHUDCustomStatusWidget_SetHUDElementIconPadding_Params
{
	struct FHUDElement                                 ElementInfo;                                               // (Parm, OutParm, ReferenceParm)
	struct FMargin                                     NewPadding;                                                // (Parm)
};

// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementIconColor
struct UHUDCustomStatusWidget_SetHUDElementIconColor_Params
{
	struct FHUDElement                                 ElementInfo;                                               // (Parm, OutParm, ReferenceParm)
	struct FLinearColor                                NewColor;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementBackgroundImageColor
struct UHUDCustomStatusWidget_SetHUDElementBackgroundImageColor_Params
{
	struct FHUDElement                                 ElementInfo;                                               // (Parm, OutParm, ReferenceParm)
	struct FLinearColor                                NewColor;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementAnchor
struct UHUDCustomStatusWidget_SetHUDElementAnchor_Params
{
	struct FHUDElement                                 ElementInfo;                                               // (Parm, OutParm, ReferenceParm)
	struct FAnchors                                    NewAnchor;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.HUDCustomStatusWidget.IsHUDElementVisible
struct UHUDCustomStatusWidget_IsHUDElementVisible_Params
{
	class AActor*                                      WidgetOwner;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHUDElement                                 WidgetInfo;                                                // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDCustomStatusWidget.GetHUDElementRootWidget
struct UHUDCustomStatusWidget_GetHUDElementRootWidget_Params
{
	class APlayerController*                           PlayerController;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UHUDCustomStatusWidget*                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDPingWidget.UpdateWidgetPingData
struct UHUDPingWidget_UpdateWidgetPingData_Params
{
	struct FPingData                                   WithPingData;                                              // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDPingWidget.RemovePingWidget
struct UHUDPingWidget_RemovePingWidget_Params
{
};

// Function ShooterGame.HUDPingWidget.OnPingWidgetRemoved
struct UHUDPingWidget_OnPingWidgetRemoved_Params
{
};

// Function ShooterGame.HUDPingWidget.OnPingWidgetCreated
struct UHUDPingWidget_OnPingWidgetCreated_Params
{
};

// Function ShooterGame.HUDPingWidget.OnPingUnhovered
struct UHUDPingWidget_OnPingUnhovered_Params
{
	class AShooterCharacter*                           UnhoveringPlayer;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDPingWidget.OnPingResponseReceived
struct UHUDPingWidget_OnPingResponseReceived_Params
{
	class AShooterCharacter*                           RespondingPlayer;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDPingWidget.OnPingHovered
struct UHUDPingWidget_OnPingHovered_Params
{
	class AShooterCharacter*                           HoveringPlayer;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDPingWidget.IsPingValid
struct UHUDPingWidget_IsPingValid_Params
{
	struct FPingData                                   ForPingData;                                               // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDPingWidget.InitializePingWidget
struct UHUDPingWidget_InitializePingWidget_Params
{
	struct FPingData                                   FromPingData;                                              // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};

// Function ShooterGame.HUDPingWidget.HasValidPingData
struct UHUDPingWidget_HasValidPingData_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDPingWidget.GetPingWorldLocation
struct UHUDPingWidget_GetPingWorldLocation_Params
{
	struct FPingData                                   FromPingData;                                              // (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDPingWidget.GetPingData
struct UHUDPingWidget_GetPingData_Params
{
	struct FPingData                                   ReturnValue;                                               // (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, ContainsInstancedReference)
};

// Function ShooterGame.HUDPointOfInterestWidget.UpdateWidgetPointOfInterestData
struct UHUDPointOfInterestWidget_UpdateWidgetPointOfInterestData_Params
{
	struct FPointOfInterestData                        WithPointData;                                             // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDPointOfInterestWidget.IsPointOfInterestValid
struct UHUDPointOfInterestWidget_IsPointOfInterestValid_Params
{
	struct FPointOfInterestData                        ForPointData;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDPointOfInterestWidget.IsPointOfInterestInitialized
struct UHUDPointOfInterestWidget_IsPointOfInterestInitialized_Params
{
	struct FPointOfInterestData                        ForPointData;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDPointOfInterestWidget.InitializePointOfInterestWidget
struct UHUDPointOfInterestWidget_InitializePointOfInterestWidget_Params
{
	struct FPointOfInterestData                        FromPointData;                                             // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.HUDPointOfInterestWidget.HasValidPointOfInterestData
struct UHUDPointOfInterestWidget_HasValidPointOfInterestData_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDPointOfInterestWidget.GetPointOfInterestWorldRotation
struct UHUDPointOfInterestWidget_GetPointOfInterestWorldRotation_Params
{
	struct FPointOfInterestData                        FromPointData;                                             // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FRotator                                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDPointOfInterestWidget.GetPointOfInterestWorldLocation
struct UHUDPointOfInterestWidget_GetPointOfInterestWorldLocation_Params
{
	struct FPointOfInterestData                        FromPointData;                                             // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDPointOfInterestWidget.GetPointOfInterestTransform
struct UHUDPointOfInterestWidget_GetPointOfInterestTransform_Params
{
	struct FPointOfInterestData                        FromPointData;                                             // (ConstParm, Parm, OutParm, ReferenceParm)
	struct UObject_FTransform                          ReturnValue;                                               // (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDPointOfInterestWidget.GetPointOfInterestReachedSound
struct UHUDPointOfInterestWidget_GetPointOfInterestReachedSound_Params
{
	class USoundBase*                                  ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDPointOfInterestWidget.GetPointOfInterestData
struct UHUDPointOfInterestWidget_GetPointOfInterestData_Params
{
	struct FPointOfInterestData                        ReturnValue;                                               // (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)
};

// Function ShooterGame.HUDPointOfInterestWidget.GetPointOfInterestCosmeticActorTransform
struct UHUDPointOfInterestWidget_GetPointOfInterestCosmeticActorTransform_Params
{
	struct FPointOfInterestData                        FromPointData;                                             // (ConstParm, Parm, OutParm, ReferenceParm)
	struct UObject_FTransform                          ReturnValue;                                               // (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDPointOfInterestWidget.GetPointOfInterestAddedSound
struct UHUDPointOfInterestWidget_GetPointOfInterestAddedSound_Params
{
	class USoundBase*                                  ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.HUDPointOfInterestWidget.DestroyPointOfInterestWidget
struct UHUDPointOfInterestWidget_DestroyPointOfInterestWidget_Params
{
};

// Function ShooterGame.HUDPointOfInterestWidget.CanActorViewPointOfInterest
struct UHUDPointOfInterestWidget_CanActorViewPointOfInterest_Params
{
	class AActor*                                      forActor;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FPointOfInterestData                        CanViewPointData;                                          // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.InventoryArkCreaturesPanel.UploadedDinoSlotButtonSelected
struct UInventoryArkCreaturesPanel_UploadedDinoSlotButtonSelected_Params
{
	class UWidget*                                     theWidget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.InventoryArkCreaturesPanel.LocalDinoSlotButtonSelected
struct UInventoryArkCreaturesPanel_LocalDinoSlotButtonSelected_Params
{
	class UWidget*                                     theWidget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_Inventory.SetInventoryVisibility
struct UUI_Inventory_SetInventoryVisibility_Params
{
	bool                                               bVisible;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.InventoryPanelWidget.SearchTextChanged
struct UInventoryPanelWidget_SearchTextChanged_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.InventoryPanelWidget.OnGetSortContextMenuContent
struct UInventoryPanelWidget_OnGetSortContextMenuContent_Params
{
	class UWidget*                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.InventoryPanelWidget.OnGamepadPressSortIcon
struct UInventoryPanelWidget_OnGamepadPressSortIcon_Params
{
};

// Function ShooterGame.LeaderboardRowWidget.SetRowContents
struct ULeaderboardRowWidget_SetRowContents_Params
{
	struct FLeaderboardDisplayRow                      RowData;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              ContainerWidth;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              RowHeight;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               IsHeaderRow;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ManuallySetPlayersOwnRowStyling;                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               UsePlayersOwnRowStyling;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_DinoOrderGroups.DinoOrderGroupSelected
struct UUI_DinoOrderGroups_DinoOrderGroupSelected_Params
{
	class UWidget*                                     theWidget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_DinoOrderGroups.DinoClassSelected
struct UUI_DinoOrderGroups_DinoClassSelected_Params
{
	class UWidget*                                     theWidget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_DinoOrderGroups.DinoCharSelected
struct UUI_DinoOrderGroups_DinoCharSelected_Params
{
	class UWidget*                                     theWidget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_EngramsMenu.OnEngramsFilterChanged
struct UUI_EngramsMenu_OnEngramsFilterChanged_Params
{
	bool                                               bIsChecked;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_EngramsMenu.OnEngramFilterChanged
struct UUI_EngramsMenu_OnEngramFilterChanged_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.UI_EngramsMenu.EngramSelected
struct UUI_EngramsMenu_EngramSelected_Params
{
	class UDataListEntryButton*                        theButton;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_EngramsMenu.EngramDoubleClicked
struct UUI_EngramsMenu_EngramDoubleClicked_Params
{
	class UDataListEntryButton*                        theButton;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_MissionList.OnMissionFilterChanged
struct UUI_MissionList_OnMissionFilterChanged_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.UI_OptionsMenu.OptionsGraphTick
struct UUI_OptionsMenu_OptionsGraphTick_Params
{
	struct FGeometry                                   MyGeometry;                                                // (Parm, IsPlainOldData, NoDestructor)
	float                                              InDeltaTime;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_OptionsMenu.OnWidthChanged
struct UUI_OptionsMenu_OnWidthChanged_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.UI_OptionsMenu.OnResolutionsComboBoxSelectionChanged
struct UUI_OptionsMenu_OnResolutionsComboBoxSelectionChanged_Params
{
	struct FString                                     SelectedItem;                                              // (Parm, ZeroConstructor)
	TEnumAsByte<SlateCore_ESelectInfo>                 SelectionType;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_OptionsMenu.OnHeightChanged
struct UUI_OptionsMenu_OnHeightChanged_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.UI_OptionsMenu.OnGraphicsQualityComboBoxChanged
struct UUI_OptionsMenu_OnGraphicsQualityComboBoxChanged_Params
{
	struct FString                                     SelectedItem;                                              // (Parm, ZeroConstructor)
};

// Function ShooterGame.UI_OptionsMenu.OnGraphicsPresetValueChanged
struct UUI_OptionsMenu_OnGraphicsPresetValueChanged_Params
{
};

// Function ShooterGame.UI_OptionsMenu_UWP.OptionsGraphTick
struct UUI_OptionsMenu_UWP_OptionsGraphTick_Params
{
	struct FGeometry                                   MyGeometry;                                                // (Parm, IsPlainOldData, NoDestructor)
	float                                              InDeltaTime;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_OptionsMenu_UWP.OnWidthChanged
struct UUI_OptionsMenu_UWP_OnWidthChanged_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.UI_OptionsMenu_UWP.OnViewDistanceComboBoxSelectionChanged
struct UUI_OptionsMenu_UWP_OnViewDistanceComboBoxSelectionChanged_Params
{
	struct FString                                     SelectedItem;                                              // (Parm, ZeroConstructor)
	TEnumAsByte<SlateCore_ESelectInfo>                 SelectionType;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_OptionsMenu_UWP.OnResolutionsComboBoxSelectionChanged
struct UUI_OptionsMenu_UWP_OnResolutionsComboBoxSelectionChanged_Params
{
	struct FString                                     SelectedItem;                                              // (Parm, ZeroConstructor)
	TEnumAsByte<SlateCore_ESelectInfo>                 SelectionType;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_OptionsMenu_UWP.OnResolutionScaleChanged
struct UUI_OptionsMenu_UWP_OnResolutionScaleChanged_Params
{
	float                                              SliderValue;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_OptionsMenu_UWP.OnHeightChanged
struct UUI_OptionsMenu_UWP_OnHeightChanged_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.UI_OptionsMenu_UWP.OnGraphicsQualityComboBoxChanged
struct UUI_OptionsMenu_UWP_OnGraphicsQualityComboBoxChanged_Params
{
	struct FString                                     SelectedItem;                                              // (Parm, ZeroConstructor)
};

// Function ShooterGame.UI_OptionsMenu_UWP.OnGraphicsPresetValueChanged
struct UUI_OptionsMenu_UWP_OnGraphicsPresetValueChanged_Params
{
};

// Function ShooterGame.UI_SurvivorProfile.OnSubtitlesCheckboxChanged
struct UUI_SurvivorProfile_OnSubtitlesCheckboxChanged_Params
{
	bool                                               InNewState;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_SurvivorProfile.OnNoteNameFilterChanged
struct UUI_SurvivorProfile_OnNoteNameFilterChanged_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.UI_SurvivorProfile.HideDossier
struct UUI_SurvivorProfile_HideDossier_Params
{
};

// Function ShooterGame.UI_TamingList.SearchTextChanged
struct UUI_TamingList_SearchTextChanged_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.UI_TribeManager.TribeWarEntryButtonSelected
struct UUI_TribeManager_TribeWarEntryButtonSelected_Params
{
	class UWidget*                                     theWidget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_TribeManager.TribeAllianceMemberButtonSelected
struct UUI_TribeManager_TribeAllianceMemberButtonSelected_Params
{
	class UWidget*                                     theWidget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_TribeManager.TribeAllianceEntryButtonSelected
struct UUI_TribeManager_TribeAllianceEntryButtonSelected_Params
{
	class UWidget*                                     theWidget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_TribeManager.RankGroupButtonSelected
struct UUI_TribeManager_RankGroupButtonSelected_Params
{
	class UWidget*                                     theWidget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_TribeManager.PlayerEntryButtonSelected
struct UUI_TribeManager_PlayerEntryButtonSelected_Params
{
	class UWidget*                                     theWidget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_TribeManager.OnGroupRankSelected
struct UUI_TribeManager_OnGroupRankSelected_Params
{
	struct FString                                     SelectedItem;                                              // (Parm, ZeroConstructor)
	TEnumAsByte<SlateCore_ESelectInfo>                 SelectionType;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_AdminMangment.OnTextCommittedWhiteListed
struct UUI_AdminMangment_OnTextCommittedWhiteListed_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<SlateCore_ETextCommit>                 CommitMethod;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_AdminMangment.OnTextCommittedMessageOfTheDay
struct UUI_AdminMangment_OnTextCommittedMessageOfTheDay_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<SlateCore_ETextCommit>                 CommitMethod;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_AdminMangment.OnTextCommittedManualBan
struct UUI_AdminMangment_OnTextCommittedManualBan_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<SlateCore_ETextCommit>                 CommitMethod;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_AdminMangment.OnTextCommitted
struct UUI_AdminMangment_OnTextCommitted_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<SlateCore_ETextCommit>                 CommitMethod;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_AdminMangment.OnTextChangedMessageOfTheDay
struct UUI_AdminMangment_OnTextChangedMessageOfTheDay_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.UI_AdminMangment.OnTextChangedManulaBan
struct UUI_AdminMangment_OnTextChangedManulaBan_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.UI_AdminMangment.OnTextChangedManualWhiteLised
struct UUI_AdminMangment_OnTextChangedManualWhiteLised_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.UI_AdminMangment.OnTextChanged
struct UUI_AdminMangment_OnTextChanged_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.UI_AllPlayersList.OnTribeNameFilterChanged
struct UUI_AllPlayersList_OnTribeNameFilterChanged_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.UI_AllPlayersList.OnPlayerNameFilterChanged
struct UUI_AllPlayersList_OnPlayerNameFilterChanged_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.UI_ChangeTransponderFreqencyEntry.HandleFilterStringTextChanged
struct UUI_ChangeTransponderFreqencyEntry_HandleFilterStringTextChanged_Params
{
	struct FText                                       NewText;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.UI_ChatBox.HandleChatTextCommitted
struct UUI_ChatBox_HandleChatTextCommitted_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<SlateCore_ETextCommit>                 CommitMethod;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_ChatBox.HandleChatTextChanged
struct UUI_ChatBox_HandleChatTextChanged_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.UI_ConsoleDedicated.PlayerDoubleClicked
struct UUI_ConsoleDedicated_PlayerDoubleClicked_Params
{
	class UDataListEntryButton*                        theButton;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_ConsoleDedicated.OnTextChanged
struct UUI_ConsoleDedicated_OnTextChanged_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.UI_ConsoleDedicated.HandleTextMessageTextCommitted
struct UUI_ConsoleDedicated_HandleTextMessageTextCommitted_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<SlateCore_ETextCommit>                 CommitMethod;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_Cooking.RefreshItemLists
struct UUI_Cooking_RefreshItemLists_Params
{
};

// Function ShooterGame.UI_Cooking.OnRedSliderValueChanged
struct UUI_Cooking_OnRedSliderValueChanged_Params
{
	float                                              SliderValue;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_Cooking.OnItemNameChanged
struct UUI_Cooking_OnItemNameChanged_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.UI_Cooking.OnItemDescriptionChanged
struct UUI_Cooking_OnItemDescriptionChanged_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.UI_Cooking.OnGreenSliderValueChanged
struct UUI_Cooking_OnGreenSliderValueChanged_Params
{
	float                                              SliderValue;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_Cooking.OnBlueSliderValueChanged
struct UUI_Cooking_OnBlueSliderValueChanged_Params
{
	float                                              SliderValue;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_Cooking.MyInventoryItemDoubleClicked
struct UUI_Cooking_MyInventoryItemDoubleClicked_Params
{
	class UDataListEntryButton*                        theButton;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_DyeItem.DyeItemDoubleClicked
struct UUI_DyeItem_DyeItemDoubleClicked_Params
{
	class UDataListEntryButton*                        theButton;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_GenericConfirmationDialog.OnConfirmationDialogClosedEvent__DelegateSignature
struct UUI_GenericConfirmationDialog_OnConfirmationDialogClosedEvent__DelegateSignature_Params
{
	bool                                               bAccept;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_Hairstyle.OnHeadHairStyleButtonClicked
struct UUI_Hairstyle_OnHeadHairStyleButtonClicked_Params
{
	class UWidget*                                     theWidget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_Hairstyle.OnHairStyleAccepted__DelegateSignature
struct UUI_Hairstyle_OnHairStyleAccepted__DelegateSignature_Params
{
	int                                                newHeadHairIndex;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                newFacialHairIndex;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              NewHeadHairPercent;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              NewFacialHairPercent;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                HeadHairDyeID1;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                HeadHairDyeID2;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                FacialHairDyeID1;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                FacialHairDyeID2;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_Hairstyle.OnFacialHairStyleButtonClicked
struct UUI_Hairstyle_OnFacialHairStyleButtonClicked_Params
{
	class UWidget*                                     theWidget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_Hairstyle.ClearHairButtonClicked__DelegateSignature
struct UUI_Hairstyle_ClearHairButtonClicked__DelegateSignature_Params
{
};

// Function ShooterGame.UI_HexagonConversion.TradableItemSelected
struct UUI_HexagonConversion_TradableItemSelected_Params
{
	class UWidget*                                     theWidget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_HexagonConversion.PopulateAvailableTradeItems
struct UUI_HexagonConversion_PopulateAvailableTradeItems_Params
{
	TArray<bool>                                       AvailableItems;                                            // (Parm, ZeroConstructor)
};

// Function ShooterGame.UI_HexagonConversion.OnSearchTextChanged
struct UUI_HexagonConversion_OnSearchTextChanged_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.UI_HexagonConversion.HideItem
struct UUI_HexagonConversion_HideItem_Params
{
	int                                                ItemIndex;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_HexagonConversion.GetWidgetIndexOfAssociatedItemIndex
struct UUI_HexagonConversion_GetWidgetIndexOfAssociatedItemIndex_Params
{
	int                                                ItemIndex;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_HexagonConversion.GetCurrentlySelectedTradeItemWidgetIndex
struct UUI_HexagonConversion_GetCurrentlySelectedTradeItemWidgetIndex_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_HexagonConversion.FilterAvailableTradeItems
struct UUI_HexagonConversion_FilterAvailableTradeItems_Params
{
	TArray<bool>                                       AvailableTradableItems;                                    // (Parm, ZeroConstructor)
	struct FString                                     FilterText;                                                // (Parm, ZeroConstructor)
};

// Function ShooterGame.UI_HostSession.SlotButtonSelected
struct UUI_HostSession_SlotButtonSelected_Params
{
	class UWidget*                                     theWidget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_HostSession.OnSliderValueChanged
struct UUI_HostSession_OnSliderValueChanged_Params
{
	float                                              SliderValue;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_HostSession.OnSessionPasswordTextCommitted
struct UUI_HostSession_OnSessionPasswordTextCommitted_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<SlateCore_ETextCommit>                 CommitMethod;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_HostSession.OnSessionPasswordTextChanged
struct UUI_HostSession_OnSessionPasswordTextChanged_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.UI_HostSession.OnSessionNameTextCommitted
struct UUI_HostSession_OnSessionNameTextCommitted_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<SlateCore_ETextCommit>                 CommitMethod;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_HostSession.OnSessionNameTextChanged
struct UUI_HostSession_OnSessionNameTextChanged_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.UI_HostSession.OnNumericValueCommitted
struct UUI_HostSession_OnNumericValueCommitted_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<SlateCore_ETextCommit>                 CommitMethod;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_HostSession.OnDeleteMapServerDataButtonClicked
struct UUI_HostSession_OnDeleteMapServerDataButtonClicked_Params
{
	class UWidget*                                     theWidget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_HostSession.OnDeleteMapSaveDataButtonClicked
struct UUI_HostSession_OnDeleteMapSaveDataButtonClicked_Params
{
	class UWidget*                                     theWidget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_HostSession.OnAdminPasswordTextCommitted
struct UUI_HostSession_OnAdminPasswordTextCommitted_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<SlateCore_ETextCommit>                 CommitMethod;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_HostSession.OnAdminPasswordTextChanged
struct UUI_HostSession_OnAdminPasswordTextChanged_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.UI_HostSession.ModSelected
struct UUI_HostSession_ModSelected_Params
{
	class UWidget*                                     theWidget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_HostSession.EngramDoubleClicked
struct UUI_HostSession_EngramDoubleClicked_Params
{
	class UDataListEntryButton*                        theButton;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_HostSession.ActiveModSelected
struct UUI_HostSession_ActiveModSelected_Params
{
	class UWidget*                                     theWidget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_Hub.RecenterHub
struct UUI_Hub_RecenterHub_Params
{
};

// Function ShooterGame.UI_HudOverlay.ShowOverlayTooltip
struct UUI_HudOverlay_ShowOverlayTooltip_Params
{
	class AShooterPlayerController*                    HUDOwner;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                     SponsorObject;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      ToolTipPrefab;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                                   ScreenPos;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<UMG_EAlignHorizontalUI>                HorizontalAlignment;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<UMG_EAlignVerticalUI>                  VerticalAlignment;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                                   Padding;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector2D                                   OverlayScale;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               bRetainScreenProjectionFromWorld;                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ScreenProjectionWorldPosition;                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector2D                                   ScreenProjectionPositionOffset;                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_LeaderboardWidget.SetRows
struct UUI_LeaderboardWidget_SetRows_Params
{
	class UClass*                                      LeaderboardRowWidget;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLeaderboardDisplayRow                      HeaderRow;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	TArray<struct FLeaderboardDisplayRow>              Rows;                                                      // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function ShooterGame.UI_LeaderboardWidget.SetLeaderboardWidgetVisible
struct UUI_LeaderboardWidget_SetLeaderboardWidgetVisible_Params
{
	bool                                               bIsVisible;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_ListCharacterData.OnArkCharacterPlayerDataChosen__DelegateSignature
struct UUI_ListCharacterData_OnArkCharacterPlayerDataChosen__DelegateSignature_Params
{
	TArray<unsigned char>                              ChoosenPlayerDataBytes;                                    // (Parm, ZeroConstructor)
};

// Function ShooterGame.UI_ListCharacterData.CharacterSlotButtonSelected
struct UUI_ListCharacterData_CharacterSlotButtonSelected_Params
{
	class UWidget*                                     theWidget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_ListSessions.SlotButtonSelected
struct UUI_ListSessions_SlotButtonSelected_Params
{
	class UWidget*                                     theWidget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_ListSessions.RefreshSlotButtons
struct UUI_ListSessions_RefreshSlotButtons_Params
{
};

// Function ShooterGame.UI_ListSessions.OnTextCommitted
struct UUI_ListSessions_OnTextCommitted_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<SlateCore_ETextCommit>                 CommitMethod;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_ListSessions.OnTextChanged
struct UUI_ListSessions_OnTextChanged_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.UI_ListSessions.OnSortComboBoxSelectionChanged
struct UUI_ListSessions_OnSortComboBoxSelectionChanged_Params
{
	struct FString                                     SelectedItem;                                              // (Parm, ZeroConstructor)
	TEnumAsByte<SlateCore_ESelectInfo>                 SelectionType;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_ListSessions.OnServersFilterComboBoxSelectionChanged
struct UUI_ListSessions_OnServersFilterComboBoxSelectionChanged_Params
{
	struct FString                                     SelectedItem;                                              // (Parm, ZeroConstructor)
	TEnumAsByte<SlateCore_ESelectInfo>                 SelectionType;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_ListSessions.OnMapComboBoxSelectionChanged
struct UUI_ListSessions_OnMapComboBoxSelectionChanged_Params
{
	struct FString                                     SelectedItem;                                              // (Parm, ZeroConstructor)
	TEnumAsByte<SlateCore_ESelectInfo>                 SelectionType;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_ListSessions.OnGameModeComboBoxSelectionChanged
struct UUI_ListSessions_OnGameModeComboBoxSelectionChanged_Params
{
	struct FString                                     SelectedItem;                                              // (Parm, ZeroConstructor)
	TEnumAsByte<SlateCore_ESelectInfo>                 SelectionType;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_ListSessions.OnCheckBoxChecked
struct UUI_ListSessions_OnCheckBoxChecked_Params
{
	bool                                               InNewState;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_ListSessions.OnAutoFavoriteChecked
struct UUI_ListSessions_OnAutoFavoriteChecked_Params
{
	bool                                               InNewState;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_MainMenu.TotalConversionSelected
struct UUI_MainMenu_TotalConversionSelected_Params
{
	class UWidget*                                     theWidget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_MainMenu.HandleDLCInstalledEvent
struct UUI_MainMenu_HandleDLCInstalledEvent_Params
{
};

// Function ShooterGame.UI_MapMarkersEntry.OnTextCommitted
struct UUI_MapMarkersEntry_OnTextCommitted_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<SlateCore_ETextCommit>                 CommitMethod;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_MapMarkersEntry.OnTextChanged
struct UUI_MapMarkersEntry_OnTextChanged_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.UI_MapMarkersEntry.OnColorSliderValueChanged
struct UUI_MapMarkersEntry_OnColorSliderValueChanged_Params
{
	float                                              SliderValue;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_MapMarkersEntry.MarkerButtonSelected
struct UUI_MapMarkersEntry_MarkerButtonSelected_Params
{
	class UWidget*                                     theWidget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_MultiUse.ClickedEntry
struct UUI_MultiUse_ClickedEntry_Params
{
	class UWidget*                                     clickedWidget;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_ProceduralSettings.OnTextCommitted
struct UUI_ProceduralSettings_OnTextCommitted_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<SlateCore_ETextCommit>                 CommitMethod;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_ProceduralSettings.OnPresetSelectionChanged
struct UUI_ProceduralSettings_OnPresetSelectionChanged_Params
{
	struct FString                                     SelectedItem;                                              // (Parm, ZeroConstructor)
	TEnumAsByte<SlateCore_ESelectInfo>                 SelectionType;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_SavePainting.HandleFilterStringTextCommitted
struct UUI_SavePainting_HandleFilterStringTextCommitted_Params
{
	struct FText                                       NewText;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<SlateCore_ETextCommit>                 CommitMethod;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_SavePainting.HandleFilterStringTextChanged
struct UUI_SavePainting_HandleFilterStringTextChanged_Params
{
	struct FText                                       NewText;                                                   // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.UI_Subtitles.SetSubtitleFromText
struct UUI_Subtitles_SetSubtitleFromText_Params
{
	struct FText                                       SubtitleTextLine;                                          // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.UI_Subtitles.SetSubtitleFromStringWithDurationAndIcon
struct UUI_Subtitles_SetSubtitleFromStringWithDurationAndIcon_Params
{
	struct FString                                     SubtitleTextLine;                                          // (Parm, ZeroConstructor)
	float                                              AutoHideAfterSeconds;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInterface*                          DialogueIcon;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_Subtitles.SetSubtitleFromString
struct UUI_Subtitles_SetSubtitleFromString_Params
{
	struct FString                                     SubtitleTextLine;                                          // (Parm, ZeroConstructor)
};

// Function ShooterGame.UI_Subtitles.SetSubtitleFromSoundWave
struct UUI_Subtitles_SetSubtitleFromSoundWave_Params
{
	class USoundWave*                                  SoundWave;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              AutoHideAfterSeconds;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInterface*                          DialogueIcon;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_Subtitles.SetSubtitleFromSoundCue
struct UUI_Subtitles_SetSubtitleFromSoundCue_Params
{
	class USoundCue*                                   SoundCueWithSubtitles;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              AutoHideAfterSeconds;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInterface*                          DialogueIcon;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_Subtitles.SetIconMaterialParams
struct UUI_Subtitles_SetIconMaterialParams_Params
{
	TArray<struct FNameScalarPair>                     scalarParams;                                              // (Parm, ZeroConstructor)
	TArray<struct FNameColorPair>                      colorParams;                                               // (Parm, ZeroConstructor)
	class UTexture2D*                                  CurrentAT;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_Subtitles.ProcessDynamicMaterialForDialogueIconDelegate__DelegateSignature
struct UUI_Subtitles_ProcessDynamicMaterialForDialogueIconDelegate__DelegateSignature_Params
{
	struct FName                                       MaterialFName;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*                    LoadedMaterial;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_Subtitles.OnShowSubtitles
struct UUI_Subtitles_OnShowSubtitles_Params
{
};

// Function ShooterGame.UI_Subtitles.OnHideSubtitles
struct UUI_Subtitles_OnHideSubtitles_Params
{
};

// Function ShooterGame.UI_Subtitles.IsIconVisible
struct UUI_Subtitles_IsIconVisible_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_Subtitles.IsCurrentIconEqualToGivenIcon
struct UUI_Subtitles_IsCurrentIconEqualToGivenIcon_Params
{
	class UMaterialInterface*                          DialogueIcon;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_Subtitles.HideSubtitles
struct UUI_Subtitles_HideSubtitles_Params
{
};

// Function ShooterGame.UI_Subtitles.ForceSetSubtitlesManualTime
struct UUI_Subtitles_ForceSetSubtitlesManualTime_Params
{
	float                                              ManualGlobalStartTime;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_TextEntry.OnTextCommitted
struct UUI_TextEntry_OnTextCommitted_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<SlateCore_ETextCommit>                 CommitMethod;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_TextEntry.OnTextChanged
struct UUI_TextEntry_OnTextChanged_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.UI_TribeWarEntry.OnTextCommitted
struct UUI_TribeWarEntry_OnTextCommitted_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<SlateCore_ETextCommit>                 CommitMethod;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.UI_TribeWarEntry.OnTextChanged
struct UUI_TribeWarEntry_OnTextChanged_Params
{
	struct FText                                       Text;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.PrimalWorldBuffCustomImplement.UpdateBuffCustomPersistantData
struct UPrimalWorldBuffCustomImplement_UpdateBuffCustomPersistantData_Params
{
};

// Function ShooterGame.PrimalWorldBuffCustomImplement.Tick
struct UPrimalWorldBuffCustomImplement_Tick_Params
{
	float                                              DeltaSeconds;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalWorldBuffCustomImplement.PreDeconstruction
struct UPrimalWorldBuffCustomImplement_PreDeconstruction_Params
{
};

// Function ShooterGame.PrimalWorldBuffCustomImplement.PostConstruction
struct UPrimalWorldBuffCustomImplement_PostConstruction_Params
{
};

// Function ShooterGame.PrimalWorldBuffCustomImplement.GetWorld
struct UPrimalWorldBuffCustomImplement_GetWorld_Params
{
	class UWorld*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalWorldBuffCustomImplement.GetOwner
struct UPrimalWorldBuffCustomImplement_GetOwner_Params
{
	class UObject*                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalWorldBuffCustomImplement.BuffTimerRefreshed
struct UPrimalWorldBuffCustomImplement_BuffTimerRefreshed_Params
{
};

// Function ShooterGame.PrimalWorldBuffCustomImplement.BuffStackIncreased
struct UPrimalWorldBuffCustomImplement_BuffStackIncreased_Params
{
	int                                                newStackCount;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalWorldBuffCustomImplement.BuffStackDecrease
struct UPrimalWorldBuffCustomImplement_BuffStackDecrease_Params
{
	int                                                newStackCount;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalWorldBuffData.RemoveWorldBuff
struct UPrimalWorldBuffData_RemoveWorldBuff_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       WorldBuffIdentifier;                                       // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalWorldBuffData.GetWorldBuffSet
struct UPrimalWorldBuffData_GetWorldBuffSet_Params
{
	struct FName                                       WorldBuffSetName;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FWorldBuffDefinition>                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.PrimalWorldBuffData.GetWorldBuffDefinitionByName
struct UPrimalWorldBuffData_GetWorldBuffDefinitionByName_Params
{
	struct FName                                       WorldBuffIdentifier;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FWorldBuffDefinition                        outWorldBuffDefinition;                                    // (Parm, OutParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalWorldBuffData.GetWorldBuffData
struct UPrimalWorldBuffData_GetWorldBuffData_Params
{
	class UPrimalWorldBuffData*                        ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalWorldBuffData.CanActivateWorldBuff
struct UPrimalWorldBuffData_CanActivateWorldBuff_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       WorldBuffIdentifier;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FName>                               OutWorldBuffsToBeReplaced;                                 // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalWorldBuffData.AddWorldBuff
struct UPrimalWorldBuffData_AddWorldBuff_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       WorldBuffIdentifier;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                StacksToGive;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalWorldModifier.TrySublevelSwaps
struct APrimalWorldModifier_TrySublevelSwaps_Params
{
};

// Function ShooterGame.PrimalWorldModifier.TryStaticMeshActorReskin
struct APrimalWorldModifier_TryStaticMeshActorReskin_Params
{
	class AStaticMeshActor*                            ForStaticMeshActor;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSublevelOverrideGroup                      CurrentSublevelOverrideGroup;                              // (Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.PrimalWorldModifier.TryFoliageReskin
struct APrimalWorldModifier_TryFoliageReskin_Params
{
	class AInstancedFoliageActor*                      ForFoliageActor;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalWorldModifier.RescanForMapStaticMeshes
struct APrimalWorldModifier_RescanForMapStaticMeshes_Params
{
};

// Function ShooterGame.PrimalWorldModifier.RescanForFoliage
struct APrimalWorldModifier_RescanForFoliage_Params
{
};

// Function ShooterGame.PrimalWorldModifier.NotifyOnFoliageSkinned__DelegateSignature
struct APrimalWorldModifier_NotifyOnFoliageSkinned__DelegateSignature_Params
{
	class UHierarchicalInstancedStaticMeshComponent*   FoliageInstance;                                           // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalWorldModifier.IsAllowedOnCurrentMap
struct APrimalWorldModifier_IsAllowedOnCurrentMap_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalWorldModifier.HasPriority
struct APrimalWorldModifier_HasPriority_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalWorldModifier.GetCurrentSublevelOverrideGroup
struct APrimalWorldModifier_GetCurrentSublevelOverrideGroup_Params
{
	struct FSublevelOverrideGroup                      outSublevelOverrideGroup;                                  // (Parm, OutParm)
};

// Function ShooterGame.PrimalWorldModifier.DoRescanForSublevelLoaded
struct APrimalWorldModifier_DoRescanForSublevelLoaded_Params
{
};

// Function ShooterGame.PrimalWorldModifier.BPSkinFoliage
struct APrimalWorldModifier_BPSkinFoliage_Params
{
	class UHierarchicalInstancedStaticMeshComponent*   FoliageInstance;                                           // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalWorldModifier.BPPreFoliageScan
struct APrimalWorldModifier_BPPreFoliageScan_Params
{
};

// Function ShooterGame.PrimalWorldModifier.BPPostInitializationHasPriority
struct APrimalWorldModifier_BPPostInitializationHasPriority_Params
{
};

// Function ShooterGame.PrimalWorldModifier.BPPostFoliageScan
struct APrimalWorldModifier_BPPostFoliageScan_Params
{
};

// Function ShooterGame.PrimalWorldSettings.IsAllowedInLevelBounds
struct APrimalWorldSettings_IsAllowedInLevelBounds_Params
{
	struct FVector                                     AtLocat;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalWorldSettings.GetMissionMetaData
struct APrimalWorldSettings_GetMissionMetaData_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMissionMetaData                            Value;                                                     // (Parm, OutParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacterMovement.UpdateAnalogueInputModifier
struct UShooterCharacterMovement_UpdateAnalogueInputModifier_Params
{
};

// Function ShooterGame.ShooterCharacterMovement.SetCurrentAcceleration
struct UShooterCharacterMovement_SetCurrentAcceleration_Params
{
	struct FVector                                     NewAcceleration;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacterMovement.SetClimbingTarget
struct UShooterCharacterMovement_SetClimbingTarget_Params
{
	struct FVector                                     TargetPosition;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    TargetRotation;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacterMovement.IsWaterWalking
struct UShooterCharacterMovement_IsWaterWalking_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacterMovement.BPApplyVelocityBraking
struct UShooterCharacterMovement_BPApplyVelocityBraking_Params
{
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Friction;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              BrakingDeceleration;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     InOutVelocity;                                             // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacterMovement.BP_PhysicsRotation
struct UShooterCharacterMovement_BP_PhysicsRotation_Params
{
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacterMovement.BP_PerformMovement
struct UShooterCharacterMovement_BP_PerformMovement_Params
{
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCharacterMovement.BP_GetAnalogueInputModifier
struct UShooterCharacterMovement_BP_GetAnalogueInputModifier_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.WhatIsMyTarget
struct UShooterCheatManager_WhatIsMyTarget_Params
{
};

// Function ShooterGame.ShooterCheatManager.VisualizeWorldGeo
struct UShooterCheatManager_VisualizeWorldGeo_Params
{
};

// Function ShooterGame.ShooterCheatManager.VisualizeWorld
struct UShooterCheatManager_VisualizeWorld_Params
{
};

// Function ShooterGame.ShooterCheatManager.VisualizeClass
struct UShooterCheatManager_VisualizeClass_Params
{
	struct FString                                     ClassIn;                                                   // (Parm, ZeroConstructor)
	int                                                MaxTotal;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.VerifyTransferInventory
struct UShooterCheatManager_VerifyTransferInventory_Params
{
};

// Function ShooterGame.ShooterCheatManager.UnlockEngram
struct UShooterCheatManager_UnlockEngram_Params
{
	struct FString                                     ItemClassName;                                             // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.UnlockEmote
struct UShooterCheatManager_UnlockEmote_Params
{
	struct FString                                     EmoteName;                                                 // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.UnlockAllExplorerNotes
struct UShooterCheatManager_UnlockAllExplorerNotes_Params
{
};

// Function ShooterGame.ShooterCheatManager.UnlockAchievement
struct UShooterCheatManager_UnlockAchievement_Params
{
	struct FString                                     AchievementID;                                             // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.UnbanPlayer
struct UShooterCheatManager_UnbanPlayer_Params
{
	struct FString                                     PlayerSteamName;                                           // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.TribeStructureAudit
struct UShooterCheatManager_TribeStructureAudit_Params
{
	int                                                TribeTeamID;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.TribeMessage
struct UShooterCheatManager_TribeMessage_Params
{
	int                                                TribeTeamID;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     Message;                                                   // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.TribeDinoAudit
struct UShooterCheatManager_TribeDinoAudit_Params
{
	int                                                TribeTeamID;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.TransferImprints
struct UShooterCheatManager_TransferImprints_Params
{
	int                                                oldPlayerId;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                newPlayerId;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     NewImprinterName;                                          // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.TPName
struct UShooterCheatManager_TPName_Params
{
	struct FString                                     PlayerName;                                                // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.TPCoords
struct UShooterCheatManager_TPCoords_Params
{
	float                                              lat;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              lon;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Z;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.TP
struct UShooterCheatManager_TP_Params
{
	struct FString                                     LocationName;                                              // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.ToggleLowGravSpin
struct UShooterCheatManager_ToggleLowGravSpin_Params
{
};

// Function ShooterGame.ShooterCheatManager.ToggleLocation
struct UShooterCheatManager_ToggleLocation_Params
{
};

// Function ShooterGame.ShooterCheatManager.ToggleHud
struct UShooterCheatManager_ToggleHud_Params
{
};

// Function ShooterGame.ShooterCheatManager.ToggleGun
struct UShooterCheatManager_ToggleGun_Params
{
};

// Function ShooterGame.ShooterCheatManager.ToggleDamageNumbers
struct UShooterCheatManager_ToggleDamageNumbers_Params
{
};

// Function ShooterGame.ShooterCheatManager.ToggleDamageLogging
struct UShooterCheatManager_ToggleDamageLogging_Params
{
};

// Function ShooterGame.ShooterCheatManager.ToggleClawStepping
struct UShooterCheatManager_ToggleClawStepping_Params
{
};

// Function ShooterGame.ShooterCheatManager.TestSteamRefreshItems
struct UShooterCheatManager_TestSteamRefreshItems_Params
{
};

// Function ShooterGame.ShooterCheatManager.TeleportToPlayerName
struct UShooterCheatManager_TeleportToPlayerName_Params
{
	struct FString                                     PlayerName;                                                // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.TeleportToPlayer
struct UShooterCheatManager_TeleportToPlayer_Params
{
	int64_t                                            PlayerId;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.TeleportToActorLocation
struct UShooterCheatManager_TeleportToActorLocation_Params
{
	struct FString                                     ActorName;                                                 // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.TeleportToActiveHorde
struct UShooterCheatManager_TeleportToActiveHorde_Params
{
	int                                                EventIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.TeleportPlayerNameToMe
struct UShooterCheatManager_TeleportPlayerNameToMe_Params
{
	struct FString                                     PlayerName;                                                // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.TeleportPlayerIDToMe
struct UShooterCheatManager_TeleportPlayerIDToMe_Params
{
	int64_t                                            PlayerId;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.TakeTribe
struct UShooterCheatManager_TakeTribe_Params
{
	int                                                TribeTeamID;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.TakeAllStructure
struct UShooterCheatManager_TakeAllStructure_Params
{
};

// Function ShooterGame.ShooterCheatManager.TakeAllDino
struct UShooterCheatManager_TakeAllDino_Params
{
};

// Function ShooterGame.ShooterCheatManager.SummonTamed
struct UShooterCheatManager_SummonTamed_Params
{
	struct FString                                     ClassName;                                                 // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.Suicide
struct UShooterCheatManager_Suicide_Params
{
};

// Function ShooterGame.ShooterCheatManager.StartSaveBackup
struct UShooterCheatManager_StartSaveBackup_Params
{
};

// Function ShooterGame.ShooterCheatManager.StartNearestHorde
struct UShooterCheatManager_StartNearestHorde_Params
{
	struct FName                                       HordeType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                DifficultyLevel;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.StartMissionWithMetaData
struct UShooterCheatManager_StartMissionWithMetaData_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.StartMission
struct UShooterCheatManager_StartMission_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SPI
struct UShooterCheatManager_SPI_Params
{
	float                                              X;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Y;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Z;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Yaw;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Pitch;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SpawnSetupDino
struct UShooterCheatManager_SpawnSetupDino_Params
{
	struct FString                                     DinoBlueprintPath;                                         // (Parm, ZeroConstructor)
	struct FString                                     SaddleBlueprintPath;                                       // (Parm, ZeroConstructor)
	float                                              SaddleQuality;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                DinoLevel;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     DinoStats;                                                 // (Parm, ZeroConstructor)
	float                                              spawnDistance;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              YOffset;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ZOffset;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SpawnExactDino
struct UShooterCheatManager_SpawnExactDino_Params
{
	struct FString                                     DinoBlueprintPath;                                         // (Parm, ZeroConstructor)
	struct FString                                     SaddleBlueprintPath;                                       // (Parm, ZeroConstructor)
	float                                              SaddleQuality;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                BaseLevel;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ExtraLevels;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     BaseStats;                                                 // (Parm, ZeroConstructor)
	struct FString                                     AddedStats;                                                // (Parm, ZeroConstructor)
	struct FString                                     DinoName;                                                  // (Parm, ZeroConstructor)
	int8_t                                             Cloned;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int8_t                                             Neutered;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     TamedOn;                                                   // (Parm, ZeroConstructor)
	struct FString                                     UploadedFrom;                                              // (Parm, ZeroConstructor)
	struct FString                                     ImprinterName;                                             // (Parm, ZeroConstructor)
	int                                                ImprinterPlayerID;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ImprintQuality;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     Colors;                                                    // (Parm, ZeroConstructor)
	int64_t                                            DinoID;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int64_t                                            Exp;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              spawnDistance;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              YOffset;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ZOffset;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SpawnDino
struct UShooterCheatManager_SpawnDino_Params
{
	struct FString                                     blueprintPath;                                             // (Parm, ZeroConstructor)
	float                                              spawnDistance;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              spawnYOffset;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ZOffset;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                DinoLevel;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SpawnActorTamed
struct UShooterCheatManager_SpawnActorTamed_Params
{
	struct FString                                     blueprintPath;                                             // (Parm, ZeroConstructor)
	float                                              spawnDistance;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              spawnYOffset;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ZOffset;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SpawnActorSpreadTamed
struct UShooterCheatManager_SpawnActorSpreadTamed_Params
{
	struct FString                                     blueprintPath;                                             // (Parm, ZeroConstructor)
	float                                              spawnDistance;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              spawnYOffset;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ZOffset;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                NumberActors;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              SpreadAmount;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SpawnActorSpread
struct UShooterCheatManager_SpawnActorSpread_Params
{
	struct FString                                     blueprintPath;                                             // (Parm, ZeroConstructor)
	float                                              spawnDistance;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              spawnYOffset;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ZOffset;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                NumberActors;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              SpreadAmount;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SpawnActor
struct UShooterCheatManager_SpawnActor_Params
{
	struct FString                                     blueprintPath;                                             // (Parm, ZeroConstructor)
	float                                              spawnDistance;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              spawnYOffset;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ZOffset;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.ShowTutorial
struct UShooterCheatManager_ShowTutorial_Params
{
	int                                                TutorialIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceDisplay;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.ShowMessageOfTheDay
struct UShooterCheatManager_ShowMessageOfTheDay_Params
{
};

// Function ShooterGame.ShooterCheatManager.ShowInGameMenu
struct UShooterCheatManager_ShowInGameMenu_Params
{
};

// Function ShooterGame.ShooterCheatManager.ShowAvailableMissionTags
struct UShooterCheatManager_ShowAvailableMissionTags_Params
{
};

// Function ShooterGame.ShooterCheatManager.ShowActiveMissions
struct UShooterCheatManager_ShowActiveMissions_Params
{
};

// Function ShooterGame.ShooterCheatManager.SetTimeOfDay
struct UShooterCheatManager_SetTimeOfDay_Params
{
	struct FString                                     timeString;                                                // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.SetTargetPlayerColorVal
struct UShooterCheatManager_SetTargetPlayerColorVal_Params
{
	int                                                ColorValIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ColorVal;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SetTargetPlayerBodyVal
struct UShooterCheatManager_SetTargetPlayerBodyVal_Params
{
	int                                                BodyValIndex;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              BodyVal;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SetTargetDinoColor
struct UShooterCheatManager_SetTargetDinoColor_Params
{
	int                                                ColorRegion;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ColorID;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SetTamingEffectivenessModifier
struct UShooterCheatManager_SetTamingEffectivenessModifier_Params
{
	float                                              tameEff;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SetStatOnTarget
struct UShooterCheatManager_SetStatOnTarget_Params
{
	struct FName                                       StatName;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Value;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SetShowAllPlayers
struct UShooterCheatManager_SetShowAllPlayers_Params
{
	bool                                               bEnable;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SetPlayerPos
struct UShooterCheatManager_SetPlayerPos_Params
{
	float                                              X;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Y;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Z;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SetPlayerLevel
struct UShooterCheatManager_SetPlayerLevel_Params
{
	int64_t                                            PlayerId;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int16_t                                            Level;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SetPerfCheck
struct UShooterCheatManager_SetPerfCheck_Params
{
	int                                                PerfCheckLocation;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SetNetworkTime
struct UShooterCheatManager_SetNetworkTime_Params
{
	float                                              NewTime;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SetMyTargetSleeping
struct UShooterCheatManager_SetMyTargetSleeping_Params
{
	bool                                               bIsSleeping;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SetMessageOfTheDay
struct UShooterCheatManager_SetMessageOfTheDay_Params
{
	struct FString                                     Message;                                                   // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.SetMaterialParamaterCollectionByNameAndFloatValue
struct UShooterCheatManager_SetMaterialParamaterCollectionByNameAndFloatValue_Params
{
	struct FName                                       ParamaterName;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ParamaterValue;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SetInstantHarvest
struct UShooterCheatManager_SetInstantHarvest_Params
{
	bool                                               bEnable;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SetInfiniteStats
struct UShooterCheatManager_SetInfiniteStats_Params
{
	bool                                               bInfinite;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SetImprintQuality
struct UShooterCheatManager_SetImprintQuality_Params
{
	float                                              ImprintQuality;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SetImprintedPlayer
struct UShooterCheatManager_SetImprintedPlayer_Params
{
	struct FString                                     NewImprinterName;                                          // (Parm, ZeroConstructor)
	int                                                PlayerId;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SetHeadHairstyle
struct UShooterCheatManager_SetHeadHairstyle_Params
{
	int                                                hairStyleIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SetHeadHairPercent
struct UShooterCheatManager_SetHeadHairPercent_Params
{
	float                                              thePercent;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SetGraphicsQuality
struct UShooterCheatManager_SetGraphicsQuality_Params
{
	int                                                val;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SetGodMode
struct UShooterCheatManager_SetGodMode_Params
{
	bool                                               bEnable;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SetGlobalPause
struct UShooterCheatManager_SetGlobalPause_Params
{
	bool                                               bIsPaused;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SetFacialHairstyle
struct UShooterCheatManager_SetFacialHairstyle_Params
{
	int                                                hairStyleIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SetFacialHairPercent
struct UShooterCheatManager_SetFacialHairPercent_Params
{
	float                                              thePercent;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SetDifficultyValue
struct UShooterCheatManager_SetDifficultyValue_Params
{
	float                                              NewTime;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SetDebugMeleeAttacks
struct UShooterCheatManager_SetDebugMeleeAttacks_Params
{
	bool                                               bDebugMelee;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DrawDuration;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SetDay
struct UShooterCheatManager_SetDay_Params
{
	int                                                day;                                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SetChatLogMaxAgeInDays
struct UShooterCheatManager_SetChatLogMaxAgeInDays_Params
{
	int                                                NumDays;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SetBabyAgeAOE
struct UShooterCheatManager_SetBabyAgeAOE_Params
{
	float                                              AgeValue;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SetBabyAge
struct UShooterCheatManager_SetBabyAge_Params
{
	float                                              AgeValue;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SetActiveMissionDebugFlags
struct UShooterCheatManager_SetActiveMissionDebugFlags_Params
{
	int                                                DebugFlags;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.ServerChatToPlayer
struct UShooterCheatManager_ServerChatToPlayer_Params
{
	struct FString                                     PlayerName;                                                // (Parm, ZeroConstructor)
	struct FString                                     MessageText;                                               // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.ServerChatTo
struct UShooterCheatManager_ServerChatTo_Params
{
	struct FString                                     SteamID;                                                   // (Parm, ZeroConstructor)
	struct FString                                     MessageText;                                               // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.ServerChat
struct UShooterCheatManager_ServerChat_Params
{
	struct FString                                     MessageText;                                               // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.SendDataDogMetric
struct UShooterCheatManager_SendDataDogMetric_Params
{
	struct FString                                     Message;                                                   // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.SDFRide
struct UShooterCheatManager_SDFRide_Params
{
	struct FName                                       DinoBlueprintPath;                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	int                                                DinoLevel;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.SDF
struct UShooterCheatManager_SDF_Params
{
	struct FName                                       DinoBlueprintPath;                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               bIsTamed;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                DinoLevel;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.ScriptCommand
struct UShooterCheatManager_ScriptCommand_Params
{
	struct FString                                     commandString;                                             // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.SaveWorldDisableTransfer
struct UShooterCheatManager_SaveWorldDisableTransfer_Params
{
};

// Function ShooterGame.ShooterCheatManager.SaveWorld
struct UShooterCheatManager_SaveWorld_Params
{
};

// Function ShooterGame.ShooterCheatManager.SAP
struct UShooterCheatManager_SAP_Params
{
};

// Function ShooterGame.ShooterCheatManager.RespawnPlayer
struct UShooterCheatManager_RespawnPlayer_Params
{
	bool                                               KeepGender;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.ResetLiveTuningOverloads
struct UShooterCheatManager_ResetLiveTuningOverloads_Params
{
};

// Function ShooterGame.ShooterCheatManager.RequestUpdateActiveMissionTags
struct UShooterCheatManager_RequestUpdateActiveMissionTags_Params
{
};

// Function ShooterGame.ShooterCheatManager.ReportSpawnManagers
struct UShooterCheatManager_ReportSpawnManagers_Params
{
};

// Function ShooterGame.ShooterCheatManager.ReportLeastSpawnManagers
struct UShooterCheatManager_ReportLeastSpawnManagers_Params
{
};

// Function ShooterGame.ShooterCheatManager.RepairArea
struct UShooterCheatManager_RepairArea_Params
{
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.RenameTribeID
struct UShooterCheatManager_RenameTribeID_Params
{
	int                                                TribeId;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     NewName;                                                   // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.RenameTribe
struct UShooterCheatManager_RenameTribe_Params
{
	struct FString                                     TribeName;                                                 // (Parm, ZeroConstructor)
	struct FString                                     NewName;                                                   // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.RenamePlayerId
struct UShooterCheatManager_RenamePlayerId_Params
{
	int                                                PlayerId;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     NewName;                                                   // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.RenamePlayer
struct UShooterCheatManager_RenamePlayer_Params
{
	struct FString                                     PlayerName;                                                // (Parm, ZeroConstructor)
	struct FString                                     NewName;                                                   // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.RemoveWorldBuff
struct UShooterCheatManager_RemoveWorldBuff_Params
{
	struct FString                                     WorldBuffIdentifier;                                       // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.RemoveTribeAdmin
struct UShooterCheatManager_RemoveTribeAdmin_Params
{
};

// Function ShooterGame.ShooterCheatManager.RemoveAllWorldBuffs
struct UShooterCheatManager_RemoveAllWorldBuffs_Params
{
};

// Function ShooterGame.ShooterCheatManager.RegrowFoliage
struct UShooterCheatManager_RegrowFoliage_Params
{
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.RefillStats
struct UShooterCheatManager_RefillStats_Params
{
};

// Function ShooterGame.ShooterCheatManager.ReassertColorization
struct UShooterCheatManager_ReassertColorization_Params
{
};

// Function ShooterGame.ShooterCheatManager.RainDinos
struct UShooterCheatManager_RainDinos_Params
{
	int                                                NumberActors;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              SpreadAmount;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ZOffset;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.RainDanger
struct UShooterCheatManager_RainDanger_Params
{
	int                                                NumberActors;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              SpreadAmount;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ZOffset;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.RainCritters
struct UShooterCheatManager_RainCritters_Params
{
	int                                                NumberActors;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              SpreadAmount;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ZOffset;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.psc
struct UShooterCheatManager_psc_Params
{
	struct FString                                     Command;                                                   // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.PrintActorLocation
struct UShooterCheatManager_PrintActorLocation_Params
{
	struct FString                                     ActorName;                                                 // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.PlayerCommand
struct UShooterCheatManager_PlayerCommand_Params
{
	struct FString                                     TheCommand;                                                // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.OpenMap
struct UShooterCheatManager_OpenMap_Params
{
	struct FString                                     MapName;                                                   // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.OnToggleInGameMenu
struct UShooterCheatManager_OnToggleInGameMenu_Params
{
};

// Function ShooterGame.ShooterCheatManager.NextPerfCheck
struct UShooterCheatManager_NextPerfCheck_Params
{
};

// Function ShooterGame.ShooterCheatManager.MoveTargetTo
struct UShooterCheatManager_MoveTargetTo_Params
{
	float                                              X;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Y;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Z;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.Mission
struct UShooterCheatManager_Mission_Params
{
	struct FName                                       CheatName;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Value;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.MaxAscend
struct UShooterCheatManager_MaxAscend_Params
{
	int                                                PlayerId;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.MakeTribeFounder
struct UShooterCheatManager_MakeTribeFounder_Params
{
};

// Function ShooterGame.ShooterCheatManager.MakeTribeAdmin
struct UShooterCheatManager_MakeTribeAdmin_Params
{
};

// Function ShooterGame.ShooterCheatManager.LvlUp
struct UShooterCheatManager_LvlUp_Params
{
	int64_t                                            PlayerId;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int16_t                                            Level;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.LMA
struct UShooterCheatManager_LMA_Params
{
};

// Function ShooterGame.ShooterCheatManager.ListPlayers
struct UShooterCheatManager_ListPlayers_Params
{
};

// Function ShooterGame.ShooterCheatManager.ListMyTargetBuffs
struct UShooterCheatManager_ListMyTargetBuffs_Params
{
};

// Function ShooterGame.ShooterCheatManager.ListMyBuffs
struct UShooterCheatManager_ListMyBuffs_Params
{
};

// Function ShooterGame.ShooterCheatManager.ListDinos
struct UShooterCheatManager_ListDinos_Params
{
};

// Function ShooterGame.ShooterCheatManager.ListActiveHordeEvents
struct UShooterCheatManager_ListActiveHordeEvents_Params
{
};

// Function ShooterGame.ShooterCheatManager.LevelUpTarget
struct UShooterCheatManager_LevelUpTarget_Params
{
	struct FName                                       StatName;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                NumLevels;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.LevelUpAOE
struct UShooterCheatManager_LevelUpAOE_Params
{
	struct FName                                       StatName;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                NumLevels;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.LevelUp
struct UShooterCheatManager_LevelUp_Params
{
	struct FName                                       StatName;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                NumLevels;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.LessThan
struct UShooterCheatManager_LessThan_Params
{
	int                                                TribeTeamID;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                Connections;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               includeContainers;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.LeaveMission
struct UShooterCheatManager_LeaveMission_Params
{
};

// Function ShooterGame.ShooterCheatManager.LeaveMeAlone
struct UShooterCheatManager_LeaveMeAlone_Params
{
};

// Function ShooterGame.ShooterCheatManager.KillPlayer
struct UShooterCheatManager_KillPlayer_Params
{
	int64_t                                            PlayerId;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.KillAOETribe
struct UShooterCheatManager_KillAOETribe_Params
{
	struct FName                                       Category;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                TribeId;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.KillAOE
struct UShooterCheatManager_KillAOE_Params
{
	struct FName                                       Category;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.Kill
struct UShooterCheatManager_Kill_Params
{
};

// Function ShooterGame.ShooterCheatManager.KickPlayer
struct UShooterCheatManager_KickPlayer_Params
{
	struct FString                                     PlayerSteamName;                                           // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.JoinTribe
struct UShooterCheatManager_JoinTribe_Params
{
	int64_t                                            PlayerId;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                TribeTeamID;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.IsUndermesh
struct UShooterCheatManager_IsUndermesh_Params
{
	float                                              DebugDrawSeconds;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.InfiniteWeight
struct UShooterCheatManager_InfiniteWeight_Params
{
};

// Function ShooterGame.ShooterCheatManager.InfiniteStats
struct UShooterCheatManager_InfiniteStats_Params
{
};

// Function ShooterGame.ShooterCheatManager.HurtMyTarget
struct UShooterCheatManager_HurtMyTarget_Params
{
	int                                                HowMuch;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.HurtMyAOE
struct UShooterCheatManager_HurtMyAOE_Params
{
	int                                                HowMuch;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.HiWarp
struct UShooterCheatManager_HiWarp_Params
{
	struct FString                                     ClassName;                                                 // (Parm, ZeroConstructor)
	int                                                index;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.HideTutorial
struct UShooterCheatManager_HideTutorial_Params
{
	int                                                TutorialIndex;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.HibernationReport
struct UShooterCheatManager_HibernationReport_Params
{
	struct FString                                     ClassName;                                                 // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.HatchEgg
struct UShooterCheatManager_HatchEgg_Params
{
};

// Function ShooterGame.ShooterCheatManager.GoToFirstMutagenDrop
struct UShooterCheatManager_GoToFirstMutagenDrop_Params
{
};

// Function ShooterGame.ShooterCheatManager.GMSummon
struct UShooterCheatManager_GMSummon_Params
{
	struct FString                                     ClassName;                                                 // (Parm, ZeroConstructor)
	int                                                Level;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.GMComp
struct UShooterCheatManager_GMComp_Params
{
	int                                                Level;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.GMBuff
struct UShooterCheatManager_GMBuff_Params
{
};

// Function ShooterGame.ShooterCheatManager.GlobalObjectCount
struct UShooterCheatManager_GlobalObjectCount_Params
{
};

// Function ShooterGame.ShooterCheatManager.GiveWeaponSet
struct UShooterCheatManager_GiveWeaponSet_Params
{
	struct FName                                       Tier;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       Quality;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.GiveToMeAOE
struct UShooterCheatManager_GiveToMeAOE_Params
{
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.GiveToMe
struct UShooterCheatManager_GiveToMe_Params
{
};

// Function ShooterGame.ShooterCheatManager.GiveTekEngramsTo
struct UShooterCheatManager_GiveTekEngramsTo_Params
{
	int64_t                                            PlayerId;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       blueprintPath;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.GiveResources
struct UShooterCheatManager_GiveResources_Params
{
};

// Function ShooterGame.ShooterCheatManager.GiveItemToPlayer
struct UShooterCheatManager_GiveItemToPlayer_Params
{
	int                                                PlayerId;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     blueprintPath;                                             // (Parm, ZeroConstructor)
	int                                                quantityOverride;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              qualityOverride;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceBlueprint;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.GiveItemSkins
struct UShooterCheatManager_GiveItemSkins_Params
{
	struct FString                                     equipmentType;                                             // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.GiveItemSet
struct UShooterCheatManager_GiveItemSet_Params
{
	struct FName                                       Tier;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.GiveItemNumToPlayer
struct UShooterCheatManager_GiveItemNumToPlayer_Params
{
	int                                                PlayerId;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                MasterIndexNum;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                quantityOverride;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              qualityOverride;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceBlueprint;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.GiveItemNum
struct UShooterCheatManager_GiveItemNum_Params
{
	int                                                MasterIndexNum;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                quantityOverride;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              qualityOverride;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceBlueprint;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.GiveItem
struct UShooterCheatManager_GiveItem_Params
{
	struct FString                                     blueprintPath;                                             // (Parm, ZeroConstructor)
	int                                                quantityOverride;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              qualityOverride;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceBlueprint;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.GiveInfiniteStatsToTarget
struct UShooterCheatManager_GiveInfiniteStatsToTarget_Params
{
};

// Function ShooterGame.ShooterCheatManager.GiveExpToTarget
struct UShooterCheatManager_GiveExpToTarget_Params
{
	float                                              HowMuch;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               fromTribeShare;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bPreventSharingWithTribe;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.GiveExpToPlayer
struct UShooterCheatManager_GiveExpToPlayer_Params
{
	int64_t                                            PlayerId;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              HowMuch;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               fromTribeShare;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bPreventSharingWithTribe;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.GiveExplorerNote
struct UShooterCheatManager_GiveExplorerNote_Params
{
	int                                                NoteIndex;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.GiveEngramsTekOnly
struct UShooterCheatManager_GiveEngramsTekOnly_Params
{
};

// Function ShooterGame.ShooterCheatManager.GiveEngrams
struct UShooterCheatManager_GiveEngrams_Params
{
};

// Function ShooterGame.ShooterCheatManager.GiveDinoSet
struct UShooterCheatManager_GiveDinoSet_Params
{
	struct FName                                       Tier;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                NumDinos;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.GiveCreativeModeToTarget
struct UShooterCheatManager_GiveCreativeModeToTarget_Params
{
};

// Function ShooterGame.ShooterCheatManager.GiveCreativeModeToPlayer
struct UShooterCheatManager_GiveCreativeModeToPlayer_Params
{
	int64_t                                            PlayerId;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.GiveCreativeMode
struct UShooterCheatManager_GiveCreativeMode_Params
{
};

// Function ShooterGame.ShooterCheatManager.GiveArmorSet
struct UShooterCheatManager_GiveArmorSet_Params
{
	struct FName                                       Tier;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       Quality;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.GiveAllStructure
struct UShooterCheatManager_GiveAllStructure_Params
{
};

// Function ShooterGame.ShooterCheatManager.GiveAllExplorerNotes
struct UShooterCheatManager_GiveAllExplorerNotes_Params
{
};

// Function ShooterGame.ShooterCheatManager.GFI
struct UShooterCheatManager_GFI_Params
{
	struct FName                                       blueprintPath;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	int                                                quantityOverride;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              qualityOverride;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceBlueprint;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.GetTribeIdPlayerList
struct UShooterCheatManager_GetTribeIdPlayerList_Params
{
	int                                                TribeId;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.GetSteamIDForPlayerID
struct UShooterCheatManager_GetSteamIDForPlayerID_Params
{
	int                                                PlayerId;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.GetPlayerIDForSteamID
struct UShooterCheatManager_GetPlayerIDForSteamID_Params
{
	int                                                SteamID;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.GetGameLog
struct UShooterCheatManager_GetGameLog_Params
{
};

// Function ShooterGame.ShooterCheatManager.GetEgg
struct UShooterCheatManager_GetEgg_Params
{
	int                                                NumMutationsToAdd;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.GetChat
struct UShooterCheatManager_GetChat_Params
{
};

// Function ShooterGame.ShooterCheatManager.GCMT
struct UShooterCheatManager_GCMT_Params
{
};

// Function ShooterGame.ShooterCheatManager.GCMP
struct UShooterCheatManager_GCMP_Params
{
	int64_t                                            PlayerId;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.GCM
struct UShooterCheatManager_GCM_Params
{
};

// Function ShooterGame.ShooterCheatManager.GameCommand
struct UShooterCheatManager_GameCommand_Params
{
	struct FString                                     TheCommand;                                                // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.ForceUpdateDynamicConfig
struct UShooterCheatManager_ForceUpdateDynamicConfig_Params
{
};

// Function ShooterGame.ShooterCheatManager.ForceTribes
struct UShooterCheatManager_ForceTribes_Params
{
	struct FString                                     PlayerName1;                                               // (Parm, ZeroConstructor)
	struct FString                                     PlayerName2;                                               // (Parm, ZeroConstructor)
	struct FString                                     NewTribeName;                                              // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.ForceTameAOE
struct UShooterCheatManager_ForceTameAOE_Params
{
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.ForceTame
struct UShooterCheatManager_ForceTame_Params
{
};

// Function ShooterGame.ShooterCheatManager.ForceStartMission
struct UShooterCheatManager_ForceStartMission_Params
{
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.ForceReturnIsXboxOneBuildOnPC
struct UShooterCheatManager_ForceReturnIsXboxOneBuildOnPC_Params
{
	bool                                               ReturnValue;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.ForceReturnIsPS4BuildOnPC
struct UShooterCheatManager_ForceReturnIsPS4BuildOnPC_Params
{
	bool                                               ReturnValue;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.ForcePoop
struct UShooterCheatManager_ForcePoop_Params
{
};

// Function ShooterGame.ShooterCheatManager.ForcePlayerToJoinTribeId
struct UShooterCheatManager_ForcePlayerToJoinTribeId_Params
{
	int64_t                                            PlayerId;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                TribeTeamID;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.ForcePlayerToJoinTribe
struct UShooterCheatManager_ForcePlayerToJoinTribe_Params
{
	int64_t                                            PlayerId;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     TribeName;                                                 // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.ForcePlayerToJoinTargetTribe
struct UShooterCheatManager_ForcePlayerToJoinTargetTribe_Params
{
	int64_t                                            PlayerId;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.ForceMutagenSpawn
struct UShooterCheatManager_ForceMutagenSpawn_Params
{
};

// Function ShooterGame.ShooterCheatManager.ForceJoinTribe
struct UShooterCheatManager_ForceJoinTribe_Params
{
};

// Function ShooterGame.ShooterCheatManager.ForceGiveBuff
struct UShooterCheatManager_ForceGiveBuff_Params
{
	struct FName                                       BuffBlueprintPath;                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               bEnable;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.ForceEnableMeshCheckingOnMe
struct UShooterCheatManager_ForceEnableMeshCheckingOnMe_Params
{
	bool                                               bEnableChecking;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.ForceCompleteActiveMission
struct UShooterCheatManager_ForceCompleteActiveMission_Params
{
	struct FString                                     MissionStateSimValues;                                     // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.ForceCheckInMesh
struct UShooterCheatManager_ForceCheckInMesh_Params
{
};

// Function ShooterGame.ShooterCheatManager.FindMutagenDrops
struct UShooterCheatManager_FindMutagenDrops_Params
{
};

// Function ShooterGame.ShooterCheatManager.EnemyInVisible
struct UShooterCheatManager_EnemyInVisible_Params
{
	bool                                               Invisible;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.EnableSpectator
struct UShooterCheatManager_EnableSpectator_Params
{
};

// Function ShooterGame.ShooterCheatManager.EnableCheats
struct UShooterCheatManager_EnableCheats_Params
{
	struct FString                                     pass;                                                      // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.EnableAllMating
struct UShooterCheatManager_EnableAllMating_Params
{
};

// Function ShooterGame.ShooterCheatManager.DupeLastItem
struct UShooterCheatManager_DupeLastItem_Params
{
};

// Function ShooterGame.ShooterCheatManager.DumpFallbackSeeds
struct UShooterCheatManager_DumpFallbackSeeds_Params
{
};

// Function ShooterGame.ShooterCheatManager.DumpDinoStats
struct UShooterCheatManager_DumpDinoStats_Params
{
};

// Function ShooterGame.ShooterCheatManager.DumpAssetProperties
struct UShooterCheatManager_DumpAssetProperties_Params
{
	struct FString                                     Asset;                                                     // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.DrawDebugBoxForVolumes
struct UShooterCheatManager_DrawDebugBoxForVolumes_Params
{
	float                                              Duration;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                VolumeClassIndex;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDebugAllVolumeClasses;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDrawSolidBox;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              LineThickness;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.DoTestingThing
struct UShooterCheatManager_DoTestingThing_Params
{
};

// Function ShooterGame.ShooterCheatManager.DoTame
struct UShooterCheatManager_DoTame_Params
{
};

// Function ShooterGame.ShooterCheatManager.DoRestartLevel
struct UShooterCheatManager_DoRestartLevel_Params
{
};

// Function ShooterGame.ShooterCheatManager.DoHang
struct UShooterCheatManager_DoHang_Params
{
};

// Function ShooterGame.ShooterCheatManager.DoExit
struct UShooterCheatManager_DoExit_Params
{
};

// Function ShooterGame.ShooterCheatManager.DisallowPlayerToJoinNoCheck
struct UShooterCheatManager_DisallowPlayerToJoinNoCheck_Params
{
	struct FString                                     SteamID;                                                   // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.DisableSpectator
struct UShooterCheatManager_DisableSpectator_Params
{
};

// Function ShooterGame.ShooterCheatManager.DisableAllMating
struct UShooterCheatManager_DisableAllMating_Params
{
};

// Function ShooterGame.ShooterCheatManager.DinoSet
struct UShooterCheatManager_DinoSet_Params
{
	struct FName                                       CheatName;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Value;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.Dino
struct UShooterCheatManager_Dino_Params
{
	struct FName                                       CheatName;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.DetachChar
struct UShooterCheatManager_DetachChar_Params
{
};

// Function ShooterGame.ShooterCheatManager.DestroyWildDinos
struct UShooterCheatManager_DestroyWildDinos_Params
{
};

// Function ShooterGame.ShooterCheatManager.DestroyWildDinoClasses
struct UShooterCheatManager_DestroyWildDinoClasses_Params
{
	struct FString                                     ClassName;                                                 // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.DestroyTribeStructuresLessThan
struct UShooterCheatManager_DestroyTribeStructuresLessThan_Params
{
	int                                                TribeTeamID;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                Connections;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               includeContainers;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               includeLargeGates;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.DestroyTribeStructures
struct UShooterCheatManager_DestroyTribeStructures_Params
{
};

// Function ShooterGame.ShooterCheatManager.DestroyTribePlayers
struct UShooterCheatManager_DestroyTribePlayers_Params
{
};

// Function ShooterGame.ShooterCheatManager.DestroyTribeIdStructures
struct UShooterCheatManager_DestroyTribeIdStructures_Params
{
	int                                                TribeTeamID;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.DestroyTribeIdPlayers
struct UShooterCheatManager_DestroyTribeIdPlayers_Params
{
	int                                                TribeTeamID;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.DestroyTribeIdDinos
struct UShooterCheatManager_DestroyTribeIdDinos_Params
{
	int                                                TribeTeamID;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.DestroyTribeId
struct UShooterCheatManager_DestroyTribeId_Params
{
	int                                                TribeTeamID;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.DestroyTribeDinos
struct UShooterCheatManager_DestroyTribeDinos_Params
{
};

// Function ShooterGame.ShooterCheatManager.DestroyStructures
struct UShooterCheatManager_DestroyStructures_Params
{
};

// Function ShooterGame.ShooterCheatManager.DestroyMyTarget
struct UShooterCheatManager_DestroyMyTarget_Params
{
};

// Function ShooterGame.ShooterCheatManager.DestroyMyPawn
struct UShooterCheatManager_DestroyMyPawn_Params
{
};

// Function ShooterGame.ShooterCheatManager.DestroyFoliage
struct UShooterCheatManager_DestroyFoliage_Params
{
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               PutFoliageResourcesInInventory;                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.DestroyAllTames
struct UShooterCheatManager_DestroyAllTames_Params
{
};

// Function ShooterGame.ShooterCheatManager.DestroyAllEnemies
struct UShooterCheatManager_DestroyAllEnemies_Params
{
};

// Function ShooterGame.ShooterCheatManager.DestroyActors
struct UShooterCheatManager_DestroyActors_Params
{
	struct FString                                     ClassName;                                                 // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.DefeatBoss
struct UShooterCheatManager_DefeatBoss_Params
{
	int                                                PlayerId;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       BossName;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int8_t                                             difficulty;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.DefeatAllBosses
struct UShooterCheatManager_DefeatAllBosses_Params
{
	int                                                PlayerId;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.DeepPockets
struct UShooterCheatManager_DeepPockets_Params
{
};

// Function ShooterGame.ShooterCheatManager.DebugToggleHLNAMonologue
struct UShooterCheatManager_DebugToggleHLNAMonologue_Params
{
};

// Function ShooterGame.ShooterCheatManager.DebugMyTarget
struct UShooterCheatManager_DebugMyTarget_Params
{
};

// Function ShooterGame.ShooterCheatManager.DebugCompanionReactions
struct UShooterCheatManager_DebugCompanionReactions_Params
{
};

// Function ShooterGame.ShooterCheatManager.DebugCompanionAsyncLoadedFiles
struct UShooterCheatManager_DebugCompanionAsyncLoadedFiles_Params
{
};

// Function ShooterGame.ShooterCheatManager.DebugAllowVRMissionTeleport
struct UShooterCheatManager_DebugAllowVRMissionTeleport_Params
{
};

// Function ShooterGame.ShooterCheatManager.DeactivateMission
struct UShooterCheatManager_DeactivateMission_Params
{
};

// Function ShooterGame.ShooterCheatManager.DCMSet
struct UShooterCheatManager_DCMSet_Params
{
	struct FName                                       Cheat;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              val;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.CompleteMission
struct UShooterCheatManager_CompleteMission_Params
{
};

// Function ShooterGame.ShooterCheatManager.ClearTutorials
struct UShooterCheatManager_ClearTutorials_Params
{
};

// Function ShooterGame.ShooterCheatManager.ClearPlayerInventory
struct UShooterCheatManager_ClearPlayerInventory_Params
{
	int                                                PlayerId;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bClearInventory;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bClearSlotItems;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bClearEquippedItems;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.ClearMyBuffs
struct UShooterCheatManager_ClearMyBuffs_Params
{
};

// Function ShooterGame.ShooterCheatManager.ClearMessageOfTheDay
struct UShooterCheatManager_ClearMessageOfTheDay_Params
{
};

// Function ShooterGame.ShooterCheatManager.ClearCryoSickness
struct UShooterCheatManager_ClearCryoSickness_Params
{
};

// Function ShooterGame.ShooterCheatManager.CamZoomOut
struct UShooterCheatManager_CamZoomOut_Params
{
};

// Function ShooterGame.ShooterCheatManager.CamZoomIn
struct UShooterCheatManager_CamZoomIn_Params
{
};

// Function ShooterGame.ShooterCheatManager.Broadcast
struct UShooterCheatManager_Broadcast_Params
{
	struct FString                                     MessageText;                                               // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.BanPlayer
struct UShooterCheatManager_BanPlayer_Params
{
	struct FString                                     PlayerSteamName;                                           // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.AllowPlayerToJoinNoCheck
struct UShooterCheatManager_AllowPlayerToJoinNoCheck_Params
{
	struct FString                                     SteamID;                                                   // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.AddWorldBuff
struct UShooterCheatManager_AddWorldBuff_Params
{
	struct FString                                     WorldBuffIdentifier;                                       // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterCheatManager.AddItemToAllClustersInventory
struct UShooterCheatManager_AddItemToAllClustersInventory_Params
{
	struct FString                                     UserId;                                                    // (Parm, ZeroConstructor)
	int                                                MasterIndexNum;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.AddHexagons
struct UShooterCheatManager_AddHexagons_Params
{
	float                                              HowMuch;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.AddExperienceToTarget
struct UShooterCheatManager_AddExperienceToTarget_Params
{
	float                                              HowMuch;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               fromTribeShare;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bPreventSharingWithTribe;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.AddExperience
struct UShooterCheatManager_AddExperience_Params
{
	float                                              HowMuch;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               fromTribeShare;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bPreventSharingWithTribe;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.AddEquipmentDurability
struct UShooterCheatManager_AddEquipmentDurability_Params
{
	float                                              durability;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterCheatManager.AddBuffPreventTagToSelf
struct UShooterCheatManager_AddBuffPreventTagToSelf_Params
{
	struct FName                                       TagName;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterDamageType.OverrideBuffToGiveVictimCharacter
struct UShooterDamageType_OverrideBuffToGiveVictimCharacter_Params
{
	class APrimalCharacter*                            Victim;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              IncomingDamage;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                TheDamageEvent;                                            // (Parm)
	class AController*                                 EventInstigator;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterDamageType.BPAdjustHarvestingDamage
struct UShooterDamageType_BPAdjustHarvestingDamage_Params
{
	class AActor*                                      Victim;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              IncomingDamage;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                TheDamageEvent;                                            // (Parm)
	class AController*                                 EventInstigator;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterDamageType.BPAdjustDamage
struct UShooterDamageType_BPAdjustDamage_Params
{
	class AActor*                                      Victim;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              IncomingDamage;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                TheDamageEvent;                                            // (Parm)
	class AController*                                 EventInstigator;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterDamageType.BPAdjustAggro
struct UShooterDamageType_BPAdjustAggro_Params
{
	class APrimalDinoAIController*                     DamagedCharacterController;                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalCharacter*                            DamagedCharacter;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DesiredAggroValue;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              IncomingDamage;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                TheDamageEvent;                                            // (Parm)
	class AController*                                 EventInstigator;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGame_Menu.PlayMusic
struct AShooterGame_Menu_PlayMusic_Params
{
};

// Function ShooterGame.ShooterGame_Menu.GetMainMenuOverrideData
struct AShooterGame_Menu_GetMainMenuOverrideData_Params
{
	struct FActiveEventMainMenuOverride                OverrideData;                                              // (Parm, OutParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGame_Menu.GetMainMenuBackgroundTexture
struct AShooterGame_Menu_GetMainMenuBackgroundTexture_Params
{
	class UTexture2D*                                  ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameInstance.LoadTheGameMedia
struct UShooterGameInstance_LoadTheGameMedia_Params
{
};

// Function ShooterGame.ShooterGameInstance.DisplayGlobalMainMenuNotification
struct UShooterGameInstance_DisplayGlobalMainMenuNotification_Params
{
};

// Function ShooterGame.ShooterGameInstance.AsyncUnloadAssetFromPath
struct UShooterGameInstance_AsyncUnloadAssetFromPath_Params
{
	struct FString                                     AssetPathToUnload;                                         // (Parm, ZeroConstructor)
	bool                                               bForceGarbageCollection;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameInstance.AsyncUnloadAssetFromObject
struct UShooterGameInstance_AsyncUnloadAssetFromObject_Params
{
	class UObject*                                     AssetObjectToUnload;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceGarbageCollection;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameInstance.AsyncLoadAssetFromPath
struct UShooterGameInstance_AsyncLoadAssetFromPath_Params
{
	struct FString                                     AssetPath;                                                 // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterGameInstance.AsyncAssetLoadedDelegate__DelegateSignature
struct UShooterGameInstance_AsyncAssetLoadedDelegate__DelegateSignature_Params
{
	struct FString                                     AssetPath;                                                 // (Parm, ZeroConstructor)
	class UObject*                                     LoadedAsset;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TerrainActor.GenerateTerrain
struct ATerrainActor_GenerateTerrain_Params
{
};

// Function ShooterGame.TerrainComponent.OnRep_TerrainInfo
struct UTerrainComponent_OnRep_TerrainInfo_Params
{
};

// Function ShooterGame.TerrainComponent.OnConstruct
struct UTerrainComponent_OnConstruct_Params
{
};

// Function ShooterGame.TerrainComponent.ApplyToTexture
struct UTerrainComponent_ApplyToTexture_Params
{
	class UFloatMap*                                   FloatMap;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTexture2D*                                  Texture;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Minimum;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Maximum;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.TryGetIntOptionIni
struct AShooterGameMode_TryGetIntOptionIni_Params
{
	struct FString                                     Section;                                                   // (Parm, ZeroConstructor)
	struct FString                                     OptionName;                                                // (Parm, ZeroConstructor)
	int                                                Value;                                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.TryGetIntOption
struct AShooterGameMode_TryGetIntOption_Params
{
	struct FString                                     Section;                                                   // (Parm, ZeroConstructor)
	struct FString                                     Options;                                                   // (Parm, ZeroConstructor)
	struct FString                                     OptionName;                                                // (Parm, ZeroConstructor)
	int                                                Value;                                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.TryGetBoolOptionIni
struct AShooterGameMode_TryGetBoolOptionIni_Params
{
	struct FString                                     Section;                                                   // (Parm, ZeroConstructor)
	struct FString                                     OptionName;                                                // (Parm, ZeroConstructor)
	bool                                               Value;                                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.TryGetBoolOption
struct AShooterGameMode_TryGetBoolOption_Params
{
	struct FString                                     Section;                                                   // (Parm, ZeroConstructor)
	struct FString                                     Options;                                                   // (Parm, ZeroConstructor)
	struct FString                                     OptionName;                                                // (Parm, ZeroConstructor)
	bool                                               Value;                                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.TriggerLevelCustomEvents
struct AShooterGameMode_TriggerLevelCustomEvents_Params
{
	class UWorld*                                      inWorld;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     EventName;                                                 // (Parm, ZeroConstructor)
	int                                                IDtoOnlyAllowExecutionOncePerFrame;                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.TimeSinceMissionDeactivated
struct AShooterGameMode_TimeSinceMissionDeactivated_Params
{
	class UClass*                                      MissionType;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.ShooterCharacterSpawned__DelegateSignature
struct AShooterGameMode_ShooterCharacterSpawned__DelegateSignature_Params
{
	class AShooterCharacter*                           TheShooterCharacter;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.ShooterCharacterDied__DelegateSignature
struct AShooterGameMode_ShooterCharacterDied__DelegateSignature_Params
{
	class AShooterCharacter*                           TheShooterCharacter;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.SetTimeOfDay
struct AShooterGameMode_SetTimeOfDay_Params
{
	struct FString                                     timeString;                                                // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterGameMode.SetLastMissionDeactivatedUtcTime
struct AShooterGameMode_SetLastMissionDeactivatedUtcTime_Params
{
	class UClass*                                      MissionType;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                             UtcTime;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.SendServerNotification
struct AShooterGameMode_SendServerNotification_Params
{
	struct FString                                     MessageText;                                               // (Parm, ZeroConstructor)
	struct FLinearColor                                MessageColor;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DisplayScale;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DisplayTime;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTexture2D*                                  MessageIcon;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USoundBase*                                  SoundToPlay;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReceiverTeamId;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReceiverPlayerID;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDoBillboard;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.SendServerDirectMessage
struct AShooterGameMode_SendServerDirectMessage_Params
{
	struct FString                                     PlayerSteamIDconst;                                        // (Parm, ZeroConstructor)
	struct FString                                     MessageText;                                               // (Parm, ZeroConstructor)
	struct FLinearColor                                MessageColor;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsBold;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReceiverTeamId;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReceiverPlayerID;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     PlayerName;                                                // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterGameMode.SendServerChatMessage
struct AShooterGameMode_SendServerChatMessage_Params
{
	struct FString                                     MessageText;                                               // (Parm, ZeroConstructor)
	struct FLinearColor                                MessageColor;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsBold;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReceiverTeamId;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReceiverPlayerID;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.RestartServer
struct AShooterGameMode_RestartServer_Params
{
};

// Function ShooterGame.ShooterGameMode.RemovePlayerData
struct AShooterGameMode_RemovePlayerData_Params
{
	class AShooterPlayerState*                         PlayerState;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.RemoveInactivePlayersAndTribes
struct AShooterGameMode_RemoveInactivePlayersAndTribes_Params
{
};

// Function ShooterGame.ShooterGameMode.ReassertColorization
struct AShooterGameMode_ReassertColorization_Params
{
};

// Function ShooterGame.ShooterGameMode.PrintToServerGameLog
struct AShooterGameMode_PrintToServerGameLog_Params
{
	struct FString                                     InString;                                                  // (Parm, ZeroConstructor)
	bool                                               bSendChatToAllAdmins;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.PrintToGameplayLog
struct AShooterGameMode_PrintToGameplayLog_Params
{
	struct FString                                     InString;                                                  // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterGameMode.PreSpawnedDino__DelegateSignature
struct AShooterGameMode_PreSpawnedDino__DelegateSignature_Params
{
	class APrimalDinoCharacter*                        theDino;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.PostAlarmNotificationTribe
struct AShooterGameMode_PostAlarmNotificationTribe_Params
{
	int                                                TribeId;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     Title;                                                     // (Parm, ZeroConstructor)
	struct FString                                     Message;                                                   // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterGameMode.PostAlarmNotificationPlayerID
struct AShooterGameMode_PostAlarmNotificationPlayerID_Params
{
	int                                                PlayerId;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     Title;                                                     // (Parm, ZeroConstructor)
	struct FString                                     Message;                                                   // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterGameMode.PostAlarmNotification
struct AShooterGameMode_PostAlarmNotification_Params
{
	struct FString                                     SteamID;                                                   // (Parm, ZeroConstructor)
	struct FString                                     Title;                                                     // (Parm, ZeroConstructor)
	struct FString                                     Message;                                                   // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterGameMode.OnStartNewPlayer__DelegateSignature
struct AShooterGameMode_OnStartNewPlayer__DelegateSignature_Params
{
	class APlayerController*                           NewPlayer;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.OnServerNotification__DelegateSignature
struct AShooterGameMode_OnServerNotification__DelegateSignature_Params
{
	struct FString                                     MessageText;                                               // (Parm, ZeroConstructor)
	int                                                ReceiverTeamId;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReceiverPlayerID;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.OnServerDirectMessage__DelegateSignature
struct AShooterGameMode_OnServerDirectMessage__DelegateSignature_Params
{
	struct FString                                     PlayerSteamIDconst;                                        // (Parm, ZeroConstructor)
	struct FString                                     MessageText;                                               // (Parm, ZeroConstructor)
	int                                                ReceiverTeamId;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReceiverPlayerID;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     PlayerName;                                                // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterGameMode.OnServerChatMessage__DelegateSignature
struct AShooterGameMode_OnServerChatMessage__DelegateSignature_Params
{
	struct FString                                     MessageText;                                               // (Parm, ZeroConstructor)
	int                                                ReceiverTeamId;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReceiverPlayerID;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.OnSerializeForSaveFile__DelegateSignature
struct AShooterGameMode_OnSerializeForSaveFile__DelegateSignature_Params
{
};

// Function ShooterGame.ShooterGameMode.OnRemoveTribe__DelegateSignature
struct AShooterGameMode_OnRemoveTribe__DelegateSignature_Params
{
	int                                                TribeId;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.OnRemovePlayerFromTribe__DelegateSignature
struct AShooterGameMode_OnRemovePlayerFromTribe__DelegateSignature_Params
{
	int                                                TribeId;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                PlayerDataID;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.OnPostLogin__DelegateSignature
struct AShooterGameMode_OnPostLogin__DelegateSignature_Params
{
	class APlayerController*                           NewPlayer;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.OnNotifyDamage__DelegateSignature
struct AShooterGameMode_OnNotifyDamage__DelegateSignature_Params
{
	class AActor*                                      Victim;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DamageAmount;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	class AController*                                 EventInstigator;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.OnLogout
struct AShooterGameMode_OnLogout_Params
{
	class AController*                                 Exiting;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.OnLandscapeLevelUnloaded
struct AShooterGameMode_OnLandscapeLevelUnloaded_Params
{
};

// Function ShooterGame.ShooterGameMode.OnLandscapeLevelLoaded
struct AShooterGameMode_OnLandscapeLevelLoaded_Params
{
};

// Function ShooterGame.ShooterGameMode.OnKilled__DelegateSignature
struct AShooterGameMode_OnKilled__DelegateSignature_Params
{
	class AController*                                 Killer;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AController*                                 KilledPlayer;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                       KilledPawn;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UDamageType*                                 DamageType;                                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.OnAddNewTribe__DelegateSignature
struct AShooterGameMode_OnAddNewTribe__DelegateSignature_Params
{
	class AShooterPlayerState*                         PlayerOwner;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     TribeName;                                                 // (Parm, ZeroConstructor)
	struct FTribeGovernment                            TribeGovernment;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.MissionTriggerEndOverlap__DelegateSignature
struct AShooterGameMode_MissionTriggerEndOverlap__DelegateSignature_Params
{
	class AMissionTrigger*                             Trigger;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       TriggerKey;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      OtherActor;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                         OtherComp;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	int                                                OtherBodyIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.MissionTriggerBeginOverlap__DelegateSignature
struct AShooterGameMode_MissionTriggerBeginOverlap__DelegateSignature_Params
{
	class AMissionTrigger*                             Trigger;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       TriggerKey;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      OtherActor;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                         OtherComp;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	int                                                OtherBodyIndex;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.LoadedWorld
struct AShooterGameMode_LoadedWorld_Params
{
};

// Function ShooterGame.ShooterGameMode.KickPlayerController
struct AShooterGameMode_KickPlayerController_Params
{
	class APlayerController*                           thePC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     KickMessage;                                               // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterGameMode.KickAllPlayersAndReload
struct AShooterGameMode_KickAllPlayersAndReload_Params
{
};

// Function ShooterGame.ShooterGameMode.IsTimeSinceMissionDeactivated
struct AShooterGameMode_IsTimeSinceMissionDeactivated_Params
{
	class UClass*                                      MissionType;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              CheckTimeSince;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceTrueAtZeroTime;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.IsPlayerControllerAllowedToJoinNoCheck
struct AShooterGameMode_IsPlayerControllerAllowedToJoinNoCheck_Params
{
	class AShooterPlayerController*                    ForPlayer;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.IsPlayerControllerAllowedToExclusiveJoin
struct AShooterGameMode_IsPlayerControllerAllowedToExclusiveJoin_Params
{
	class AShooterPlayerController*                    ForPlayer;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.IsPlayerAllowedToCheat
struct AShooterGameMode_IsPlayerAllowedToCheat_Params
{
	class AShooterPlayerController*                    ForPlayer;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.InitOptionString
struct AShooterGameMode_InitOptionString_Params
{
	struct FString                                     Commandline;                                               // (Parm, ZeroConstructor)
	struct FString                                     Section;                                                   // (Parm, ZeroConstructor)
	struct FString                                     Option;                                                    // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterGameMode.InitOptionInteger
struct AShooterGameMode_InitOptionInteger_Params
{
	struct FString                                     Commandline;                                               // (Parm, ZeroConstructor)
	struct FString                                     Section;                                                   // (Parm, ZeroConstructor)
	struct FString                                     Option;                                                    // (Parm, ZeroConstructor)
	int                                                CurrentValue;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.InitOptionFloat
struct AShooterGameMode_InitOptionFloat_Params
{
	struct FString                                     Commandline;                                               // (Parm, ZeroConstructor)
	struct FString                                     Section;                                                   // (Parm, ZeroConstructor)
	struct FString                                     Option;                                                    // (Parm, ZeroConstructor)
	float                                              CurrentValue;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.InitOptionBool
struct AShooterGameMode_InitOptionBool_Params
{
	struct FString                                     Commandline;                                               // (Parm, ZeroConstructor)
	struct FString                                     Section;                                                   // (Parm, ZeroConstructor)
	struct FString                                     Option;                                                    // (Parm, ZeroConstructor)
	bool                                               bDefaultValue;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.InitGameStateDataSets
struct AShooterGameMode_InitGameStateDataSets_Params
{
};

// Function ShooterGame.ShooterGameMode.IncrementNumDeaths
struct AShooterGameMode_IncrementNumDeaths_Params
{
	struct FString                                     PlayerDataID;                                              // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterGameMode.HandleNewPlayer
struct AShooterGameMode_HandleNewPlayer_Params
{
	class AShooterPlayerController*                    NewPlayer;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalPlayerData*                           PlayerData;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           PlayerCharacter;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsFromLogin;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.GetTribeDataBlueprint
struct AShooterGameMode_GetTribeDataBlueprint_Params
{
	int                                                TribeId;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTribeData                                  ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.ShooterGameMode.GetStringOption
struct AShooterGameMode_GetStringOption_Params
{
	struct FString                                     Section;                                                   // (Parm, ZeroConstructor)
	struct FString                                     OptionName;                                                // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.ShooterGameMode.GetSessionTimeString
struct AShooterGameMode_GetSessionTimeString_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.ShooterGameMode.GetServerSettingsFloat
struct AShooterGameMode_GetServerSettingsFloat_Params
{
	struct FString                                     KeyValue;                                                  // (Parm, ZeroConstructor)
	float                                              OutFloat;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.GetServerName
struct AShooterGameMode_GetServerName_Params
{
	bool                                               bNumbersAndLettersOnly;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.ShooterGameMode.GetPlayerDataByInt
struct AShooterGameMode_GetPlayerDataByInt_Params
{
	uint64_t                                           PlayerDataIDInt;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalPlayerData*                           ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.GetPlayerData
struct AShooterGameMode_GetPlayerData_Params
{
	struct FString                                     PlayerDataID;                                              // (Parm, ZeroConstructor)
	class UPrimalPlayerData*                           ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.GetOverlappingDinoCharactersOfTeamAndClass
struct AShooterGameMode_GetOverlappingDinoCharactersOfTeamAndClass_Params
{
	struct FVector                                     AtLocation;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              OverlapRange;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      DinoClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                DinoTeam;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bExactClassMatch;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIgnoreClass;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class APrimalDinoCharacter*>                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.ShooterGameMode.GetNumDeaths
struct AShooterGameMode_GetNumDeaths_Params
{
	struct FString                                     PlayerDataID;                                              // (Parm, ZeroConstructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.GetNumberOfLivePlayersOnTribe
struct AShooterGameMode_GetNumberOfLivePlayersOnTribe_Params
{
	struct FString                                     TribeName;                                                 // (Parm, ZeroConstructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.GetLaunchOptionFloat
struct AShooterGameMode_GetLaunchOptionFloat_Params
{
	struct FString                                     LaunchOptionKey;                                           // (Parm, ZeroConstructor)
	float                                              ReturnVal;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.GetLastMissionDeactivatedUtcTime
struct AShooterGameMode_GetLastMissionDeactivatedUtcTime_Params
{
	class UClass*                                      MissionType;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                             ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.GetIntOptionIni
struct AShooterGameMode_GetIntOptionIni_Params
{
	struct FString                                     Section;                                                   // (Parm, ZeroConstructor)
	struct FString                                     OptionName;                                                // (Parm, ZeroConstructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.GetFloatOptionIni
struct AShooterGameMode_GetFloatOptionIni_Params
{
	struct FString                                     Section;                                                   // (Parm, ZeroConstructor)
	struct FString                                     OptionName;                                                // (Parm, ZeroConstructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.GetBoolOptionIni
struct AShooterGameMode_GetBoolOptionIni_Params
{
	struct FString                                     Section;                                                   // (Parm, ZeroConstructor)
	struct FString                                     OptionName;                                                // (Parm, ZeroConstructor)
	bool                                               bDefaultValue;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.ForceRepopulateFoliageAtPoint
struct AShooterGameMode_ForceRepopulateFoliageAtPoint_Params
{
	struct FVector                                     AtPoint;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MaxRangeFromPoint;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                MaxNumFoliages;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      RepopulatedEmitter;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     StructureDownTraceVector;                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     StructureUpTraceVector;                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               bDontCheckForOverlaps;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                TriggeredByTeamID;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bCheckAreaAroundEachIndividualFoliage;                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              RadiusAroundEachIndivitualFoliageToCheck;                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.ForceCreateTribe
struct AShooterGameMode_ForceCreateTribe_Params
{
	struct FString                                     TribeName;                                                 // (Parm, ZeroConstructor)
	int                                                TeamOverride;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.ForceAddPlayerToTribe
struct AShooterGameMode_ForceAddPlayerToTribe_Params
{
	class AShooterPlayerState*                         ForPlayerState;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     TribeName;                                                 // (Parm, ZeroConstructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.CountOverlappingDinoCharactersOfTeamAndClass
struct AShooterGameMode_CountOverlappingDinoCharactersOfTeamAndClass_Params
{
	struct FVector                                     AtLocation;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              OverlapRange;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      DinoClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                DinoTeam;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bExactClassMatch;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIgnoreClass;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.ClearLastMissionDeactivatedTime
struct AShooterGameMode_ClearLastMissionDeactivatedTime_Params
{
	class UClass*                                      MissionType;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.CheckJoinInProgress
struct AShooterGameMode_CheckJoinInProgress_Params
{
	bool                                               bIsFromLogin;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                           NewPlayer;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.CharacterPossessionByPlayer__DelegateSignature
struct AShooterGameMode_CharacterPossessionByPlayer__DelegateSignature_Params
{
	class APrimalCharacter*                            TheCharacter;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                           ByPlayerController;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.BPPreSpawnedDino
struct AShooterGameMode_BPPreSpawnedDino_Params
{
	class APrimalDinoCharacter*                        theDino;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.BPIsSpawnpointPreferred
struct AShooterGameMode_BPIsSpawnpointPreferred_Params
{
	class APlayerStart*                                SpawnPoint;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AController*                                 Player;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.BPIsSpawnpointAllowed
struct AShooterGameMode_BPIsSpawnpointAllowed_Params
{
	class APlayerStart*                                SpawnPoint;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AController*                                 Player;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.AreTribesAllied
struct AShooterGameMode_AreTribesAllied_Params
{
	int                                                TribeID1;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                TribeID2;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.AllowTaming
struct AShooterGameMode_AllowTaming_Params
{
	int                                                ForTeam;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.AllowDamage
struct AShooterGameMode_AllowDamage_Params
{
	class UWorld*                                      ForWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                TargetingTeam1;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                TargetingTeam2;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIgnoreDamageIfAllied;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameMode.AddToTribeLog
struct AShooterGameMode_AddToTribeLog_Params
{
	int                                                TribeId;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     NewLog;                                                    // (Parm, ZeroConstructor)
};

// Function ShooterGame.CustomGameMode.SaveIntToConfig
struct ACustomGameMode_SaveIntToConfig_Params
{
	int                                                IntValue;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     KeyValue;                                                  // (Parm, ZeroConstructor)
};

// Function ShooterGame.CustomGameMode.SaveFloatToConfig
struct ACustomGameMode_SaveFloatToConfig_Params
{
	float                                              IntValue;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     KeyValue;                                                  // (Parm, ZeroConstructor)
};

// Function ShooterGame.CustomGameMode.SaveBoolToConfig
struct ACustomGameMode_SaveBoolToConfig_Params
{
	bool                                               IntValue;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     KeyValue;                                                  // (Parm, ZeroConstructor)
};

// Function ShooterGame.CustomGameMode.OnUpdateTribeData
struct ACustomGameMode_OnUpdateTribeData_Params
{
	struct FTribeData                                  NewTribeData;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameMode.OnRemoveTribe
struct ACustomGameMode_OnRemoveTribe_Params
{
	int                                                TribeId;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameMode.OnPlayerCanRestart
struct ACustomGameMode_OnPlayerCanRestart_Params
{
	class APlayerController*                           Player;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameMode.OnIsUsedSpawnPointStillSupported
struct ACustomGameMode_OnIsUsedSpawnPointStillSupported_Params
{
	class APlayerStart*                                SpawnPoint;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AController*                                 Player;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameMode.OnIsSpawnpointAllowed
struct ACustomGameMode_OnIsSpawnpointAllowed_Params
{
	class APlayerStart*                                SpawnPoint;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AController*                                 Player;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameMode.OnInitOptionEvent
struct ACustomGameMode_OnInitOptionEvent_Params
{
	struct FString                                     Options;                                                   // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameMode.OnInitGameState
struct ACustomGameMode_OnInitGameState_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameMode.OnInitGame
struct ACustomGameMode_OnInitGame_Params
{
	struct FString                                     MapName;                                                   // (Parm, ZeroConstructor)
	struct FString                                     Options;                                                   // (Parm, ZeroConstructor)
	struct FString                                     ErrorMessage;                                              // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameMode.OnHandleLeavingMap
struct ACustomGameMode_OnHandleLeavingMap_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameMode.OnDoGameCommand
struct ACustomGameMode_OnDoGameCommand_Params
{
	struct FString                                     TheCommand;                                                // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.CustomGameMode.OnAllowRenameTribe
struct ACustomGameMode_OnAllowRenameTribe_Params
{
	class AShooterPlayerState*                         ForPlayerState;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     TribeName;                                                 // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameMode.OnAllowNotifyRemotePlayerDeath
struct ACustomGameMode_OnAllowNotifyRemotePlayerDeath_Params
{
	class AShooterCharacter*                           forChar;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameMode.OnAllowModifyStatusValue
struct ACustomGameMode_OnAllowModifyStatusValue_Params
{
	class UPrimalCharacterStatusComponent*             forComp;                                                   // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> ValueType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              amount;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameMode.OnAllowClearTribe
struct ACustomGameMode_OnAllowClearTribe_Params
{
	class AShooterPlayerState*                         ForPlayerState;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameMode.OnAllowAddXP
struct ACustomGameMode_OnAllowAddXP_Params
{
	class UPrimalCharacterStatusComponent*             forComp;                                                   // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameMode.OnAllowAddToTribe
struct ACustomGameMode_OnAllowAddToTribe_Params
{
	class AShooterPlayerState*                         ForPlayerState;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTribeData                                  MyNewTribe;                                                // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameMode.OnAdjustDamage
struct ACustomGameMode_OnAdjustDamage_Params
{
	class AActor*                                      Victim;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DefaultDamage;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	class AController*                                 EventInstigator;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameMode.MakeTribeData
struct ACustomGameMode_MakeTribeData_Params
{
	struct FString                                     TribeName;                                                 // (Parm, OutParm, ZeroConstructor)
	int                                                OwnerPlayerDataID;                                         // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                TribeId;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FString>                             MembersPlayerName;                                         // (Parm, OutParm, ZeroConstructor)
	TArray<int>                                        MembersPlayerDataID;                                       // (Parm, OutParm, ZeroConstructor)
	TArray<int>                                        TribeAdmins;                                               // (Parm, OutParm, ZeroConstructor)
	bool                                               bSetGovernment;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTribeGovernment                            TribeGovernment;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FPrimalPlayerCharacterConfigStructReplicated> MembersConfigs;                                            // (Parm, OutParm, ZeroConstructor)
	struct FTribeData                                  ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.CustomGameMode.KickPlayer
struct ACustomGameMode_KickPlayer_Params
{
	class APlayerController*                           NewPlayer;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameMode.IsInAllowedToCheatList
struct ACustomGameMode_IsInAllowedToCheatList_Params
{
	class APlayerController*                           NewPlayer;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameMode.InitOptionFloatToINI
struct ACustomGameMode_InitOptionFloatToINI_Params
{
	struct FString                                     Options;                                                   // (Parm, ZeroConstructor)
	float                                              FloatValue;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     KeyValue;                                                  // (Parm, ZeroConstructor)
};

// Function ShooterGame.CustomGameMode.GetValueFromINI
struct ACustomGameMode_GetValueFromINI_Params
{
	struct FString                                     KeyValue;                                                  // (Parm, ZeroConstructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameMode.GetIntValueFromINI
struct ACustomGameMode_GetIntValueFromINI_Params
{
	struct FString                                     KeyValue;                                                  // (Parm, ZeroConstructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameMode.GetIniFloatValue
struct ACustomGameMode_GetIniFloatValue_Params
{
	struct FString                                     Section;                                                   // (Parm, ZeroConstructor)
	struct FString                                     KeyValue;                                                  // (Parm, ZeroConstructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameMode.GetFloatValueFromINI
struct ACustomGameMode_GetFloatValueFromINI_Params
{
	struct FString                                     KeyValue;                                                  // (Parm, ZeroConstructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameMode.GetBoolValueFromINI
struct ACustomGameMode_GetBoolValueFromINI_Params
{
	struct FString                                     KeyValue;                                                  // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameMode.CleanUpSotfNotificationManager
struct ACustomGameMode_CleanUpSotfNotificationManager_Params
{
};

// Function ShooterGame.CustomGameMode.CheckForCommand
struct ACustomGameMode_CheckForCommand_Params
{
	struct FString                                     CommandName;                                               // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameMode.BreakTribeData
struct ACustomGameMode_BreakTribeData_Params
{
	struct FTribeData                                  Data;                                                      // (ConstParm, Parm)
	struct FString                                     TribeName;                                                 // (Parm, OutParm, ZeroConstructor)
	int                                                OwnerPlayerDataID;                                         // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                TribeId;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FString>                             MembersPlayerName;                                         // (Parm, OutParm, ZeroConstructor)
	TArray<int>                                        MembersPlayerDataID;                                       // (Parm, OutParm, ZeroConstructor)
	TArray<int>                                        TribeAdmins;                                               // (Parm, OutParm, ZeroConstructor)
	bool                                               bSetGovernment;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTribeGovernment                            TribeGovernment;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FPrimalPlayerCharacterConfigStructReplicated> MembersConfigs;                                            // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.ShooterGameState.StartMassTeleport
struct AShooterGameState_StartMassTeleport_Params
{
	struct FMassTeleportData                           MassTeleportData;                                          // (Parm, OutParm)
	struct FTeleportDestination                        TeleportDestination;                                       // (ConstParm, Parm, OutParm, ReferenceParm)
	class AActor*                                      InitiatingActor;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                              TeleportActors;                                            // (Parm, ZeroConstructor)
	class UClass*                                      BuffToApply;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              TeleportDuration;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              TeleportRadius;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bTeleportingSnapsToGround;                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bMaintainRotation;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameState.ShouldMassTeleportMoveActor
struct AShooterGameState_ShouldMassTeleportMoveActor_Params
{
	class AActor*                                      forActor;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMassTeleportData                           WithMassTeleportData;                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameState.SetNextEnvironmentIndex
struct AShooterGameState_SetNextEnvironmentIndex_Params
{
	int                                                newNextEnvironmentIndex;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameState.SetEnvironmentIndex
struct AShooterGameState_SetEnvironmentIndex_Params
{
	int                                                newEnvironmentIndex;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameState.PrepareActorForMassTeleport
struct AShooterGameState_PrepareActorForMassTeleport_Params
{
	class AActor*                                      PrepareActor;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMassTeleportData                           WithMassTeleportData;                                      // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.ShooterGameState.OnRep_SupportedSpawnRegions
struct AShooterGameState_OnRep_SupportedSpawnRegions_Params
{
};

// Function ShooterGame.ShooterGameState.OnRep_ReplicateLocalizedChatRadius
struct AShooterGameState_OnRep_ReplicateLocalizedChatRadius_Params
{
};

// Function ShooterGame.ShooterGameState.OnRep_ReplicateLiveTuningOverloadChunks
struct AShooterGameState_OnRep_ReplicateLiveTuningOverloadChunks_Params
{
};

// Function ShooterGame.ShooterGameState.OnHTTPPostResponse__DelegateSignature
struct AShooterGameState_OnHTTPPostResponse__DelegateSignature_Params
{
	bool                                               bSuccess;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     StringResult;                                              // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterGameState.OnHTTPGetProcessed__DelegateSignature
struct AShooterGameState_OnHTTPGetProcessed__DelegateSignature_Params
{
	bool                                               bSuccess;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     StringResult;                                              // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterGameState.OnDinoUploaded__DelegateSignature
struct AShooterGameState_OnDinoUploaded__DelegateSignature_Params
{
	class APrimalDinoCharacter*                        theDino;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameState.OnDinoDownloaded__DelegateSignature
struct AShooterGameState_OnDinoDownloaded__DelegateSignature_Params
{
	class APrimalDinoCharacter*                        theDino;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    TamerController;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameState.NetUpdateOfflinePvPLiveTeams
struct AShooterGameState_NetUpdateOfflinePvPLiveTeams_Params
{
	TArray<int>                                        NewPreventOfflinePvPLiveTeams;                             // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterGameState.NetUpdateOfflinePvPExpiringTeams
struct AShooterGameState_NetUpdateOfflinePvPExpiringTeams_Params
{
	TArray<int>                                        NewPreventOfflinePvPExpiringTeams;                         // (ConstParm, Parm, ZeroConstructor)
	TArray<double>                                     NewPreventOfflinePvPExpiringTimes;                         // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterGameState.NetAddFloatingText
struct AShooterGameState_NetAddFloatingText_Params
{
	struct FVector                                     AtLocation;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     FloatingTextString;                                        // (Parm, ZeroConstructor)
	struct FColor                                      FloatingTextColor;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ScaleX;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ScaleY;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              TextLifeSpan;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     TextVelocity;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MinScale;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              FadeInTime;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              FadeOutTime;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                OnlySendToTeamID;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameState.NetAddFloatingDamageText
struct AShooterGameState_NetAddFloatingDamageText_Params
{
	struct FVector                                     AtLocation;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                DamageAmount;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                FromTeamID;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                OnlySendToTeamID;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameState.Multi_SpawnCosmeticActor
struct AShooterGameState_Multi_SpawnCosmeticActor_Params
{
	class UClass*                                      SpawnActorOfClass;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     SpawnAtLocation;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    SpawnWithRotation;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameState.LoadedWorld
struct AShooterGameState_LoadedWorld_Params
{
};

// Function ShooterGame.ShooterGameState.IsValidMassTeleportData
struct AShooterGameState_IsValidMassTeleportData_Params
{
	struct FMassTeleportData                           CheckData;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameState.IsTeamIDInvincible
struct AShooterGameState_IsTeamIDInvincible_Params
{
	int                                                TargetingTeamID;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bInvincibleOnlyWhenOffline;                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameState.IsMassTeleportInProgress
struct AShooterGameState_IsMassTeleportInProgress_Params
{
	class AActor*                                      InitiatingActor;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameState.IsEngramClassHidden
struct AShooterGameState_IsEngramClassHidden_Params
{
	class UClass*                                      ForItemClass;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameState.HTTPPostRequest
struct AShooterGameState_HTTPPostRequest_Params
{
	struct FString                                     InURL;                                                     // (Parm, ZeroConstructor)
	struct FString                                     Content;                                                   // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterGameState.HTTPGetRequest
struct AShooterGameState_HTTPGetRequest_Params
{
	struct FString                                     InURL;                                                     // (Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterGameState.HandleInitializedGameState
struct AShooterGameState_HandleInitializedGameState_Params
{
};

// Function ShooterGame.ShooterGameState.GetOfflineDamagePreventionTime
struct AShooterGameState_GetOfflineDamagePreventionTime_Params
{
	int                                                TargetingTeamID;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                             ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameState.GetNetworkTimeDelta
struct AShooterGameState_GetNetworkTimeDelta_Params
{
	class AShooterGameState*                           GameState;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                             netTime;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bTimeUntil;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                             ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameState.GetItemMaxQuantityOverride
struct AShooterGameState_GetItemMaxQuantityOverride_Params
{
	class UClass*                                      ForClass;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMaxItemQuantityOverride                    OutMaxQuantity;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameState.GetIniArray
struct AShooterGameState_GetIniArray_Params
{
	struct FString                                     SectionName;                                               // (Parm, ZeroConstructor)
	TArray<struct FGameIniData>                        ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.ShooterGameState.GetDayTimeString
struct AShooterGameState_GetDayTimeString_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.ShooterGameState.GetCleanServerSessionName
struct AShooterGameState_GetCleanServerSessionName_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.ShooterGameState.DisplayWelcomeUI
struct AShooterGameState_DisplayWelcomeUI_Params
{
};

// Function ShooterGame.ShooterGameState.CancelMassTeleport
struct AShooterGameState_CancelMassTeleport_Params
{
	class AActor*                                      WithInitiatingActor;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameState.BPDrawGameStateHUD
struct AShooterGameState_BPDrawGameStateHUD_Params
{
	class AShooterHUD*                                 HUD;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameState.BaseSpawnBuffAndAttachToCharacter
struct AShooterGameState_BaseSpawnBuffAndAttachToCharacter_Params
{
	class UClass*                                      Buff;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalCharacter*                            PrimalCharacter;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ExperiencePoints;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalBuff*                                 ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameState.BaseProjectWorldToScreenPosition
struct AShooterGameState_BaseProjectWorldToScreenPosition_Params
{
	struct FVector                                     WorldLocation;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	class APlayerController*                           thePC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameState.BaseIsTribeID
struct AShooterGameState_BaseIsTribeID_Params
{
	int                                                TeamId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameState.BaseGetCustomActors
struct AShooterGameState_BaseGetCustomActors_Params
{
	struct FName                                       SearchCustomTag;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ACustomActorList*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameState.BaseGetAllShooterControllers
struct AShooterGameState_BaseGetAllShooterControllers_Params
{
	TArray<class AShooterPlayerController*>            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.ShooterGameState.BaseGetAllShooterCharactersOfTeam
struct AShooterGameState_BaseGetAllShooterCharactersOfTeam_Params
{
	int                                                KillerTeam;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AShooterCharacter*>                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.ShooterGameState.BaseGetAllShooterCharacters
struct AShooterGameState_BaseGetAllShooterCharacters_Params
{
	TArray<class AShooterCharacter*>                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.ShooterGameState.BaseGetAllDinoCharactersOfTeam
struct AShooterGameState_BaseGetAllDinoCharactersOfTeam_Params
{
	int                                                KillerTeam;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class APrimalDinoCharacter*>                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.ShooterGameState.BaseDrawTileOnCanvas
struct AShooterGameState_BaseDrawTileOnCanvas_Params
{
	class AShooterHUD*                                 HUD;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTexture*                                    Tex;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              X;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Y;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              XL;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              YL;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              U;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              V;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              UL;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              VL;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FColor                                      DrawColor;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameState.AllowDownloadDino
struct AShooterGameState_AllowDownloadDino_Params
{
	class UClass*                                      TheDinoClass;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameState.AllowDinoTame
struct AShooterGameState_AllowDinoTame_Params
{
	class APrimalDinoCharacter*                        dinoChar;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameState.AllowDinoClassTame
struct AShooterGameState_AllowDinoClassTame_Params
{
	class UClass*                                      DinoCharClass;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameState.AddFloatingText
struct AShooterGameState_AddFloatingText_Params
{
	struct FVector                                     AtLocation;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     FloatingTextString;                                        // (Parm, ZeroConstructor)
	struct FColor                                      FloatingTextColor;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ScaleX;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ScaleY;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              TextLifeSpan;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     TextVelocity;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MinScale;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              FadeInTime;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              FadeOutTime;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameState.SpawnBuffAndAttachToCharacter
struct ACustomGameState_SpawnBuffAndAttachToCharacter_Params
{
	class UClass*                                      Buff;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalCharacter*                            PrimalCharacter;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ExperiencePoints;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalBuff*                                 ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameState.SetActionReportItem
struct ACustomGameState_SetActionReportItem_Params
{
	struct FActionReportItem                           Data;                                                      // (Parm, OutParm)
	struct FString                                     PlayerName;                                                // (Parm, ZeroConstructor)
	struct FString                                     TribeName;                                                 // (Parm, ZeroConstructor)
	struct FString                                     TimeOfDeath;                                               // (Parm, ZeroConstructor)
	struct FString                                     LevelOfDeath;                                              // (Parm, ZeroConstructor)
	struct FString                                     DeathMessage;                                              // (Parm, ZeroConstructor)
};

// Function ShooterGame.CustomGameState.ProjectWorldToScreenPosition
struct ACustomGameState_ProjectWorldToScreenPosition_Params
{
	struct FVector                                     WorldLocation;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	class APlayerController*                           thePC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameState.OnSetHudEvent
struct ACustomGameState_OnSetHudEvent_Params
{
};

// Function ShooterGame.CustomGameState.OnOverrideDynamicMusic
struct ACustomGameState_OnOverrideDynamicMusic_Params
{
	class APrimalCharacter*                            forCharacter;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USoundBase*                                  ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameState.OnNotifyPlayerDied
struct ACustomGameState_OnNotifyPlayerDied_Params
{
	class AShooterCharacter*                           theShooterChar;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    prevController;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                       InstigatingPawn;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameState.OnHasGameModeMatchStarted
struct ACustomGameState_OnHasGameModeMatchStarted_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameState.OnHandleActorEvent
struct ACustomGameState_OnHandleActorEvent_Params
{
	class AActor*                                      forActor;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       NameParam;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     VecParam;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameState.OnForceOccludedFloatingHUD
struct ACustomGameState_OnForceOccludedFloatingHUD_Params
{
	class AActor*                                      anActor;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameState.OnExtraShooterCharacterTick
struct ACustomGameState_OnExtraShooterCharacterTick_Params
{
	class AShooterCharacter*                           forChar;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameState.OnDrawingHUDNotifications
struct ACustomGameState_OnDrawingHUDNotifications_Params
{
	class AShooterHUD*                                 HUD;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameState.OnDrawHUD
struct ACustomGameState_OnDrawHUD_Params
{
	class AShooterHUD*                                 HUD;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameState.OnDrawExtraPlayerFloatingHUD
struct ACustomGameState_OnDrawExtraPlayerFloatingHUD_Params
{
	class AShooterHUD*                                 HUD;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           theShooterChar;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     AtLoc;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameState.OnCheckGameStateIfCanRespawn
struct ACustomGameState_OnCheckGameStateIfCanRespawn_Params
{
	class APlayerController*                           ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameState.OnAllowTribeManager
struct ACustomGameState_OnAllowTribeManager_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameState.OnAllowTribeManagement
struct ACustomGameState_OnAllowTribeManagement_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameState.OnAllowStartSupplyCrateSpawns
struct ACustomGameState_OnAllowStartSupplyCrateSpawns_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameState.OnAllowShowPlayerHudUI
struct ACustomGameState_OnAllowShowPlayerHudUI_Params
{
	class APrimalCharacter*                            ForPawn;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameState.OnAllowRemoveItems
struct ACustomGameState_OnAllowRemoveItems_Params
{
	class UPrimalInventoryComponent*                   ForInv;                                                    // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalItem*                                 anItemToTransfer;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameState.OnAllowPopUps
struct ACustomGameState_OnAllowPopUps_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameState.OnAllowOrbitCamera
struct ACustomGameState_OnAllowOrbitCamera_Params
{
	class APrimalCharacter*                            forCharacter;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameState.OnAllowFastTravel
struct ACustomGameState_OnAllowFastTravel_Params
{
	class APrimalStructureBed*                         ForBed;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameState.OnAllowDaytimeTransitionSounds
struct ACustomGameState_OnAllowDaytimeTransitionSounds_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameState.OnAllowCreateSurvivor
struct ACustomGameState_OnAllowCreateSurvivor_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameState.MakePlayerDeathNotification
struct ACustomGameState_MakePlayerDeathNotification_Params
{
	struct FString                                     PlayerDeathStringEnemy;                                    // (Parm, ZeroConstructor)
	struct FString                                     PlayerDeathStringAlly;                                     // (Parm, ZeroConstructor)
	struct FString                                     PlayerDeathStringYou;                                      // (Parm, ZeroConstructor)
	struct FString                                     DeathReason;                                               // (Parm, ZeroConstructor)
	TArray<struct FString>                             DeadPlayerNames;                                           // (Parm, ZeroConstructor)
	bool                                               bIsTribeDeath;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     DeathTribeName;                                            // (Parm, ZeroConstructor)
	int                                                TargetingTeamID;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     LinkedPlayerID;                                            // (Parm, ZeroConstructor)
	TArray<struct FPrimalPlayerCharacterConfigStructReplicated> PlayersData;                                               // (Parm, ZeroConstructor)
	struct FPlayerDeathNotification                    ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.CustomGameState.MakeBattleTribeData
struct ACustomGameState_MakeBattleTribeData_Params
{
	struct FString                                     TribeName;                                                 // (Parm, ZeroConstructor)
	int                                                TribeId;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBattleTribeData                            ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.CustomGameState.MakeBattlePlayerData
struct ACustomGameState_MakeBattlePlayerData_Params
{
	struct FString                                     PlayerName;                                                // (Parm, ZeroConstructor)
	bool                                               bConnected;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bAlive;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                TribeId;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     PlayerId;                                                  // (Parm, ZeroConstructor)
	struct FBattlePlayerData                           ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.CustomGameState.KickPlayer
struct ACustomGameState_KickPlayer_Params
{
	class APlayerController*                           Controller;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     Reason;                                                    // (Parm, ZeroConstructor)
};

// Function ShooterGame.CustomGameState.IsTribeID
struct ACustomGameState_IsTribeID_Params
{
	int                                                TeamId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameState.IsAuthorityRole
struct ACustomGameState_IsAuthorityRole_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameState.HideUIScene
struct ACustomGameState_HideUIScene_Params
{
	class UClass*                                      SceneClass;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameState.GetTimeSeconds
struct ACustomGameState_GetTimeSeconds_Params
{
	double                                             ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameState.GetPlayerDatasForTribe
struct ACustomGameState_GetPlayerDatasForTribe_Params
{
	int                                                TribeId;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FBattlePlayerData>                   AllPlayerDatas;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FBattlePlayerData>                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.CustomGameState.GetPawnName
struct ACustomGameState_GetPawnName_Params
{
	class APawn*                                       Pawn;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.CustomGameState.GetPawnKillerName
struct ACustomGameState_GetPawnKillerName_Params
{
	class APawn*                                       Pawn;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.CustomGameState.GetDeathNotificationText
struct ACustomGameState_GetDeathNotificationText_Params
{
	class AShooterCharacter*                           theShooterChar;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                       InstigatingPawn;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     Killer;                                                    // (Parm, OutParm, ZeroConstructor)
	struct FString                                     KillerAndTribe;                                            // (Parm, OutParm, ZeroConstructor)
	struct FString                                     theNotificationStringYou;                                  // (Parm, OutParm, ZeroConstructor)
	struct FString                                     theNotificationStringAlly;                                 // (Parm, OutParm, ZeroConstructor)
	struct FString                                     theNotificationStringEnemy;                                // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.CustomGameState.GetCustomActors
struct ACustomGameState_GetCustomActors_Params
{
	struct FName                                       SearchCustomTag;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ACustomActorList*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameState.GetAllShooterControllers
struct ACustomGameState_GetAllShooterControllers_Params
{
	TArray<class AShooterPlayerController*>            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.CustomGameState.GetAllShooterCharactersOfTeam
struct ACustomGameState_GetAllShooterCharactersOfTeam_Params
{
	int                                                KillerTeam;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AShooterCharacter*>                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.CustomGameState.GetAllShooterCharacters
struct ACustomGameState_GetAllShooterCharacters_Params
{
	TArray<class AShooterCharacter*>                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.CustomGameState.GetAllDinoCharactersOfTeam
struct ACustomGameState_GetAllDinoCharactersOfTeam_Params
{
	int                                                KillerTeam;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class APrimalDinoCharacter*>                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.CustomGameState.DrawTileOnCanvas
struct ACustomGameState_DrawTileOnCanvas_Params
{
	class AShooterHUD*                                 HUD;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTexture*                                    Tex;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              X;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Y;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              XL;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              YL;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              U;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              V;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              UL;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              VL;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FColor                                      DrawColor;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameState.CreateDeathNotification
struct ACustomGameState_CreateDeathNotification_Params
{
	class AShooterCharacter*                           theShooterChar;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    prevController;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                       InstigatingPawn;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                MaxNumberOfRespawns;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FPlayerDeathNotification                    ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.CustomGameState.CreateDamageEvent
struct ACustomGameState_CreateDamageEvent_Params
{
	struct FDamageEvent                                ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.CustomGameState.CheckTimeSince
struct ACustomGameState_CheckTimeSince_Params
{
	float                                              Time;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Duration;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameState.BroadcastActorCustomEvent
struct ACustomGameState_BroadcastActorCustomEvent_Params
{
	class AActor*                                      Actor;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       EventCustomName;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     EventCustomString;                                         // (Parm, ZeroConstructor)
	class AActor*                                      InstigatorActor;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameState.BreakTribeData
struct ACustomGameState_BreakTribeData_Params
{
	struct FTribeData                                  InData;                                                    // (ConstParm, Parm)
	struct FString                                     TribeName;                                                 // (Parm, OutParm, ZeroConstructor)
	int                                                OwnerPlayerDataID;                                         // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                TribeId;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FString>                             MembersPlayerName;                                         // (Parm, OutParm, ZeroConstructor)
	TArray<int>                                        MembersPlayerDataID;                                       // (Parm, OutParm, ZeroConstructor)
	TArray<int>                                        TribeAdmins;                                               // (Parm, OutParm, ZeroConstructor)
	bool                                               bSetGovernment;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FPrimalPlayerCharacterConfigStructReplicated> MembersConfigs;                                            // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.CustomGameState.BreakPlayerDeathNotification
struct ACustomGameState_BreakPlayerDeathNotification_Params
{
	struct FPlayerDeathNotification                    Data;                                                      // (ConstParm, Parm)
	struct FString                                     PlayerDeathStringEnemy;                                    // (Parm, OutParm, ZeroConstructor)
	struct FString                                     PlayerDeathStringAlly;                                     // (Parm, OutParm, ZeroConstructor)
	struct FString                                     PlayerDeathStringYou;                                      // (Parm, OutParm, ZeroConstructor)
	struct FString                                     DeathReason;                                               // (Parm, OutParm, ZeroConstructor)
	TArray<struct FString>                             DeadPlayerNames;                                           // (Parm, OutParm, ZeroConstructor)
	bool                                               bIsTribeDeath;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     DeathTribeName;                                            // (Parm, OutParm, ZeroConstructor)
	int                                                TargetingTeamID;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     LinkedPlayerID;                                            // (Parm, OutParm, ZeroConstructor)
	TArray<struct FPrimalPlayerCharacterConfigStructReplicated> PlayersData;                                               // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.CustomGameState.BreakBattleTribeData
struct ACustomGameState_BreakBattleTribeData_Params
{
	struct FBattleTribeData                            InData;                                                    // (ConstParm, Parm)
	struct FString                                     TribeName;                                                 // (Parm, OutParm, ZeroConstructor)
	int                                                TribeId;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.CustomGameState.BreakBattlePlayerData
struct ACustomGameState_BreakBattlePlayerData_Params
{
	struct FBattlePlayerData                           Data;                                                      // (ConstParm, Parm)
	struct FString                                     PlayerName;                                                // (Parm, OutParm, ZeroConstructor)
	bool                                               bConnected;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bAlive;                                                    // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                TribeId;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     PlayerId;                                                  // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.CustomGameState.BreakActionReportItem
struct ACustomGameState_BreakActionReportItem_Params
{
	struct FActionReportItem                           Data;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FString                                     PlayerName;                                                // (Parm, OutParm, ZeroConstructor)
	struct FString                                     TribeName;                                                 // (Parm, OutParm, ZeroConstructor)
	struct FString                                     TimeOfDeath;                                               // (Parm, OutParm, ZeroConstructor)
	struct FString                                     LevelOfDeath;                                              // (Parm, OutParm, ZeroConstructor)
	struct FString                                     DeathMessage;                                              // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.ShooterGameUserSettings.GetUserSettings
struct UShooterGameUserSettings_GetUserSettings_Params
{
	class UShooterGameUserSettings*                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameViewportClient.IsAnyUIConsumingInput
struct UShooterGameViewportClient_IsAnyUIConsumingInput_Params
{
	class UClass*                                      PrimalUIClass;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    Owner;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalUI*                                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameViewportClient.GetViewportClient
struct UShooterGameViewportClient_GetViewportClient_Params
{
	class UWorld*                                      ForWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UShooterGameViewportClient*                  ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameViewportClient.GetUIScenesFromClass
struct UShooterGameViewportClient_GetUIScenesFromClass_Params
{
	class UClass*                                      PrimalUIClass;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UPrimalUI*>                           ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.ShooterGameViewportClient.GetUISceneFromClass
struct UShooterGameViewportClient_GetUISceneFromClass_Params
{
	class UClass*                                      PrimalUIClass;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterPlayerController*                    Owner;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalUI*                                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameViewportClient.GetGameWorld
struct UShooterGameViewportClient_GetGameWorld_Params
{
	class UWorld*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameViewportClient.AnyScenesWithMouseCapture
struct UShooterGameViewportClient_AnyScenesWithMouseCapture_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterGameViewportClient.AnyNonInventoryScenesWithMouseCapture
struct UShooterGameViewportClient_AnyNonInventoryScenesWithMouseCapture_Params
{
	class AShooterPlayerController*                    ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterImpactEffect.StaticSpawnImpactEffects
struct AShooterImpactEffect_StaticSpawnImpactEffects_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      ImpactEffectClass;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                                  SurfaceHit;                                                // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector                                     ShotDirection;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               useShotDirectionForImpactEffectActorClassRotation;         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               attachImpactEffectActorToSurfaceHitActor;                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*                    ReturnValue;                                               // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerCameraManager.StartCameraTransition
struct AShooterPlayerCameraManager_StartCameraTransition_Params
{
	float                                              TransitionDuration;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bUseFinalModifiedViewTarget;                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerCameraManager.IsInFrustum
struct AShooterPlayerCameraManager_IsInFrustum_Params
{
	struct FVector                                     BoxLocation;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     BoxExtents;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerCameraManager.GetTPVCollisionHeight
struct AShooterPlayerCameraManager_GetTPVCollisionHeight_Params
{
	class AActor*                                      forTarget;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIncludeHeightScalar;                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerCameraManager.GetColorCodedStencil
struct AShooterPlayerCameraManager_GetColorCodedStencil_Params
{
	TEnumAsByte<ShooterGame_EStencilAlliance>          InAlliance;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              HealthPercent;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	unsigned char                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerCameraManager.GetCameraStyle
struct AShooterPlayerCameraManager_GetCameraStyle_Params
{
	struct FName                                       ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerCameraManager.GetCameraAimViewPoint
struct AShooterPlayerCameraManager_GetCameraAimViewPoint_Params
{
	struct FVector                                     OutCamLoc;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    OutCamRot;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterPlayerCameraManager.GetBlendableFromMIC
struct AShooterPlayerCameraManager_GetBlendableFromMIC_Params
{
	class UMaterialInterface*                          InInterface;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.UsesAmmo
struct AShooterWeapon_UsesAmmo_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.UseAmmo
struct AShooterWeapon_UseAmmo_Params
{
	int                                                UseAmmoAmountOverride;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.ToggleAccessory
struct AShooterWeapon_ToggleAccessory_Params
{
};

// Function ShooterGame.ShooterWeapon.StopWeaponAnimation
struct AShooterWeapon_StopWeaponAnimation_Params
{
	struct FWeaponAnim                                 Animation;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               bReplicate;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bReplicateToInstigator;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.StopSecondaryActionEvent
struct AShooterWeapon_StopSecondaryActionEvent_Params
{
};

// Function ShooterGame.ShooterWeapon.StartUnequipEvent
struct AShooterWeapon_StartUnequipEvent_Params
{
};

// Function ShooterGame.ShooterWeapon.StartUnequip
struct AShooterWeapon_StartUnequip_Params
{
};

// Function ShooterGame.ShooterWeapon.StartSecondaryActionEvent
struct AShooterWeapon_StartSecondaryActionEvent_Params
{
};

// Function ShooterGame.ShooterWeapon.SetAmmoInClip
struct AShooterWeapon_SetAmmoInClip_Params
{
	int                                                newAmmo;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.SetAccessoryEnabled
struct AShooterWeapon_SetAccessoryEnabled_Params
{
	bool                                               bEnabled;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.ServerToggleAccessory
struct AShooterWeapon_ServerToggleAccessory_Params
{
};

// Function ShooterGame.ShooterWeapon.ServerStopSecondaryAction
struct AShooterWeapon_ServerStopSecondaryAction_Params
{
};

// Function ShooterGame.ShooterWeapon.ServerStopFire
struct AShooterWeapon_ServerStopFire_Params
{
};

// Function ShooterGame.ShooterWeapon.ServerStopAltFire
struct AShooterWeapon_ServerStopAltFire_Params
{
};

// Function ShooterGame.ShooterWeapon.ServerStartSecondaryAction
struct AShooterWeapon_ServerStartSecondaryAction_Params
{
};

// Function ShooterGame.ShooterWeapon.ServerStartReload
struct AShooterWeapon_ServerStartReload_Params
{
};

// Function ShooterGame.ShooterWeapon.ServerStartFire
struct AShooterWeapon_ServerStartFire_Params
{
};

// Function ShooterGame.ShooterWeapon.ServerStartAltFire
struct AShooterWeapon_ServerStartAltFire_Params
{
};

// Function ShooterGame.ShooterWeapon.ServerSetColorizeRegion
struct AShooterWeapon_ServerSetColorizeRegion_Params
{
	int                                                theRegion;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bValToUse;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.SelectMeleeAttackAnim
struct AShooterWeapon_SelectMeleeAttackAnim_Params
{
	struct FWeaponAnim                                 ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.ReloadWeapon
struct AShooterWeapon_ReloadWeapon_Params
{
};

// Function ShooterGame.ShooterWeapon.PlayWeaponSound
struct AShooterWeapon_PlayWeaponSound_Params
{
	class USoundCue*                                   Sound;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAudioComponent*                             ReturnValue;                                               // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.PlayWeaponBreakAnimation
struct AShooterWeapon_PlayWeaponBreakAnimation_Params
{
};

// Function ShooterGame.ShooterWeapon.PlayWeaponAnimationEx
struct AShooterWeapon_PlayWeaponAnimationEx_Params
{
	struct FWeaponAnim                                 Animation;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              InPlayRate;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bPlayBothFirstAndThirdPerson;                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bReplicate;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bReplicateToInstigator;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bPauseOnFinish1P;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceTickPoseAndServerUpdateMesh;                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceTickPoseOnServer;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.PlayWeaponAnimation
struct AShooterWeapon_PlayWeaponAnimation_Params
{
	struct FWeaponAnim                                 Animation;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               bPlayBothFirstAndThirdPerson;                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bReplicate;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bReplicateToInstigator;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bPauseOnFinish1P;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceTickPoseAndServerUpdateMesh;                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceTickPoseOnServer;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.PlayUseHarvestAnimation
struct AShooterWeapon_PlayUseHarvestAnimation_Params
{
};

// Function ShooterGame.ShooterWeapon.OnRep_NetLoopedWeaponFire
struct AShooterWeapon_OnRep_NetLoopedWeaponFire_Params
{
};

// Function ShooterGame.ShooterWeapon.OnRep_MyPawn
struct AShooterWeapon_OnRep_MyPawn_Params
{
};

// Function ShooterGame.ShooterWeapon.OnRep_CurrentAmmoInClip
struct AShooterWeapon_OnRep_CurrentAmmoInClip_Params
{
};

// Function ShooterGame.ShooterWeapon.OnRep_AccessoryToggle
struct AShooterWeapon_OnRep_AccessoryToggle_Params
{
};

// Function ShooterGame.ShooterWeapon.OnInstigatorPlayDyingEvent
struct AShooterWeapon_OnInstigatorPlayDyingEvent_Params
{
};

// Function ShooterGame.ShooterWeapon.OnAttachedToPawn
struct AShooterWeapon_OnAttachedToPawn_Params
{
};

// Function ShooterGame.ShooterWeapon.IsPlayingWeaponAnimMontage
struct AShooterWeapon_IsPlayingWeaponAnimMontage_Params
{
	struct FWeaponAnim                                 WeaponAnimMontage;                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              TimeFromEndToConsiderFinished;                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.IsOwningClient
struct AShooterWeapon_IsOwningClient_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.IsLocallyOwned
struct AShooterWeapon_IsLocallyOwned_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.IsInMeleeAttack
struct AShooterWeapon_IsInMeleeAttack_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.IsFiring
struct AShooterWeapon_IsFiring_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.IsClimbing
struct AShooterWeapon_IsClimbing_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.HasInfiniteAmmo
struct AShooterWeapon_HasInfiniteAmmo_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.GetWeaponMesh
struct AShooterWeapon_GetWeaponMesh_Params
{
	class USkeletalMeshComponent*                      ReturnValue;                                               // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.GetWeaponDamageMultiplier
struct AShooterWeapon_GetWeaponDamageMultiplier_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.GetWeaponAttackPlayRate
struct AShooterWeapon_GetWeaponAttackPlayRate_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.GetStandingAnimation
struct AShooterWeapon_GetStandingAnimation_Params
{
	float                                              OutBlendInTime;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OutBlendOutTime;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimSequence*                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.GetPawnOwner
struct AShooterWeapon_GetPawnOwner_Params
{
	class AShooterCharacter*                           ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.GetMuzzleLocation
struct AShooterWeapon_GetMuzzleLocation_Params
{
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.GetMuzzleDirection
struct AShooterWeapon_GetMuzzleDirection_Params
{
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.GetDebugInfoString
struct AShooterWeapon_GetDebugInfoString_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.ShooterWeapon.GetCurrentAmmoInClip
struct AShooterWeapon_GetCurrentAmmoInClip_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.GetCurrentAmmo
struct AShooterWeapon_GetCurrentAmmo_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.GetAdjustedAim
struct AShooterWeapon_GetAdjustedAim_Params
{
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.ForceUpdateClientAmmo
struct AShooterWeapon_ForceUpdateClientAmmo_Params
{
};

// Function ShooterGame.ShooterWeapon.ForceTPVTargetingAnimation
struct AShooterWeapon_ForceTPVTargetingAnimation_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.ForcesTPVCameraOffset
struct AShooterWeapon_ForcesTPVCameraOffset_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.ForceMeshUpdate
struct AShooterWeapon_ForceMeshUpdate_Params
{
	bool                                               bIsFirstPerson;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.FindComponentByName
struct AShooterWeapon_FindComponentByName_Params
{
	struct FName                                       ComponentName;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USceneComponent*                             ReturnValue;                                               // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.DoMeleeAttack
struct AShooterWeapon_DoMeleeAttack_Params
{
};

// Function ShooterGame.ShooterWeapon.DoHandleFiring
struct AShooterWeapon_DoHandleFiring_Params
{
};

// Function ShooterGame.ShooterWeapon.ConsumeAmmoItem
struct AShooterWeapon_ConsumeAmmoItem_Params
{
	int                                                Quantity;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.ClientStopSimulatingWeaponFire
struct AShooterWeapon_ClientStopSimulatingWeaponFire_Params
{
};

// Function ShooterGame.ShooterWeapon.ClientStartReload
struct AShooterWeapon_ClientStartReload_Params
{
};

// Function ShooterGame.ShooterWeapon.ClientStartMuzzleFX
struct AShooterWeapon_ClientStartMuzzleFX_Params
{
};

// Function ShooterGame.ShooterWeapon.ClientSpawnMeleeEffects
struct AShooterWeapon_ClientSpawnMeleeEffects_Params
{
	struct FVector                                     Impact;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ShootDir;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.ClientSimulateWeaponFire
struct AShooterWeapon_ClientSimulateWeaponFire_Params
{
};

// Function ShooterGame.ShooterWeapon.ClientSetClipAmmo
struct AShooterWeapon_ClientSetClipAmmo_Params
{
	int                                                NewClipAmmo;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bOnlyUpdateItem;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.ClientPlayShieldHitAnim
struct AShooterWeapon_ClientPlayShieldHitAnim_Params
{
};

// Function ShooterGame.ShooterWeapon.ClearClientReload
struct AShooterWeapon_ClearClientReload_Params
{
};

// Function ShooterGame.ShooterWeapon.CheckItemAssocation
struct AShooterWeapon_CheckItemAssocation_Params
{
};

// Function ShooterGame.ShooterWeapon.CanReload
struct AShooterWeapon_CanReload_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.CanMeleeAttack
struct AShooterWeapon_CanMeleeAttack_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.CanFire
struct AShooterWeapon_CanFire_Params
{
	bool                                               bForceAllowSubmergedFiring;                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.BPWeaponZoom
struct AShooterWeapon_BPWeaponZoom_Params
{
	bool                                               bZoomingIn;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.BPWeaponDealDamage
struct AShooterWeapon_BPWeaponDealDamage_Params
{
	struct FHitResult                                  Impact;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector                                     ShootDir;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	int                                                DamageAmount;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      DamageType;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Impulse;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.BPWeaponCanFire
struct AShooterWeapon_BPWeaponCanFire_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.BPTryFireWeapon
struct AShooterWeapon_BPTryFireWeapon_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.BPToggleAccessoryFailed
struct AShooterWeapon_BPToggleAccessoryFailed_Params
{
};

// Function ShooterGame.ShooterWeapon.BPToggleAccessory
struct AShooterWeapon_BPToggleAccessory_Params
{
};

// Function ShooterGame.ShooterWeapon.BPStopMeleeAttack
struct AShooterWeapon_BPStopMeleeAttack_Params
{
};

// Function ShooterGame.ShooterWeapon.BPStartEquippedNotify
struct AShooterWeapon_BPStartEquippedNotify_Params
{
};

// Function ShooterGame.ShooterWeapon.BPSpawnMeleeEffects
struct AShooterWeapon_BPSpawnMeleeEffects_Params
{
	struct FVector                                     Impact;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ShootDir;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.BPShouldDealDamage
struct AShooterWeapon_BPShouldDealDamage_Params
{
	class AActor*                                      TestActor;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.BPRequestReload
struct AShooterWeapon_BPRequestReload_Params
{
};

// Function ShooterGame.ShooterWeapon.BPRemainEquipped
struct AShooterWeapon_BPRemainEquipped_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.BPPreventSwitchingWeapon
struct AShooterWeapon_BPPreventSwitchingWeapon_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.BPPostSpawnMuzzleEffect
struct AShooterWeapon_BPPostSpawnMuzzleEffect_Params
{
	class UParticleSystemComponent*                    NewMuzzlePSC;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.BPOverrideRootRotationOffset
struct AShooterWeapon_BPOverrideRootRotationOffset_Params
{
	struct FRotator                                    InRootRotation;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.BPOverrideFPVMasterPoseComponent
struct AShooterWeapon_BPOverrideFPVMasterPoseComponent_Params
{
	class USkeletalMeshComponent*                      ReturnValue;                                               // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.BPOverrideAimDirection
struct AShooterWeapon_BPOverrideAimDirection_Params
{
	struct FVector                                     DesiredAimDirection;                                       // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.BPOnWeaponAnimPlayedNotify
struct AShooterWeapon_BPOnWeaponAnimPlayedNotify_Params
{
	struct FWeaponAnim                                 Animation;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              InPlayRate;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bPlayBothFirstAndThirdPerson;                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bReplicate;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bReplicateToInstigator;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bPauseOnFinish1P;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceTickPoseAndServerUpdateMesh;                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceTickPoseOnServer;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.BPOnStopTargeting
struct AShooterWeapon_BPOnStopTargeting_Params
{
	bool                                               bFromGamepadLeft;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.BPOnStartTargeting
struct AShooterWeapon_BPOnStartTargeting_Params
{
	bool                                               bFromGamepadLeft;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.BPOnScoped
struct AShooterWeapon_BPOnScoped_Params
{
};

// Function ShooterGame.ShooterWeapon.BPOnBurstStarted
struct AShooterWeapon_BPOnBurstStarted_Params
{
};

// Function ShooterGame.ShooterWeapon.BPOnBurstFinished
struct AShooterWeapon_BPOnBurstFinished_Params
{
};

// Function ShooterGame.ShooterWeapon.BPModifyFOV
struct AShooterWeapon_BPModifyFOV_Params
{
	float                                              inFOV;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.BPMeleeAttackStarted
struct AShooterWeapon_BPMeleeAttackStarted_Params
{
};

// Function ShooterGame.ShooterWeapon.BPLostController
struct AShooterWeapon_BPLostController_Params
{
};

// Function ShooterGame.ShooterWeapon.BPIsValidUnStasisCaster
struct AShooterWeapon_BPIsValidUnStasisCaster_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.BPHandleMeleeAttack
struct AShooterWeapon_BPHandleMeleeAttack_Params
{
};

// Function ShooterGame.ShooterWeapon.BPGlobalFireWeapon
struct AShooterWeapon_BPGlobalFireWeapon_Params
{
};

// Function ShooterGame.ShooterWeapon.BPGetTPVCameraOffset
struct AShooterWeapon_BPGetTPVCameraOffset_Params
{
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.BPGetTargetingTooltipInfoLabel
struct AShooterWeapon_BPGetTargetingTooltipInfoLabel_Params
{
	struct FText                                       ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.ShooterWeapon.BPGetSelectedMeleeAttackAnim
struct AShooterWeapon_BPGetSelectedMeleeAttackAnim_Params
{
	struct FWeaponAnim                                 ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.BPGetSeatingAnimation
struct AShooterWeapon_BPGetSeatingAnimation_Params
{
	class UAnimSequence*                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.BPGetDebugInfoString
struct AShooterWeapon_BPGetDebugInfoString_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.ShooterWeapon.BPGetCrosshairColor
struct AShooterWeapon_BPGetCrosshairColor_Params
{
	struct FColor                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.BPGetActorForTargetingTooltip
struct AShooterWeapon_BPGetActorForTargetingTooltip_Params
{
	class AActor*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.BPForceTPVTargetingAnimation
struct AShooterWeapon_BPForceTPVTargetingAnimation_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.BPFireWeapon
struct AShooterWeapon_BPFireWeapon_Params
{
};

// Function ShooterGame.ShooterWeapon.BPFiredWeapon
struct AShooterWeapon_BPFiredWeapon_Params
{
};

// Function ShooterGame.ShooterWeapon.BPDrawHud
struct AShooterWeapon_BPDrawHud_Params
{
	class AShooterHUD*                                 HUD;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.BPConstrainAspectRatio
struct AShooterWeapon_BPConstrainAspectRatio_Params
{
	float                                              OutAspectRatio;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.BPCanToggleAccessory
struct AShooterWeapon_BPCanToggleAccessory_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.BPCanEquip
struct AShooterWeapon_BPCanEquip_Params
{
	class AShooterCharacter*                           ByCharacter;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.BPAppliedPrimalItemToWeapon
struct AShooterWeapon_BPAppliedPrimalItemToWeapon_Params
{
};

// Function ShooterGame.ShooterWeapon.BPAnimNotifyCustomState_End
struct AShooterWeapon_BPAnimNotifyCustomState_End_Params
{
	struct FName                                       CustomEventName;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USkeletalMeshComponent*                      MeshComp;                                                  // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class UAnimSequenceBase*                           Animation;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimNotifyState*                            AnimNotifyObject;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.BPAnimNotifyCustomState_Begin
struct AShooterWeapon_BPAnimNotifyCustomState_Begin_Params
{
	struct FName                                       CustomEventName;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USkeletalMeshComponent*                      MeshComp;                                                  // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class UAnimSequenceBase*                           Animation;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              TotalDuration;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimNotifyState*                            AnimNotifyObject;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.BPAnimNotifyCustomEvent
struct AShooterWeapon_BPAnimNotifyCustomEvent_Params
{
	struct FName                                       CustomEventName;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USkeletalMeshComponent*                      MeshComp;                                                  // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class UAnimSequenceBase*                           Animation;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimNotify*                                 AnimNotifyObject;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.BPAllowNativeFireWeapon
struct AShooterWeapon_BPAllowNativeFireWeapon_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.BPAdjustAmmoPerShot
struct AShooterWeapon_BPAdjustAmmoPerShot_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.BP_OnReloadNotify
struct AShooterWeapon_BP_OnReloadNotify_Params
{
};

// Function ShooterGame.ShooterWeapon.AllowUnequip
struct AShooterWeapon_AllowUnequip_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.AllowTargeting
struct AShooterWeapon_AllowTargeting_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon.AllowedToFire
struct AShooterWeapon_AllowedToFire_Params
{
	bool                                               bForceAllowSubmergedFiring;                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Projectile.SetLockedTarget
struct AShooterWeapon_Projectile_SetLockedTarget_Params
{
	class AActor*                                      Actor;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsLocked;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Projectile.ServerFireProjectileEx
struct AShooterWeapon_Projectile_ServerFireProjectileEx_Params
{
	struct FVector                                     Origin;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector_NetQuantizeNormal                   ShootDir;                                                  // (Parm)
	float                                              Speed;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                RandomSeed;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Projectile.ServerFireProjectile
struct AShooterWeapon_Projectile_ServerFireProjectile_Params
{
	struct FVector                                     Origin;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector_NetQuantizeNormal                   ShootDir;                                                  // (Parm)
};

// Function ShooterGame.ShooterWeapon_Projectile.OnUnHideProjectile
struct AShooterWeapon_Projectile_OnUnHideProjectile_Params
{
};

// Function ShooterGame.ShooterWeapon_Projectile.OnHideProjectile
struct AShooterWeapon_Projectile_OnHideProjectile_Params
{
};

// Function ShooterGame.ShooterWeapon_Projectile.Listener_LockOn_Update
struct AShooterWeapon_Projectile_Listener_LockOn_Update_Params
{
	bool                                               Reset;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Projectile.Listener_LockOn_Stop
struct AShooterWeapon_Projectile_Listener_LockOn_Stop_Params
{
};

// Function ShooterGame.ShooterWeapon_Projectile.GetTrajectoryTarget
struct AShooterWeapon_Projectile_GetTrajectoryTarget_Params
{
	int                                                SubSteps;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              TotalTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                                  ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.ShooterWeapon_Projectile.ClientsFireProjectileEx
struct AShooterWeapon_Projectile_ClientsFireProjectileEx_Params
{
	struct FVector                                     Origin;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector_NetQuantizeNormal                   ShootDir;                                                  // (Parm)
	float                                              Speed;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                RandomSeed;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Projectile.ClientsFireProjectile
struct AShooterWeapon_Projectile_ClientsFireProjectile_Params
{
	struct FVector                                     Origin;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector_NetQuantizeNormal                   ShootDir;                                                  // (Parm)
};

// Function ShooterGame.ShooterWeapon_Projectile.CheckRefireTimer
struct AShooterWeapon_Projectile_CheckRefireTimer_Params
{
};

// Function ShooterGame.ShooterWeapon_Projectile.BPSelectProjectileToFire
struct AShooterWeapon_Projectile_BPSelectProjectileToFire_Params
{
	class UClass*                                      ProjectileClassOverride;                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USoundCue*                                   FireSoundOverride;                                         // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSpawnOnClient;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OverrideMaxSpeed;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Projectile.BPOnSpawnedProjectile
struct AShooterWeapon_Projectile_BPOnSpawnedProjectile_Params
{
	class AShooterProjectile*                          Projectile;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterProjectile.UpdateTargetPhysics
struct AShooterProjectile_UpdateTargetPhysics_Params
{
};

// Function ShooterGame.ShooterProjectile.StopProjectileMovement
struct AShooterProjectile_StopProjectileMovement_Params
{
};

// Function ShooterGame.ShooterProjectile.SpawnImpactEffect
struct AShooterProjectile_SpawnImpactEffect_Params
{
	struct FHitResult                                  Impact;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.ShooterProjectile.Reset
struct AShooterProjectile_Reset_Params
{
};

// Function ShooterGame.ShooterProjectile.ProjectileBounced
struct AShooterProjectile_ProjectileBounced_Params
{
	struct FHitResult                                  ImpactResult;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector                                     ImpactVelocity;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterProjectile.PreventExplosionEmitter
struct AShooterProjectile_PreventExplosionEmitter_Params
{
	struct FHitResult                                  Impact;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterProjectile.OnTouch
struct AShooterProjectile_OnTouch_Params
{
	class AActor*                                      Actor;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterProjectile.OnProjectileStop
struct AShooterProjectile_OnProjectileStop_Params
{
	struct FHitResult                                  HitResult;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.ShooterProjectile.OnImpact
struct AShooterProjectile_OnImpact_Params
{
	struct FHitResult                                  HitResult;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               bFromReplication;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterProjectile.OnExplode
struct AShooterProjectile_OnExplode_Params
{
	struct FHitResult                                  Result;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.ShooterProjectile.NetUpdateTimer
struct AShooterProjectile_NetUpdateTimer_Params
{
};

// Function ShooterGame.ShooterProjectile.NetResetTransformAndVelocity
struct AShooterProjectile_NetResetTransformAndVelocity_Params
{
	struct FVector                                     NewLocation;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    NewRotation;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     NewVelocity;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                              NewMoveIgnoreActors;                                       // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterProjectile.GetSocketForFinalTraceCheckFromInstigatorToDirectDamageVictim
struct AShooterProjectile_GetSocketForFinalTraceCheckFromInstigatorToDirectDamageVictim_Params
{
	struct FName                                       ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterProjectile.ExplodeAtLocation
struct AShooterProjectile_ExplodeAtLocation_Params
{
	struct FVector                                     AtLocation;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     AtNormal;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterProjectile.Explode
struct AShooterProjectile_Explode_Params
{
	struct FHitResult                                  Impact;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.ShooterProjectile.DisableAndDestroy
struct AShooterProjectile_DisableAndDestroy_Params
{
};

// Function ShooterGame.ShooterProjectile.DeactivateProjectileEffects
struct AShooterProjectile_DeactivateProjectileEffects_Params
{
};

// Function ShooterGame.ShooterProjectile.Colorize
struct AShooterProjectile_Colorize_Params
{
};

// Function ShooterGame.ShooterProjectile.ClientOnImpact
struct AShooterProjectile_ClientOnImpact_Params
{
	struct FVector                                     ProjectileLocation;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    ProjectileRotation;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                                  HitResult;                                                 // (Parm)
};

// Function ShooterGame.ShooterProjectile.ClientNetImpactFX
struct AShooterProjectile_ClientNetImpactFX_Params
{
	struct FHitResult                                  HitResult;                                                 // (Parm)
};

// Function ShooterGame.ShooterProjectile.ClientNetExplode
struct AShooterProjectile_ClientNetExplode_Params
{
	struct FHitResult                                  HitResult;                                                 // (Parm)
};

// Function ShooterGame.ShooterProjectile.ClientNetDestroy
struct AShooterProjectile_ClientNetDestroy_Params
{
};

// Function ShooterGame.ShooterProjectile.ClearHomingTarget
struct AShooterProjectile_ClearHomingTarget_Params
{
};

// Function ShooterGame.ShooterProjectile.BPSpawnedFragments
struct AShooterProjectile_BPSpawnedFragments_Params
{
	TArray<class AShooterProjectile*>                  FragmentArray;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function ShooterGame.ShooterProjectile.BPProjectileBounced
struct AShooterProjectile_BPProjectileBounced_Params
{
	struct FHitResult                                  ImpactResult;                                              // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector                                     ImpactVelocity;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterProjectile.BPInitVelocity
struct AShooterProjectile_BPInitVelocity_Params
{
	struct FVector                                     ShootDirection;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterProjectile.BPInitializedVelocity
struct AShooterProjectile_BPInitializedVelocity_Params
{
	struct FVector                                     InVelocity;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              CustomSpeed;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterProjectile.BPIgnoreRadialDamageVictim
struct AShooterProjectile_BPIgnoreRadialDamageVictim_Params
{
	class AActor*                                      Victim;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterProjectile.BPDestroyLikeDamage
struct AShooterProjectile_BPDestroyLikeDamage_Params
{
};

// Function ShooterGame.ShooterProjectile.BPDamageScalarApplied
struct AShooterProjectile_BPDamageScalarApplied_Params
{
	float                                              Scalar;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterProjectile.BPApplyExplosionDamageAndVFX
struct AShooterProjectile_BPApplyExplosionDamageAndVFX_Params
{
	struct FHitResult                                  Impact;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               bForceSpawnExplosionEmitter;                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterProjectile.BP_IgnoreProjectileImpact
struct AShooterProjectile_BP_IgnoreProjectileImpact_Params
{
	struct FHitResult                                  ImpactHit;                                                 // (Parm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterProjectile.ApplyDamageScalar
struct AShooterProjectile_ApplyDamageScalar_Params
{
	float                                              Scalar;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterProjectile.AddMoveIgnoreActor
struct AShooterProjectile_AddMoveIgnoreActor_Params
{
	class AActor*                                      IgnoreActor;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalProjectileArrow.PickUpCheck
struct APrimalProjectileArrow_PickUpCheck_Params
{
};

// Function ShooterGame.VictoryCore.VTraceSphereBP_IgnoreActorsArray
struct UVictoryCore_VTraceSphereBP_IgnoreActorsArray_Params
{
	class UWorld*                                      TheWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Start;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     End;                                                       // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FHitResult                                  HitOut;                                                    // (Parm, OutParm)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                              ExtraIgnoreActors;                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class AActor*                                      InIgnoreActor;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_ECollisionChannel>              Channel;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                CollisionGroups;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bReturnPhysMaterial;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bTraceComplex;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       TraceTag;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DebugDrawDuration;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.VTraceSphereBP
struct UVictoryCore_VTraceSphereBP_Params
{
	class UWorld*                                      TheWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Start;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     End;                                                       // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FHitResult                                  HitOut;                                                    // (Parm, OutParm)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      ActorToIgnore;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_ECollisionChannel>              Channel;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                CollisionGroups;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bReturnPhysMaterial;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bTraceComplex;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       TraceTag;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      OtherActorToIgnore;                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      AnotherActorToIgnore;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DebugDrawDuration;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.VTraceSingleBP_IgnoreActorsArray
struct UVictoryCore_VTraceSingleBP_IgnoreActorsArray_Params
{
	class UWorld*                                      TheWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                                  OutHit;                                                    // (Parm, OutParm)
	struct FVector                                     Start;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     End;                                                       // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                              ExtraIgnoreActors;                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class AActor*                                      InIgnoreActor;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_ECollisionChannel>              TraceChannel;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                CollisionGroups;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       TraceTag;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bReturnPhysMaterial;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bTraceComplex;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DebugDrawDuration;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.VTraceSingleBP
struct UVictoryCore_VTraceSingleBP_Params
{
	class UWorld*                                      TheWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                                  OutHit;                                                    // (Parm, OutParm)
	struct FVector                                     Start;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     End;                                                       // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_ECollisionChannel>              TraceChannel;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                CollisionGroups;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       TraceTag;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bTraceComplex;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      ActorToIgnore;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DebugDrawDuration;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.VTraceShapeBP
struct UVictoryCore_VTraceShapeBP_Params
{
	class UWorld*                                      TheWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Start;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     End;                                                       // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FHitResult                                  HitOut;                                                    // (Parm, OutParm)
	TArray<class AActor*>                              ExtraIgnoreActors;                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class AActor*                                      InIgnoreActor;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ShapeRadius;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ShapeHalfHeight;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ShapeBoxExtent;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    ShapeRotation;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_ECollisionChannel>              Channel;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                CollisionGroups;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bReturnPhysMaterial;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bTraceComplex;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       TraceTag;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DebugDrawDuration;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.VTraceMultiBP_IgnoreActorsArray
struct UVictoryCore_VTraceMultiBP_IgnoreActorsArray_Params
{
	class UWorld*                                      TheWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FHitResult>                          OutHits;                                                   // (Parm, OutParm, ZeroConstructor)
	struct FVector                                     Start;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     End;                                                       // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                              ExtraIgnoreActors;                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class AActor*                                      InIgnoreActor;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                CollisionGroups;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              SphereRadius;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     BoxExtent;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               bReturnPhysMaterial;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_ECollisionChannel>              TraceChannel;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bTraceComplex;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       TraceTag;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bTraceChannelForceOverlap;                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDoSort;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bJustDoSphereOverlapAtStartLoc;                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DebugDrawDuration;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.VTraceMultiBP
struct UVictoryCore_VTraceMultiBP_Params
{
	class UWorld*                                      TheWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FHitResult>                          OutHits;                                                   // (Parm, OutParm, ZeroConstructor)
	struct FVector                                     Start;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     End;                                                       // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	class AActor*                                      InIgnoreActor;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                CollisionGroups;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              SphereRadius;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     BoxExtent;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               bReturnPhysMaterial;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_ECollisionChannel>              TraceChannel;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bTraceComplex;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       TraceTag;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bTraceChannelForceOverlap;                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDoSort;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      AdditionalIgnoreActor;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      AnotherIgnoreActor;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bJustDoSphereOverlapAtStartLoc;                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DebugDrawDuration;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.VTraceAgainstActorExpensive
struct UVictoryCore_VTraceAgainstActorExpensive_Params
{
	class UWorld*                                      TheWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Start;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     End;                                                       // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FHitResult                                  HitOut;                                                    // (Parm, OutParm)
	class AActor*                                      ActorToTraceAgainst;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_ECollisionChannel>              Channel;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                CollisionGroups;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              SphereRadius;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bReturnPhysMaterial;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bTraceComplex;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     BoxExtent;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FName                                       TraceTag;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSort;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.VNewObjectTransient
struct UVictoryCore_VNewObjectTransient_Params
{
	class UClass*                                      classToUse;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.VNewObjectFromBlueprintOuter
struct UVictoryCore_VNewObjectFromBlueprintOuter_Params
{
	class UObject*                                     OuterObject;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      classToUse;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.VNewObjectFromBlueprint
struct UVictoryCore_VNewObjectFromBlueprint_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      classToUse;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.VisualLog_Print
struct UVictoryCore_VisualLog_Print_Params
{
	class AActor*                                      Actor;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     Message;                                                   // (Parm, ZeroConstructor)
	bool                                               bIsError;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.VisualLog_Location
struct UVictoryCore_VisualLog_Location_Params
{
	class AActor*                                      Actor;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     Message;                                                   // (Parm, ZeroConstructor)
	bool                                               bIsError;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Location;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                PointColor;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Size;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bAlsoPrintMessage;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.VisualLog_LineSegment
struct UVictoryCore_VisualLog_LineSegment_Params
{
	class AActor*                                      Actor;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     Message;                                                   // (Parm, ZeroConstructor)
	bool                                               bIsError;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Start;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     End;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                LineColor;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Thickness;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bAlsoPrintMessage;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.VisualLog_Histogram
struct UVictoryCore_VisualLog_Histogram_Params
{
	class AActor*                                      Actor;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                                   DataSample;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       GraphName;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       DataName;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.VisualLog_AxisAlignedBox
struct UVictoryCore_VisualLog_AxisAlignedBox_Params
{
	class AActor*                                      Actor;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     Message;                                                   // (Parm, ZeroConstructor)
	bool                                               bIsError;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     BoxMin;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     BoxMax;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                BoxColor;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bAlsoPrintMessage;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.ViewTrailer
struct UVictoryCore_ViewTrailer_Params
{
	bool                                               bAnimatedSeriesTrailer;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bARK2Trailer;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.ViewDirectionAngleOffset
struct UVictoryCore_ViewDirectionAngleOffset_Params
{
	struct FVector                                     ViewDirection;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     RightVector;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              AngleOffsetDegrees;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MaxAngleDegreesBeforeInterpToUp;                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.VectorDistance
struct UVictoryCore_VectorDistance_Params
{
	struct FVector                                     A;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     B;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.UseCooldown
struct UVictoryCore_UseCooldown_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                             CooldownClock;                                             // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.UnRegisterComponentBP
struct UVictoryCore_UnRegisterComponentBP_Params
{
	class UActorComponent*                             Component;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.TrimArray_Vector
struct UVictoryCore_TrimArray_Vector_Params
{
	TArray<struct FVector>                             Array;                                                     // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                MaxLength;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bRemoveFromEnd;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.TrimArray_Float
struct UVictoryCore_TrimArray_Float_Params
{
	TArray<float>                                      Array;                                                     // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                MaxLength;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bRemoveFromEnd;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.TransformVectorByScreenProjectionGlobalTransform
struct UVictoryCore_TransformVectorByScreenProjectionGlobalTransform_Params
{
	struct FVector2D                                   outVec;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.TraceProjectileArc
struct UVictoryCore_TraceProjectileArc_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FProjectileArc                              Arc;                                                       // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FHitResult                                  HitResult;                                                 // (Parm, OutParm)
	struct FVector                                     EndLocation;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              EndArcTime;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ArcPeakLocation;                                           // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MaxArcLength;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                              ActorsToIgnore;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	float                                              ArcTimeStep;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_ECollisionChannel>              CollisionChannel;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bTraceObjectTypeOnly;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDrawDebug;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DebugDrawDuration;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.TimeSince_Utc
struct UVictoryCore_TimeSince_Utc_Params
{
	double                                             OldTime;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.TimeSince_Network
struct UVictoryCore_TimeSince_Network_Params
{
	class UWorld*                                      ForWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                             OldTime;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.TimeSince
struct UVictoryCore_TimeSince_Params
{
	class UWorld*                                      ForWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                             OldTime;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.TimeSeconds
struct UVictoryCore_TimeSeconds_Params
{
	class UWorld*                                      ForWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                             ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.SupportsShaderModel5
struct UVictoryCore_SupportsShaderModel5_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.StringToIntAscii
struct UVictoryCore_StringToIntAscii_Params
{
	struct FString                                     SourceString;                                              // (Parm, ZeroConstructor)
	int                                                StringIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.StringReferenceToClass
struct UVictoryCore_StringReferenceToClass_Params
{
	struct FString                                     StringReference;                                           // (Parm, ZeroConstructor)
	class UClass*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.StopMusic
struct UVictoryCore_StopMusic_Params
{
};

// Function ShooterGame.VictoryCore.StopCompanionEventForPlayer
struct UVictoryCore_StopCompanionEventForPlayer_Params
{
	class APrimalCharacter*                            Player;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.SteamOverlayOpenURL
struct UVictoryCore_SteamOverlayOpenURL_Params
{
	struct FString                                     ToURL;                                                     // (Parm, ZeroConstructor)
};

// Function ShooterGame.VictoryCore.StaticGetTimeSince
struct UVictoryCore_StaticGetTimeSince_Params
{
	class UWorld*                                      TheWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                             Time;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.StaticCheckForCommand
struct UVictoryCore_StaticCheckForCommand_Params
{
	struct FString                                     CommandName;                                               // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.StartCompanionEventForPlayer
struct UVictoryCore_StartCompanionEventForPlayer_Params
{
	class APrimalCharacter*                            Player;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FCompanionEventData                         EventData;                                                 // (Parm, OutParm, ReferenceParm)
	class AActor*                                      EventActor;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.SplineLineTrace
struct UVictoryCore_SplineLineTrace_Params
{
	class USplineComponent*                            SplineComponent;                                           // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                              ActorsToIgnore;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FHitResult>                          OutHits;                                                   // (Parm, OutParm, ZeroConstructor)
	int                                                NumTracesPerSegment;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_ECollisionChannel>              Channel;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bStopOnBlockingHit;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DebugDrawDuration;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.SphereOverlapFast
struct UVictoryCore_SphereOverlapFast_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Loc;                                                       // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.SpawnSaddleAttachedStructure
struct UVictoryCore_SpawnSaddleAttachedStructure_Params
{
	class APrimalDinoCharacter*                        ParentDino;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      StructureToSpawn;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Location;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    Rotation;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalStructure*                            ParentStructure;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bLinkToParent;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ConfigIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       SKAttachmentSocketOrBoneName;                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalStructure*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.SpawnCustomDino
struct UVictoryCore_SpawnCustomDino_Params
{
	class UWorld*                                      World;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     SpawnLocation;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    SpawnRotation;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FDinoSetup                                  DinoSetup;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	class AShooterPlayerController*                    OwnerPlayerController;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DebugDrawDuration;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bApplyRotationToSpawnOffset;                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bUseExactSpawnLocation;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSkipAddingTamedLevels;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSuppressTamingNotifications;                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AMissionType*                                Mission;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      ColorSet;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalDinoCharacter*                        ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.SpawnBoxBrushActorFast
struct UVictoryCore_SpawnBoxBrushActorFast_Params
{
	class UClass*                                      BrushType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct UObject_FTransform                          BrushTransform;                                            // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     BoxExtent;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABrush*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.SpawnBoxBrushActor
struct UVictoryCore_SpawnBoxBrushActor_Params
{
	class UClass*                                      BrushType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct UObject_FTransform                          BrushTransform;                                            // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     BoxExtent;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABrush*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.SpawnActorInWorld
struct UVictoryCore_SpawnActorInWorld_Params
{
	class UWorld*                                      ForWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      anActorClass;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     AtLocation;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    AtRotation;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class USceneComponent*                             attachToComponent;                                         // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	int                                                dataIndex;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       attachSocketName;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      OwnerActor;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                       InstigatorPawn;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.SpawnActorDeferred
struct UVictoryCore_SpawnActorDeferred_Params
{
	class UClass*                                      Class;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWorld*                                      inWorld;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Location;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    Rotation;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	class AActor*                                      Owner;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                       Instigator;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bNoCollisionFail;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.SortPointsByDistance
struct UVictoryCore_SortPointsByDistance_Params
{
	struct FVector                                     fromLoc;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	TArray<struct FVector>                             Points;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FVector>                             ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.SortActorsByType
struct UVictoryCore_SortActorsByType_Params
{
	TArray<class AActor*>                              actors;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class AActor*>                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.SortActorsByTag
struct UVictoryCore_SortActorsByTag_Params
{
	int                                                tagIndex;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                              actors;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class AActor*>                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.SortActorsByDistanceReturnNearest
struct UVictoryCore_SortActorsByDistanceReturnNearest_Params
{
	struct FVector                                     fromLoc;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                              actors;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bRemoveNullEntries;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.SortActorsByDistance
struct UVictoryCore_SortActorsByDistance_Params
{
	struct FVector                                     fromLoc;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                              actors;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class AActor*>                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.SimpleReplaceUnicodeWithSupportedAlternatives
struct UVictoryCore_SimpleReplaceUnicodeWithSupportedAlternatives_Params
{
	struct FString                                     OriginalString;                                            // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.SimpleFloatString
struct UVictoryCore_SimpleFloatString_Params
{
	float                                              inputVal;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.SimpleCurveInterpClampedVector
struct UVictoryCore_SimpleCurveInterpClampedVector_Params
{
	struct FVector                                     A;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     B;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Alpha;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_ESimpleCurve>              CurveType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.SimpleCurveInterpClampedTransform
struct UVictoryCore_SimpleCurveInterpClampedTransform_Params
{
	struct UObject_FTransform                          A;                                                         // (Parm, IsPlainOldData, NoDestructor)
	struct UObject_FTransform                          B;                                                         // (Parm, IsPlainOldData, NoDestructor)
	float                                              Alpha;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_ESimpleCurve>              CurveType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct UObject_FTransform                          ReturnValue;                                               // (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.SimpleCurveInterpClampedRotator
struct UVictoryCore_SimpleCurveInterpClampedRotator_Params
{
	struct FRotator                                    A;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    B;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Alpha;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bShortestPath;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_ESimpleCurve>              CurveType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.SimpleCurveInterpClampedLinearColor
struct UVictoryCore_SimpleCurveInterpClampedLinearColor_Params
{
	struct FLinearColor                                A;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                B;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Alpha;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_ESimpleCurve>              CurveType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.SimpleCurveInterpClamped
struct UVictoryCore_SimpleCurveInterpClamped_Params
{
	float                                              A;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              B;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Alpha;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_ESimpleCurve>              CurveType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.SimpleCurveEval
struct UVictoryCore_SimpleCurveEval_Params
{
	float                                              Value;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_ESimpleCurve>              CurveType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.ShowEditorNotification
struct UVictoryCore_ShowEditorNotification_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     Message;                                                   // (Parm, ZeroConstructor)
	TEnumAsByte<ShooterGame_EEditorMessageLogLevel>    LogLevel;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Duration;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bServerOnly;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.SetTickGroupBP
struct UVictoryCore_SetTickGroupBP_Params
{
	class UActorComponent*                             Component;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_ETickingGroup>                  TickGroup;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.SetSessionPrefix
struct UVictoryCore_SetSessionPrefix_Params
{
	struct FString                                     InPrefix;                                                  // (Parm, ZeroConstructor)
};

// Function ShooterGame.VictoryCore.SetSelectedLevelActors
struct UVictoryCore_SetSelectedLevelActors_Params
{
	TArray<class AActor*>                              ActorsToSelect;                                            // (Parm, ZeroConstructor)
	bool                                               bClearPreviousSelection;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.SetMultiUseEntryPriority
struct UVictoryCore_SetMultiUseEntryPriority_Params
{
	TArray<struct FMultiUseEntry>                      Entries;                                                   // (Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	bool                                               bFindByUseIndexInsteadOfArrayIndex;                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                index;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                NewPriority;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.SetMousePosition
struct UVictoryCore_SetMousePosition_Params
{
	class APlayerController*                           Controller;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              X;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Y;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.SetMaterialColorizationFromItemColors
struct UVictoryCore_SetMaterialColorizationFromItemColors_Params
{
	class UPrimalItem*                                 Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*                    dynamicMic;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.SetLevelActorFolderPath
struct UVictoryCore_SetLevelActorFolderPath_Params
{
	class AActor*                                      Actor;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       FolderPath;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.SetLastMapPlayed
struct UVictoryCore_SetLastMapPlayed_Params
{
	struct FString                                     NewLastMapPlayed;                                          // (Parm, ZeroConstructor)
};

// Function ShooterGame.VictoryCore.SetDinoSetupPointsPerStat
struct UVictoryCore_SetDinoSetupPointsPerStat_Params
{
	struct FDinoSetup                                  DinoSetup;                                                 // (Parm, OutParm, ReferenceParm)
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> StatusType;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                Value;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsPlayerAdded;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bAddInsteadOfSet;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.SetBoolArrayElemTrue
struct UVictoryCore_SetBoolArrayElemTrue_Params
{
	TArray<bool>                                       TheArray;                                                  // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                TheIndex;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.SetBoolArrayElemFalse
struct UVictoryCore_SetBoolArrayElemFalse_Params
{
	TArray<bool>                                       TheArray;                                                  // (Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                TheIndex;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.SetAllowControllerInputWithCursor
struct UVictoryCore_SetAllowControllerInputWithCursor_Params
{
	bool                                               bAllow;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.ServerSearchFoliageByResource
struct UVictoryCore_ServerSearchFoliageByResource_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Origin;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FOverlappedFoliageElement>           OutFoliage;                                                // (Parm, OutParm, ZeroConstructor, ContainsInstancedReference)
	TArray<class UClass*>                              HarvestResources;                                          // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bVisibleAndActiveOnly;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIncludeUsableFoliage;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIncludeMeshFoliage;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSortByDistance;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bReverseSort;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.ServerSearchFoliage
struct UVictoryCore_ServerSearchFoliage_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Origin;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FOverlappedFoliageElement>           OutFoliage;                                                // (Parm, OutParm, ZeroConstructor, ContainsInstancedReference)
	bool                                               bVisibleAndActiveOnly;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIncludeUsableFoliage;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIncludeMeshFoliage;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSortByDistance;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bReverseSort;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.ServerOctreeOverlapActorsClassBitMask
struct UVictoryCore_ServerOctreeOverlapActorsClassBitMask_Params
{
	class UWorld*                                      TheWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     AtLoc;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                OctreeTypeBitMask;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      ActorClass;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceActorLocationDistanceCheck;                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.ServerOctreeOverlapActorsClass
struct UVictoryCore_ServerOctreeOverlapActorsClass_Params
{
	class UWorld*                                      TheWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     AtLoc;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_EServerOctreeGroup>        OctreeType;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      ActorClass;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceActorLocationDistanceCheck;                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.ServerOctreeOverlapActorsBitMask
struct UVictoryCore_ServerOctreeOverlapActorsBitMask_Params
{
	class UWorld*                                      TheWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     AtLoc;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                OctreeTypeBitMask;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceActorLocationDistanceCheck;                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.ServerOctreeOverlapActors
struct UVictoryCore_ServerOctreeOverlapActors_Params
{
	class UWorld*                                      TheWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     AtLoc;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_EServerOctreeGroup>        OctreeType;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceActorLocationDistanceCheck;                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.ServerCheckMeshingOnActor
struct UVictoryCore_ServerCheckMeshingOnActor_Params
{
	class AActor*                                      OnActor;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceUseActorCenterBounds;                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.SelectVectorIfWithinRange
struct UVictoryCore_SelectVectorIfWithinRange_Params
{
	struct FVector                                     A;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     B;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               PickedA;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MaxDistance;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.SelectCloserVector
struct UVictoryCore_SelectCloserVector_Params
{
	struct FVector                                     Origin;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     A;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     B;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               PickedA;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.RotateDirToTargetWithAngleLimits
struct UVictoryCore_RotateDirToTargetWithAngleLimits_Params
{
	struct FVector                                     RotateDir;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     TowardsDir;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    WithAngleLimits;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceZeroRoll;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.ReupdateCaptures
struct UVictoryCore_ReupdateCaptures_Params
{
	class UWorld*                                      ForWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bReinitSkylights;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.ResetMousePositionToCenter
struct UVictoryCore_ResetMousePositionToCenter_Params
{
	class APlayerController*                           Controller;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.ResetCooldown
struct UVictoryCore_ResetCooldown_Params
{
	double                                             CooldownClock;                                             // (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.RemoveRollFromRotator
struct UVictoryCore_RemoveRollFromRotator_Params
{
	struct FRotator                                    FromRotator;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.RemovePitchAndRollFromRotator
struct UVictoryCore_RemovePitchAndRollFromRotator_Params
{
	struct FRotator                                    FromRotator;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.RemoveInvalidObjectsInContainer
struct UVictoryCore_RemoveInvalidObjectsInContainer_Params
{
	TArray<TWeakObjectPtr<class APrimalDinoCharacter>> fContainer;                                                // (Parm, ZeroConstructor)
	TArray<TWeakObjectPtr<class APrimalDinoCharacter>> ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.RemoveFromActorList
struct UVictoryCore_RemoveFromActorList_Params
{
	class UWorld*                                      ForWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ActorListNum;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      ActorRef;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.RemoveActorFromCustomActorList
struct UVictoryCore_RemoveActorFromCustomActorList_Params
{
	class UWorld*                                      ForWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       SearchCustomTag;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      ActorToRemove;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.RegisterComponentBP
struct UVictoryCore_RegisterComponentBP_Params
{
	class UActorComponent*                             Component;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.RefreshApplySoundVolumes
struct UVictoryCore_RefreshApplySoundVolumes_Params
{
};

// Function ShooterGame.VictoryCore.RefreshApplySoundAndMusicVolumes
struct UVictoryCore_RefreshApplySoundAndMusicVolumes_Params
{
};

// Function ShooterGame.VictoryCore.RecordMeshingMetrics
struct UVictoryCore_RecordMeshingMetrics_Params
{
	class AActor*                                      forActor;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bWasDestroyed;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.ReallySupportsShaderModel5
struct UVictoryCore_ReallySupportsShaderModel5_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.RandomPointInBoundingBoxFromStream
struct UVictoryCore_RandomPointInBoundingBoxFromStream_Params
{
	struct FVector                                     Origin;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     BoxExtent;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRandomStream                               Stream;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.PureDefaultObject
struct UVictoryCore_PureDefaultObject_Params
{
	class UObject*                                     FromObjectInstance;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.PureClassDefaultObject
struct UVictoryCore_PureClassDefaultObject_Params
{
	class UClass*                                      FromClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.ProjectWorldLocationToScreenOrScreenEdgePosition
struct UVictoryCore_ProjectWorldLocationToScreenOrScreenEdgePosition_Params
{
	class APlayerController*                           PlayerController;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     WorldLocation;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                                   ScreenPosition;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              screenMarginPercent;                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               widgetSpace;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               OnScreen;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bAdjustWithScreenDPI;                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.ProjectVectorOntoInsideOfSphere
struct UVictoryCore_ProjectVectorOntoInsideOfSphere_Params
{
	struct FVector                                     ProjectVector;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     ProjectVectorLocation;                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     SphereOrigin;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               bOnlyProjectIfVectorIsLeavingSphere;                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.ProjectScreenLocationIntoWorld
struct UVictoryCore_ProjectScreenLocationIntoWorld_Params
{
	class APlayerController*                           ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                                   ScreenLocation;                                            // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ProjectionDist;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.ProjectLocationToEdgeOfSphere
struct UVictoryCore_ProjectLocationToEdgeOfSphere_Params
{
	bool                                               bOutDidProject;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ForLocation;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     SphereOrigin;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              SphereRadius;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               bOnlyProjectIfWithinRadius;                                // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceProjection2D;                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDebug;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DebugContextActor;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DebugDuration;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.PrintMessageInShippingBuild
struct UVictoryCore_PrintMessageInShippingBuild_Params
{
	struct FString                                     Msg;                                                       // (Parm, ZeroConstructor)
};

// Function ShooterGame.VictoryCore.PrecisionRound
struct UVictoryCore_PrecisionRound_Params
{
	float                                              inputVal;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                Precision;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.PointsRandomDist
struct UVictoryCore_PointsRandomDist_Params
{
	struct FVector                                     Location;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	int                                                NumPoints;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              PointRadius;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FVector>                             ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.PointsOnAGrid
struct UVictoryCore_PointsOnAGrid_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Center;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    Rotation;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MinSize;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                NumPoints;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DebugDrawDuration;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FVector>                             ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.PointsOnACircle
struct UVictoryCore_PointsOnACircle_Params
{
	struct FVector                                     Center;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                NumPoints;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FVector>                             ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.PointOnSphere
struct UVictoryCore_PointOnSphere_Params
{
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DegreesI;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DegreesJ;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.PointOnCircle
struct UVictoryCore_PointOnCircle_Params
{
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              AngleDegrees;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.PlayMusic
struct UVictoryCore_PlayMusic_Params
{
	struct FString                                     MusicFile;                                                 // (Parm, ZeroConstructor)
	float                                              OverrideVolume;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.PlayerOwnsScorchedEarthServer
struct UVictoryCore_PlayerOwnsScorchedEarthServer_Params
{
	class AShooterPlayerController*                    Controller;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.PlayerOwnsGenesisSeasonPassServer
struct UVictoryCore_PlayerOwnsGenesisSeasonPassServer_Params
{
	class AShooterPlayerController*                    Controller;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.PlayerOwnsExtinctionServer
struct UVictoryCore_PlayerOwnsExtinctionServer_Params
{
	class AShooterPlayerController*                    Controller;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.PlayerOwnsAberrationServer
struct UVictoryCore_PlayerOwnsAberrationServer_Params
{
	class AShooterPlayerController*                    Controller;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.PlayCompanionReactionToPlayers
struct UVictoryCore_PlayCompanionReactionToPlayers_Params
{
	TArray<class APrimalCharacter*>                    PlayersWhoGetReaction;                                     // (Parm, ZeroConstructor)
	struct FCompanionReactionData                      ReactionData;                                              // (Parm, OutParm, ReferenceParm)
	bool                                               ForcePlayNow;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInterface*                          DialogueIconOverride;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               RestrictedEnvironmentalReaction;                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                UniqueID;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.PlayCompanionReactionOnSolePlayer
struct UVictoryCore_PlayCompanionReactionOnSolePlayer_Params
{
	class APrimalCharacter*                            PlayersWhoGetReaction;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FCompanionReactionData                      ReactionData;                                              // (Parm, OutParm, ReferenceParm)
	bool                                               ForcePlayNow;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInterface*                          DialogueIconOverride;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               RestrictedEnvironmentalReaction;                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                UniqueID;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.PlaceStructure
struct UVictoryCore_PlaceStructure_Params
{
	class AShooterCharacter*                           placingPawn;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      StructureToPlace;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FItemNetID                                  ItemId;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               DisplayFailMessage;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.OwnsSteamAppID
struct UVictoryCore_OwnsSteamAppID_Params
{
	int                                                AppID;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.OwnsScorchedEarth
struct UVictoryCore_OwnsScorchedEarth_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.OwnsGenesisSeasonPass
struct UVictoryCore_OwnsGenesisSeasonPass_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.OwnsGenesis
struct UVictoryCore_OwnsGenesis_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.OwnsExtinction
struct UVictoryCore_OwnsExtinction_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.OwnsDLC
struct UVictoryCore_OwnsDLC_Params
{
	struct FString                                     DLCName;                                                   // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.OwnsCrystalIsles
struct UVictoryCore_OwnsCrystalIsles_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.OwnsAberration
struct UVictoryCore_OwnsAberration_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.OverlappingStationaryObjectsTraceBP
struct UVictoryCore_OverlappingStationaryObjectsTraceBP_Params
{
	class UWorld*                                      TheWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalCharacter*                            SourceCharacter;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FOverlapResult>                      Overlaps;                                                  // (Parm, OutParm, ZeroConstructor)
	struct FVector                                     Origin;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_ECollisionChannel>              TraceChannel;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      InIgnoreActor;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       TraceName;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bComplexOverlapTest;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.OverlappingActorsTraceBP
struct UVictoryCore_OverlappingActorsTraceBP_Params
{
	class UWorld*                                      TheWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FOverlapResult>                      Overlaps;                                                  // (Parm, OutParm, ZeroConstructor)
	struct FVector                                     Origin;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_ECollisionChannel>              TraceChannel;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      InIgnoreActor;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       TraceName;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bComplexOverlapTest;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.OverlappingActorsBP
struct UVictoryCore_OverlappingActorsBP_Params
{
	class UWorld*                                      TheWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FOverlapResult>                      Overlaps;                                                  // (Parm, OutParm, ZeroConstructor)
	struct FVector                                     Origin;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                CollisionGroups;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      InIgnoreActor;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       TraceName;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bComplexOverlapTest;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.OpenStorePageForDLC
struct UVictoryCore_OpenStorePageForDLC_Params
{
	struct FString                                     DLCName;                                                   // (Parm, ZeroConstructor)
};

// Function ShooterGame.VictoryCore.ObjectRefToClassRef
struct UVictoryCore_ObjectRefToClassRef_Params
{
	class UObject*                                     InObject;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.ObjectIsChildOf
struct UVictoryCore_ObjectIsChildOf_Params
{
	class UObject*                                     Object;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      ObjectType;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bExactMatch;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.NormalizeRotator
struct UVictoryCore_NormalizeRotator_Params
{
	struct FRotator                                    InRotator;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.NetworkTimeToRealWorldUtcTime
struct UVictoryCore_NetworkTimeToRealWorldUtcTime_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                             NetworkTime;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                             ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.MultiTraceProjectSphere
struct UVictoryCore_MultiTraceProjectSphere_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FHitResult>                          OutResults;                                                // (Parm, OutParm, ZeroConstructor)
	struct FVector                                     Origin;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_ECollisionChannel>              TraceChannel;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                HorizResolution;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                VertResolution;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              StartDistance;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              EndDistance;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              NorthConeSubtractAngle;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              SouthConeSubtractAngle;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                PctChanceToTrace;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                MaxTraceCount;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDrawDebugLines;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DebugDrawDuration;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bStopOnFirstHit;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.MultiLinePenetrationTraceByChannel
struct UVictoryCore_MultiLinePenetrationTraceByChannel_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FPenetrationTraceHit>                OutResults;                                                // (Parm, OutParm, ZeroConstructor)
	struct FVector                                     Start;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     End;                                                       // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_ECollisionChannel>              TraceChannel;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                              ActorsToIgnore;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bTraceComplex;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIgnoreSelf;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDrawDebugLines;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DebugDrawDuration;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.MulticastDrawDebugString
struct UVictoryCore_MulticastDrawDebugString_Params
{
	class AActor*                                      ReplicatedActor;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FVector                                     TextLocation;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     Text;                                                      // (Parm, ZeroConstructor)
	class AActor*                                      TestBaseActor;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                TextColor;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Duration;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.MulticastDrawDebugSphere
struct UVictoryCore_MulticastDrawDebugSphere_Params
{
	class AActor*                                      ReplicatedActor;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FVector                                     Center;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                Segments;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                LineColor;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Duration;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.MulticastDrawDebugPoint
struct UVictoryCore_MulticastDrawDebugPoint_Params
{
	class AActor*                                      ReplicatedActor;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FVector                                     Position;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Size;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                PointColor;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Duration;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.MulticastDrawDebugLine
struct UVictoryCore_MulticastDrawDebugLine_Params
{
	class AActor*                                      ReplicatedActor;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FVector                                     LineStart;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     LineEnd;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                LineColor;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Duration;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Thickness;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               allowInShipping;                                           // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.MulticastDrawDebugCylinder
struct UVictoryCore_MulticastDrawDebugCylinder_Params
{
	class AActor*                                      ReplicatedActor;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FVector                                     Start;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     End;                                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                Segments;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                LineColor;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Duration;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.MulticastDrawDebugCoordinateSystem
struct UVictoryCore_MulticastDrawDebugCoordinateSystem_Params
{
	class AActor*                                      ReplicatedActor;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FVector                                     AxisLoc;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    AxisRot;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Scale;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Duration;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Thickness;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.MulticastDrawDebugCapsuleWithExtents
struct UVictoryCore_MulticastDrawDebugCapsuleWithExtents_Params
{
	class AActor*                                      ReplicatedActor;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FVector                                     Top;                                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Bottom;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                LineColor;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Duration;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bPersistent;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.MulticastDrawDebugCapsule
struct UVictoryCore_MulticastDrawDebugCapsule_Params
{
	class AActor*                                      ReplicatedActor;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FVector                                     Center;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              HalfHeight;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    Rotation;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                LineColor;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Duration;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.MulticastDrawDebugCamera
struct UVictoryCore_MulticastDrawDebugCamera_Params
{
	class AActor*                                      ReplicatedActor;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	class ACameraActor*                                CameraActor;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                CameraColor;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Duration;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.MulticastDrawDebugBox
struct UVictoryCore_MulticastDrawDebugBox_Params
{
	class AActor*                                      ReplicatedActor;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FVector                                     Center;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Extent;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                LineColor;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    Rotation;                                                  // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Duration;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.MulticastDrawDebugArrow
struct UVictoryCore_MulticastDrawDebugArrow_Params
{
	class AActor*                                      ReplicatedActor;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FVector                                     LineStart;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     LineEnd;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ArrowSize;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                LineColor;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Duration;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.ModifyDinoSetupTargetLevel
struct UVictoryCore_ModifyDinoSetupTargetLevel_Params
{
	struct FDinoSetup                                  DinoSetup;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              LevelMultiplier;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                MinLevel;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                MaxLevel;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDinoSetup                                  ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.VictoryCore.MarkGen2IntroAsSeen
struct UVictoryCore_MarkGen2IntroAsSeen_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.MapRangeToCurveClamped
struct UVictoryCore_MapRangeToCurveClamped_Params
{
	float                                              Value;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InRangeA;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InRangeB;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OutRangeA;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OutRangeB;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_ESimpleCurve>              CurveType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.MapAngleRangeToCurveClamped
struct UVictoryCore_MapAngleRangeToCurveClamped_Params
{
	float                                              AngleDegrees;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InRangeA;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InRangeB;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OutRangeA;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              OutRangeB;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_ESimpleCurve>              CurveType;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.MakePlaneWithPoints
struct UVictoryCore_MakePlaneWithPoints_Params
{
	struct FVector                                     A;                                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     B;                                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     C;                                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FPlane                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.MakeHitResult
struct UVictoryCore_MakeHitResult_Params
{
	struct FVector                                     Location;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Normal;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPhysicalMaterial*                           PhysMat;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      HitActor;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                         HitComponent;                                              // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FName                                       HitBoneName;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                HitItem;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bBlockingHit;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                                  ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.VictoryCore.LeadTargetPosition
struct UVictoryCore_LeadTargetPosition_Params
{
	struct FVector                                     ProjLocation;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              ProjSpeed;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     TargetLocation;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     TargetVelocity;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.LeaderboardColumnNameToString
struct UVictoryCore_LeaderboardColumnNameToString_Params
{
	TEnumAsByte<ShooterGame_ELeaderboardColumnName>    ColumnType;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.KillTargetCharacterOrStructure
struct UVictoryCore_KillTargetCharacterOrStructure_Params
{
	class AActor*                                      ActorToKill;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      DamageCauser;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bTryDestroyActor;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.JoinStringArrayWithNewlines
struct UVictoryCore_JoinStringArrayWithNewlines_Params
{
	TArray<struct FString>                             SourceArray;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.IsXboxOneBuild
struct UVictoryCore_IsXboxOneBuild_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsWorkshopIDSubscribed
struct UVictoryCore_IsWorkshopIDSubscribed_Params
{
	struct FString                                     WorkshopID;                                                // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsValidItemForGrinding
struct UVictoryCore_IsValidItemForGrinding_Params
{
	class UPrimalItem*                                 Item;                                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalInventoryComponent*                   inventory;                                                 // (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsUWPBuild
struct UVictoryCore_IsUWPBuild_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsUndermesh
struct UVictoryCore_IsUndermesh_Params
{
	class APrimalCharacter*                            Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     CheckSevenHitLocation;                                     // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bOverlapping;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UActorComponent*                             CheckSevenResult;                                          // (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	bool                                               DebugDraw;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DebugDrawSeconds;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsTimeSince_Utc
struct UVictoryCore_IsTimeSince_Utc_Params
{
	double                                             OldTime;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              CheckTimeSince;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceTrueAtZeroTime;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsTimeSince_Network
struct UVictoryCore_IsTimeSince_Network_Params
{
	class UWorld*                                      ForWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                             OldTime;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              CheckTimeSince;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceTrueAtZeroTime;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsTimeSince
struct UVictoryCore_IsTimeSince_Params
{
	class UWorld*                                      ForWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                             OldTime;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              CheckTimeSince;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceTrueAtZeroTime;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsSplitscreen
struct UVictoryCore_IsSplitscreen_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsShipping
struct UVictoryCore_IsShipping_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsSavingSaveGame
struct UVictoryCore_IsSavingSaveGame_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsRunningTotalConversion
struct UVictoryCore_IsRunningTotalConversion_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsPVEServer
struct UVictoryCore_IsPVEServer_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsPS4Build
struct UVictoryCore_IsPS4Build_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsPointStuckWithinMesh
struct UVictoryCore_IsPointStuckWithinMesh_Params
{
	class UWorld*                                      TheWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     TestPoint;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                hemisphereSubdivisions;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              rayDistance;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              percentageConsideredStuck;                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      ActorToIgnore;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsPointInCone
struct UVictoryCore_IsPointInCone_Params
{
	struct FVector                                     Point;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     ConeOrigin;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     ConeDir;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              ConeLength;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ConeHalfAngle;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsPlayInEditor
struct UVictoryCore_IsPlayInEditor_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsOfficialServer
struct UVictoryCore_IsOfficialServer_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsNonHostPlayer
struct UVictoryCore_IsNonHostPlayer_Params
{
	class UWorld*                                      TheWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AController*                                 PlayerController;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsMissionTagActiveAnywhere
struct UVictoryCore_IsMissionTagActiveAnywhere_Params
{
	class AShooterPlayerController*                    FromPC;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsMissionActiveAnywhere
struct UVictoryCore_IsMissionActiveAnywhere_Params
{
	class UClass*                                      MissionType;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsLowMemPlatform
struct UVictoryCore_IsLowMemPlatform_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsLoadingSaveGame
struct UVictoryCore_IsLoadingSaveGame_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsLinuxOrMacBuild
struct UVictoryCore_IsLinuxOrMacBuild_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsInsideOrIntersectsBox
struct UVictoryCore_IsInsideOrIntersectsBox_Params
{
	struct FVector                                     BoxOrigin;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     BoxExtents;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	class UShapeComponent*                             ShapeComponent;                                            // (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsInsideBox
struct UVictoryCore_IsInsideBox_Params
{
	struct FVector                                     BoxOrigin;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     BoxExtents;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	class UShapeComponent*                             ShapeComponent;                                            // (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsGameWorld
struct UVictoryCore_IsGameWorld_Params
{
	class UWorld*                                      TheWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsGamePadConnected
struct UVictoryCore_IsGamePadConnected_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsEpicClient
struct UVictoryCore_IsEpicClient_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsEditor
struct UVictoryCore_IsEditor_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsDistanceLessThan
struct UVictoryCore_IsDistanceLessThan_Params
{
	struct FVector                                     A;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     B;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Distance;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsDistanceGreaterThan
struct UVictoryCore_IsDistanceGreaterThan_Params
{
	struct FVector                                     A;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     B;                                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Distance;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsDinoDuped
struct UVictoryCore_IsDinoDuped_Params
{
	class UWorld*                                      WorldContext;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint32_t                                           ID1;                                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint32_t                                           ID2;                                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsCryopodNerfEnabled
struct UVictoryCore_IsCryopodNerfEnabled_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              damageMult;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Duration;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              incomingDamageMultPercent;                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsCooldownComplete
struct UVictoryCore_IsCooldownComplete_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                             CooldownClock;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              CooldownDuration;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsConsoleServerBuild
struct UVictoryCore_IsConsoleServerBuild_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsConsoleBuild
struct UVictoryCore_IsConsoleBuild_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsChildOfClassesSoft
struct UVictoryCore_IsChildOfClassesSoft_Params
{
	class UClass*                                      childClass;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FString>                             ParentClassesArraySoft;                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IsChildOfClasses
struct UVictoryCore_IsChildOfClasses_Params
{
	class UClass*                                      childClass;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UClass*>                              ParentClassesArray;                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.InverseTransformVectorByScreenProjectionGlobalTransform
struct UVictoryCore_InverseTransformVectorByScreenProjectionGlobalTransform_Params
{
	struct FVector2D                                   outVec;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.InverseTransform
struct UVictoryCore_InverseTransform_Params
{
	struct UObject_FTransform                          TransformIn;                                               // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct UObject_FTransform                          ReturnValue;                                               // (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.IntToStringAscii
struct UVictoryCore_IntToStringAscii_Params
{
	int                                                CharValue;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.IntersectsBox
struct UVictoryCore_IntersectsBox_Params
{
	struct FVector                                     BoxOrigin;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     BoxExtents;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	class UShapeComponent*                             ShapeComponent;                                            // (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.InlineLoadLevels
struct UVictoryCore_InlineLoadLevels_Params
{
	TArray<struct FName>                               LevelNames;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FName>                               LevelNamesToUnload;                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bDisableDistanceStreamingOnLevels;                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.Helix
struct UVictoryCore_Helix_Params
{
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Time;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.HasPlayerSeenGen2Intro
struct UVictoryCore_HasPlayerSeenGen2Intro_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.HasCraftingRequirementsGreaterThanOne
struct UVictoryCore_HasCraftingRequirementsGreaterThanOne_Params
{
	class UPrimalItem*                                 Item;                                                      // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GrindItemIntoInventory
struct UVictoryCore_GrindItemIntoInventory_Params
{
	class UPrimalItem*                                 Item;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalInventoryComponent*                   inventory;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	bool                                               bGrindStack;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                MaxQuantityToGrind;                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              GrindGiveItemsPercent;                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                MaxItemsToGivePerGrind;                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GrindAllItemsToInventory
struct UVictoryCore_GrindAllItemsToInventory_Params
{
	class UPrimalInventoryComponent*                   inventory;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	bool                                               bGrindStack;                                               // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                MaxQuantityToGrind;                                        // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              GrindGiveItemsPercent;                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                MaxItemsToGivePerGrind;                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GridTraceAroundPoint
struct UVictoryCore_GridTraceAroundPoint_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FHitResult>                          OutResults;                                                // (Parm, OutParm, ZeroConstructor)
	struct FVector                                     Origin;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    GridRotation;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                              ActorsToIgnore;                                            // (Parm, ZeroConstructor)
	TEnumAsByte<Engine_ECollisionChannel>              CollisionChannel;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                NumTracesX;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                NumTracesY;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              SpacingX;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              SpacingY;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ZStartOffset;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ZEndOffset;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bTraceComplex;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDrawDebug;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DebugDrawDuration;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GiveItemToCharacter
struct UVictoryCore_GiveItemToCharacter_Params
{
	class APrimalCharacter*                            Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      ItemType;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                NumItems;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Quality;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bAutoEquip;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UPrimalItem*>                         ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.GetWorldSublevels
struct UVictoryCore_GetWorldSublevels_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class ULevelStreaming*>                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.GetWorldLoadedAtTime
struct UVictoryCore_GetWorldLoadedAtTime_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                             ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetWeightedRandomIndexFromArray
struct UVictoryCore_GetWeightedRandomIndexFromArray_Params
{
	TArray<float>                                      pArray;                                                    // (Parm, ZeroConstructor)
	float                                              ForceRand;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetVolumeOfCapsule
struct UVictoryCore_GetVolumeOfCapsule_Params
{
	float                                              CapsuleRadius;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              CapsuleHalfHeight;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetVelocityDeltaBetweenChars
struct UVictoryCore_GetVelocityDeltaBetweenChars_Params
{
	class APrimalCharacter*                            CharA;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalCharacter*                            CharB;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetTwoLetterISOLanguageName
struct UVictoryCore_GetTwoLetterISOLanguageName_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.GetTimeSince
struct UVictoryCore_GetTimeSince_Params
{
	class APawn*                                       Pawn;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Time;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetTimeSeconds
struct UVictoryCore_GetTimeSeconds_Params
{
	class APawn*                                       Pawn;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetTeamColor
struct UVictoryCore_GetTeamColor_Params
{
	int                                                TargetingTeam;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FColor                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetStaticMeshBounds
struct UVictoryCore_GetStaticMeshBounds_Params
{
	class UStaticMesh*                                 ForMesh;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBoxSphereBounds                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.GetSpecialActorList
struct UVictoryCore_GetSpecialActorList_Params
{
	class UWorld*                                      ForWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_EActorListsBP>                  ActorListType;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                              OutActors;                                                 // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.VictoryCore.GetSoundWaveLocalizedSpokenText
struct UVictoryCore_GetSoundWaveLocalizedSpokenText_Params
{
	class USoundWave*                                  InSound;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.GetSoundCueLocalizedSpokenText
struct UVictoryCore_GetSoundCueLocalizedSpokenText_Params
{
	class USoundCue*                                   InSound;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.GetSimpleMontageDuration
struct UVictoryCore_GetSimpleMontageDuration_Params
{
	class UAnimMontage*                                GivenMontage;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              GivenPlayRate;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetShooterGameUserSettings
struct UVictoryCore_GetShooterGameUserSettings_Params
{
	class UShooterGameUserSettings*                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetShooterCharacterFromPawn
struct UVictoryCore_GetShooterCharacterFromPawn_Params
{
	class APawn*                                       Pawn;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetShooterCharacterFromController
struct UVictoryCore_GetShooterCharacterFromController_Params
{
	class AController*                                 Controller;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetSelectedLevelActors
struct UVictoryCore_GetSelectedLevelActors_Params
{
	TArray<class AActor*>                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.GetSecondsIntoDay
struct UVictoryCore_GetSecondsIntoDay_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetScreenPercentLocation
struct UVictoryCore_GetScreenPercentLocation_Params
{
	class APlayerController*                           ForPC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                                   ScreenPercentages;                                         // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetScreenPercentage
struct UVictoryCore_GetScreenPercentage_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetScreenFramePerfScalar
struct UVictoryCore_GetScreenFramePerfScalar_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetRealWorldUtcTimeInSeconds
struct UVictoryCore_GetRealWorldUtcTimeInSeconds_Params
{
	double                                             ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetRandomWeightedDinoSetup
struct UVictoryCore_GetRandomWeightedDinoSetup_Params
{
	TArray<struct FDinoSetup>                          DinoSetupEntries;                                          // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FDinoSetup                                  DinoSetup;                                                 // (Parm, OutParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetProjectileArcPeakTime
struct UVictoryCore_GetProjectileArcPeakTime_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FProjectileArc                              Arc;                                                       // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetPrimaryWorld
struct UVictoryCore_GetPrimaryWorld_Params
{
	class UWorld*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetPlayerCharacterByIndex
struct UVictoryCore_GetPlayerCharacterByIndex_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                PlayerIndex;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetPlayerCharacterByController
struct UVictoryCore_GetPlayerCharacterByController_Params
{
	class APlayerController*                           PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AShooterCharacter*                           ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetPlaneNormal
struct UVictoryCore_GetPlaneNormal_Params
{
	struct FPlane                                      ForPlane;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetOverlappedHarvestActors
struct UVictoryCore_GetOverlappedHarvestActors_Params
{
	class UWorld*                                      ForWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     AtLoc;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              AtRadius;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                              OutHarvestActors;                                          // (Parm, OutParm, ZeroConstructor)
	TArray<class UActorComponent*>                     OutHarvestComponents;                                      // (Parm, OutParm, ZeroConstructor, ContainsInstancedReference)
	TArray<struct FVector>                             OutHarvestLocations;                                       // (Parm, OutParm, ZeroConstructor)
	TArray<int>                                        OutHitBodyIndices;                                         // (Parm, OutParm, ZeroConstructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetObjectString
struct UVictoryCore_GetObjectString_Params
{
	class UObject*                                     ForObject;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.GetObjectsReferencedBy
struct UVictoryCore_GetObjectsReferencedBy_Params
{
	class UObject*                                     ForObject;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UObject*>                             OutReferencedObjects;                                      // (Parm, OutParm, ZeroConstructor)
	bool                                               bIgnoreTransient;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetObjectPathName
struct UVictoryCore_GetObjectPathName_Params
{
	class UObject*                                     ForObject;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.GetObjectName
struct UVictoryCore_GetObjectName_Params
{
	class UObject*                                     ForObject;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetObjectFName
struct UVictoryCore_GetObjectFName_Params
{
	class UObject*                                     ForObject;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetNewlineCharacter
struct UVictoryCore_GetNewlineCharacter_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.GetNetworkTimeInSeconds
struct UVictoryCore_GetNetworkTimeInSeconds_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                             ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetMissionNetworkStartTime
struct UVictoryCore_GetMissionNetworkStartTime_Params
{
	class UWorld*                                      ForWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                             ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetMissionActorOfTypes
struct UVictoryCore_GetMissionActorOfTypes_Params
{
	class UWorld*                                      World;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UClass*>                              theMissionTypes;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class AActor*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetMissionActorOfType
struct UVictoryCore_GetMissionActorOfType_Params
{
	class UWorld*                                      World;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      theMissionType;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bExactMatch;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetMatineeLength
struct UVictoryCore_GetMatineeLength_Params
{
	class AMatineeActor*                               MatineeActor;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetLocaleSpecificSoundWaveAnimTexturePairArrays
struct UVictoryCore_GetLocaleSpecificSoundWaveAnimTexturePairArrays_Params
{
	TArray<struct FLocalizedSoundWaveAnimTexturePairArrays> LocalizedSoundWaveAnimTextures;                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FLocalizedSoundWaveAnimTexturePairArrays    OutLocalizedAudio;                                         // (Parm, OutParm)
	bool                                               FoundLocalizedSoundWavesForThisLanguage;                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     LanguageOverride;                                          // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetLocaleSpecificAudio
struct UVictoryCore_GetLocaleSpecificAudio_Params
{
	TArray<struct FLocalizedSoundCueEntry>             LocalizedSoundCues;                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FLocalizedSoundCueEntry                     OutLocalizedAudio;                                         // (Parm, OutParm)
	struct FString                                     LanguageOverride;                                          // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetLoadedStreamingLevelNames
struct UVictoryCore_GetLoadedStreamingLevelNames_Params
{
	TArray<struct FName>                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.GetLaunchVelocityAndGravity
struct UVictoryCore_GetLaunchVelocityAndGravity_Params
{
	struct FVector                                     StartLocation;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     TargetLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              LateralSpeed;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              PeakHeightZ;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     LaunchVelocity;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Gravity;                                                   // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetLastMapPlayed
struct UVictoryCore_GetLastMapPlayed_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.GetLastHostedMapPlayed
struct UVictoryCore_GetLastHostedMapPlayed_Params
{
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.GetKeyNameFromActionName
struct UVictoryCore_GetKeyNameFromActionName_Params
{
	struct FName                                       ActionName;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.GetKeyName
struct UVictoryCore_GetKeyName_Params
{
	struct FKey                                        Key;                                                       // (Parm)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.GetItemClassFromItemSetup
struct UVictoryCore_GetItemClassFromItemSetup_Params
{
	struct FItemSetup                                  ItemSetup;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	class UClass*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetHitBoneNameFromDamageEvent
struct UVictoryCore_GetHitBoneNameFromDamageEvent_Params
{
	class APrimalCharacter*                            Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AController*                                 HitInstigator;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FDamageEvent                                DamageEvent;                                               // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               bIsPointDamage;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                                  PointHitResult;                                            // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FName                                       MatchCollisionPresetName;                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetHarvestingComponentFromHitBodyIndex
struct UVictoryCore_GetHarvestingComponentFromHitBodyIndex_Params
{
	class UInstancedStaticMeshComponent*               FromISMC;                                                  // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	int                                                WithHitBodyIndex;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalHarvestingComponent*                  ReturnValue;                                               // (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetGroundLocation
struct UVictoryCore_GetGroundLocation_Params
{
	class UWorld*                                      ForWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     theGroundLoc;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     StartLoc;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     OffsetUp;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     OffsetDown;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetGrinderReplacementItem
struct UVictoryCore_GetGrinderReplacementItem_Params
{
	class UClass*                                      current;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetFirstDirectionalLight
struct UVictoryCore_GetFirstDirectionalLight_Params
{
	class UWorld*                                      World;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ADirectionalLight*                           ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetDistanceToCollision
struct UVictoryCore_GetDistanceToCollision_Params
{
	class UPrimitiveComponent*                         Comp;                                                      // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FVector                                     Point;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     closestPoint;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetDinoStaticClass
struct UVictoryCore_GetDinoStaticClass_Params
{
	struct FDinoSetup                                  DinoSetup;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	class UClass*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetDinoSetupPointsPerStat
struct UVictoryCore_GetDinoSetupPointsPerStat_Params
{
	struct FDinoSetup                                  DinoSetup;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	TEnumAsByte<ShooterGame_EPrimalCharacterStatusValue> StatusType;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bGetPlayerAdded;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetDinoSetupGroup_WeightedRandom
struct UVictoryCore_GetDinoSetupGroup_WeightedRandom_Params
{
	TArray<struct FDinoSetupGroup>                     DinoSetupGroups;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FDinoSetupGroup                             Group;                                                     // (Parm, OutParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetDinoSetupGroup_ByName
struct UVictoryCore_GetDinoSetupGroup_ByName_Params
{
	struct FName                                       GroupName;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FDinoSetupGroup>                     DinoSetupGroups;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FDinoSetupGroup                             Group;                                                     // (Parm, OutParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetDinoSetupDinoType
struct UVictoryCore_GetDinoSetupDinoType_Params
{
	struct FDinoSetup                                  DinoSetup;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	class UClass*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetDinoSetupCapsuleSize
struct UVictoryCore_GetDinoSetupCapsuleSize_Params
{
	struct FDinoSetup                                  DinoSetup;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              CapsuleRadius;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              CapsuleHalfHeight;                                         // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetDinoCharacterByID
struct UVictoryCore_GetDinoCharacterByID_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                DinoID1;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                DinoID2;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bSearchTamedOnly;                                          // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	class APrimalDinoCharacter*                        ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetDefaultObject
struct UVictoryCore_GetDefaultObject_Params
{
	class UObject*                                     FromObjectInstance;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetCustomDinoSpawnLocation
struct UVictoryCore_GetCustomDinoSpawnLocation_Params
{
	class UWorld*                                      World;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     SpawnLocation;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    SpawnRotation;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FDinoSetup                                  DinoSetup;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              DebugDrawDuration;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bApplyRotationToSpawnOffset;                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetCustomActorList
struct UVictoryCore_GetCustomActorList_Params
{
	class UWorld*                                      ForWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       SearchCustomTag;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ACustomActorList*                            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetCurrentCameraExposure
struct UVictoryCore_GetCurrentCameraExposure_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetControllerMovementInputs
struct UVictoryCore_GetControllerMovementInputs_Params
{
	class APlayerController*                           ForPC;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetClosestActorArray
struct UVictoryCore_GetClosestActorArray_Params
{
	struct FVector                                     ToPoint;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                              ActorArray;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class AActor*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetClassString
struct UVictoryCore_GetClassString_Params
{
	class UClass*                                      ForClass;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.GetClassPathName
struct UVictoryCore_GetClassPathName_Params
{
	class UObject*                                     ForClass;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.GetClassFName
struct UVictoryCore_GetClassFName_Params
{
	class UClass*                                      ForClass;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetClassDefaultObject
struct UVictoryCore_GetClassDefaultObject_Params
{
	class UClass*                                      FromClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetCharacterCapsuleSize
struct UVictoryCore_GetCharacterCapsuleSize_Params
{
	class UClass*                                      CharClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              CapsuleRadius;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              CapsuleHalfHeight;                                         // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetBlockingMissionTag
struct UVictoryCore_GetBlockingMissionTag_Params
{
	class AShooterPlayerController*                    FromPC;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       MissionTag;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetArrayIndicesSorted_Int
struct UVictoryCore_GetArrayIndicesSorted_Int_Params
{
	TArray<int>                                        Array;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bSortLowToHigh;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int>                                        ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.GetArrayIndicesSorted_Float
struct UVictoryCore_GetArrayIndicesSorted_Float_Params
{
	TArray<float>                                      Array;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bSortLowToHigh;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int>                                        ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.GetArrayIndicesSorted_Double
struct UVictoryCore_GetArrayIndicesSorted_Double_Params
{
	TArray<double>                                     Array;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bSortLowToHigh;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int>                                        ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.GetAngleBetweenVectorsPure
struct UVictoryCore_GetAngleBetweenVectorsPure_Params
{
	struct FVector                                     VectorA;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     VectorB;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     AroundAxis;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetAngleBetweenVectors
struct UVictoryCore_GetAngleBetweenVectors_Params
{
	struct FVector                                     VectorA;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     VectorB;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     AroundAxis;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GetAllPlayerStarts
struct UVictoryCore_GetAllPlayerStarts_Params
{
	class UWorld*                                      World;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.GetAllMissionDispatchers
struct UVictoryCore_GetAllMissionDispatchers_Params
{
	class UWorld*                                      World;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.GetAllMissionDispatcherPoints
struct UVictoryCore_GetAllMissionDispatcherPoints_Params
{
	class UWorld*                                      World;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.GetAllMissionActors
struct UVictoryCore_GetAllMissionActors_Params
{
	class UWorld*                                      World;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.GetAllLocalPlayerControllers
struct UVictoryCore_GetAllLocalPlayerControllers_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AShooterPlayerController*>            ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.GetAllLocalPlayerCharacters
struct UVictoryCore_GetAllLocalPlayerCharacters_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AShooterCharacter*>                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.GetAllLocalPlayerCameraManagers
struct UVictoryCore_GetAllLocalPlayerCameraManagers_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class APlayerCameraManager*>                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.GetAllClassesOfType
struct UVictoryCore_GetAllClassesOfType_Params
{
	TArray<class UClass*>                              Subclasses;                                                // (Parm, OutParm, ZeroConstructor)
	class UClass*                                      ParentClass;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bAllowAbstract;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     Path;                                                      // (Parm, ZeroConstructor)
};

// Function ShooterGame.VictoryCore.GetAllAvailableMissionsAsTags
struct UVictoryCore_GetAllAvailableMissionsAsTags_Params
{
	class UWorld*                                      World;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FName>                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.GetAllAvailableMissions
struct UVictoryCore_GetAllAvailableMissions_Params
{
	class UWorld*                                      World;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FAvailableMission>                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.GenerateRandomLootItemFromLootTable
struct UVictoryCore_GenerateRandomLootItemFromLootTable_Params
{
	TArray<struct FLootTableEntry>                     Entries;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int                                                ItemQuantity;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ItemQuality;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.GenerateRandomLootItem
struct UVictoryCore_GenerateRandomLootItem_Params
{
	TEnumAsByte<ShooterGame_ELootItemType>             LootItemType;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.FuseChunkedFString
struct UVictoryCore_FuseChunkedFString_Params
{
	TArray<struct FString>                             InputStringArray;                                          // (Parm, ZeroConstructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.FormatAsTimeLong
struct UVictoryCore_FormatAsTimeLong_Params
{
	int                                                InTime;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.FormatAsTime
struct UVictoryCore_FormatAsTime_Params
{
	int                                                InTime;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               UseLeadingZero;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceLeadingZeroHour;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bShowSeconds;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.ForceScreenColorFade
struct UVictoryCore_ForceScreenColorFade_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                FadeColor;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              FullOpacityInterval;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              TheFadeOutInterval;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.ForceLevelStreamingToBlock
struct UVictoryCore_ForceLevelStreamingToBlock_Params
{
	class UWorld*                                      ForWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ForTime;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.FloatToDouble
struct UVictoryCore_FloatToDouble_Params
{
	float                                              Value;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                             ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.FlattenDirectionVectorInLocalSpace
struct UVictoryCore_FlattenDirectionVectorInLocalSpace_Params
{
	struct FVector                                     Direction;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    Rotation;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.FlattenDirectionVector
struct UVictoryCore_FlattenDirectionVector_Params
{
	struct FVector                                     Direction;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.FinishSpawning
struct UVictoryCore_FinishSpawning_Params
{
	class AActor*                                      Actor;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.FindWorldActors
struct UVictoryCore_FindWorldActors_Params
{
	class UWorld*                                      fWorld;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                              fContainer;                                                // (Parm, OutParm, ZeroConstructor)
	class UClass*                                      fType;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       fTag;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.FindValidLocationNextToTarget
struct UVictoryCore_FindValidLocationNextToTarget_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     OutLocation;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalCharacter*                            SourceCharacter;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalCharacter*                            TargetCharacter;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DistanceMargin;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                MaxTraceCount;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      ActorToIgnore;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bTraceComplex;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDrawDebug;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DebugDrawDuration;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.FindValidLocationInFrontOfTarget
struct UVictoryCore_FindValidLocationInFrontOfTarget_Params
{
	struct FVector                                     OutLocation;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalCharacter*                            SourceCharacter;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalCharacter*                            TargetCharacter;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DistanceMargin;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_ECollisionChannel>              CollisionChannel;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bFailIfLocationNotOnGround;                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      ActorToIgnore;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bTraceComplex;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DebugDrawDuration;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.FindSocketClosestToDirection
struct UVictoryCore_FindSocketClosestToDirection_Params
{
	class USkeletalMeshComponent*                      Mesh;                                                      // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FVector                                     TargetDirection;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FName>                               Sockets;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<float>                                      DotProducts;                                               // (Parm, OutParm, ZeroConstructor)
	bool                                               bOnlySocketsWithPrefix;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     SocketPrefix;                                              // (Parm, ZeroConstructor)
	struct FName                                       ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.FindNearbyCharactersOfClass
struct UVictoryCore_FindNearbyCharactersOfClass_Params
{
	class UWorld*                                      World;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     AtLoc;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      CharacterClass;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bTamedDinosOnly;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bWildDinosOnly;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class APrimalCharacter*>                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.FindLocalizedVersionOfFilename
struct UVictoryCore_FindLocalizedVersionOfFilename_Params
{
	struct FStringAssetReference                       OriginalFile;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.FindActorAIState
struct UVictoryCore_FindActorAIState_Params
{
	class UClass*                                      fStateType;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FDinoAttackInfo>                     fContainerOfStates;                                        // (Parm, ZeroConstructor)
	class UPrimalAIState*                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.EvalProjectileArc
struct UVictoryCore_EvalProjectileArc_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FProjectileArc                              Arc;                                                       // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              Time;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.ECC_TO_BITFIELD_BP
struct UVictoryCore_ECC_TO_BITFIELD_BP_Params
{
	TEnumAsByte<Engine_ECollisionChannel>              ConvertChannel;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.DisableGCM
struct UVictoryCore_DisableGCM_Params
{
	class AActor*                                      ShooterCharacter;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.DestroyAllCharactersWithinMissionTileVolumes
struct UVictoryCore_DestroyAllCharactersWithinMissionTileVolumes_Params
{
	class UWorld*                                      TheWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bOnlyCheckForDeadCharacters;                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       ForceOnTileStreamVolumeCustomTag;                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.DebugDrawProjectileArc
struct UVictoryCore_DebugDrawProjectileArc_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FProjectileArc                              Arc;                                                       // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              MaxArcTime;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ArcTimeStep;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                LineColor;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              LineThickness;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DebugDrawDuration;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.DeactivateMissionForPlayerCharacter
struct UVictoryCore_DeactivateMissionForPlayerCharacter_Params
{
	class AShooterCharacter*                           PlayerPawn;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bOverrideForcePreventLeavingMissions;                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.DateTimeToSeconds
struct UVictoryCore_DateTimeToSeconds_Params
{
	struct FDateTime                                   DateTimeValue;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	double                                             ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.CopyDinoColorSetIndicies
struct UVictoryCore_CopyDinoColorSetIndicies_Params
{
	class APrimalDinoCharacter*                        src;                                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalDinoCharacter*                        dest;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.CooldownTimeRemaining
struct UVictoryCore_CooldownTimeRemaining_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                             CooldownClock;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              CooldownDuration;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.ConvertRotatorFromWorldToLocal
struct UVictoryCore_ConvertRotatorFromWorldToLocal_Params
{
	struct FRotator                                    ConvertRot;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    ToParentRotation;                                          // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.ConvertRotatorFromLocalToWorld
struct UVictoryCore_ConvertRotatorFromLocalToWorld_Params
{
	struct FRotator                                    ConvertRot;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    FromParentRotation;                                        // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.ConvertIntToStringWithCommas
struct UVictoryCore_ConvertIntToStringWithCommas_Params
{
	int                                                GivenNumber;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.Conv_VectorToVectorNetQuantizeNormal
struct UVictoryCore_Conv_VectorToVectorNetQuantizeNormal_Params
{
	struct FVector                                     InVector;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector_NetQuantizeNormal                   ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.VictoryCore.Conv_VectorToVectorNetQuantize
struct UVictoryCore_Conv_VectorToVectorNetQuantize_Params
{
	struct FVector                                     InVector;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector_NetQuantize                         ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.VictoryCore.ConstructObjectBP
struct UVictoryCore_ConstructObjectBP_Params
{
	class UClass*                                      Class;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                     Outer;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       Name;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.ConstructObjectAutoNameBP
struct UVictoryCore_ConstructObjectAutoNameBP_Params
{
	class UClass*                                      Class;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                     Outer;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.ComponentBoundsEncompassesPoint
struct UVictoryCore_ComponentBoundsEncompassesPoint_Params
{
	class UPrimitiveComponent*                         Comp;                                                      // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FVector                                     Point;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              BoundsMultiplier;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.ClipLineInsideBox
struct UVictoryCore_ClipLineInsideBox_Params
{
	struct FVector                                     Origin;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Extent;                                                    // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     LineStart;                                                 // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     LineEnd;                                                   // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     OutLineStart;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     OutLineEnd;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.ClassToStringReference
struct UVictoryCore_ClassToStringReference_Params
{
	class UClass*                                      ForClass;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.ClassRefToObjectRef
struct UVictoryCore_ClassRefToObjectRef_Params
{
	class UClass*                                      InClass;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.ClampRotAxis
struct UVictoryCore_ClampRotAxis_Params
{
	float                                              BaseAxis;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DesiredAxis;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MaxDiff;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.ClampLocation
struct UVictoryCore_ClampLocation_Params
{
	struct FVector                                     BaseLocation;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     DesiredLocation;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MaxDiff;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bTraceClampLocation;                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWorld*                                      TraceWorld;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     TraceFromLocation;                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.ChunkFStringIntoArray
struct UVictoryCore_ChunkFStringIntoArray_Params
{
	struct FString                                     InputString;                                               // (Parm, ZeroConstructor)
	int                                                ChunkSize;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FString>                             ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.ChangeSaturation
struct UVictoryCore_ChangeSaturation_Params
{
	struct FLinearColor                                InColor;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              NewSaturation;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.CapsuleSweepProjectileArc
struct UVictoryCore_CapsuleSweepProjectileArc_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FProjectileArc                              Arc;                                                       // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FRotator                                    CapsuleRotation;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              CapsuleRadius;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              CapsuleHalfHeight;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bRotateCapsuleAlongPath;                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bTraceComplex;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                                  HitResult;                                                 // (Parm, OutParm)
	struct FVector                                     EndLocation;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              EndArcTime;                                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MaxArcLength;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                              ActorsToIgnore;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bIgnoreSelf;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ArcTimeStep;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_ECollisionChannel>              CollisionChannel;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDrawDebug;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DebugDrawDuration;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.CapsuleSweepMulti
struct UVictoryCore_CapsuleSweepMulti_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FHitResult>                          OutHits;                                                   // (Parm, OutParm, ZeroConstructor)
	struct FVector                                     Start;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     End;                                                       // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    CapsuleRot;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              HalfHeight;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                              ActorsToIgnore;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               bIgnoreSelf;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_ECollisionChannel>              CollisionChannel;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bTraceComplex;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDebugDraw;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DebugDrawDuration;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bFindInitialOverlaps;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.CapsuleSweepFast
struct UVictoryCore_CapsuleSweepFast_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                                  OutHit;                                                    // (Parm, OutParm)
	struct FVector                                     Start;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     End;                                                       // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    CapsuleRot;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              HalfHeight;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_ECollisionChannel>              CollisionChannel;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                               bTraceComplex;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                               bIgnoreSelf;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	class AActor*                                      IgnoreActor;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                               bDebugDraw;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	float                                              DebugDrawDuration;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.CapsuleOverlapFast
struct UVictoryCore_CapsuleOverlapFast_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      FirstOverlappedActor;                                      // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Origin;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    CapsuleRotation;                                           // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              HalfHeight;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_ECollisionChannel>              CollisionChannel;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                               bTraceComplex;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                               bIgnoreSelf;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	class AActor*                                      IgnoreActor;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                               bDebugDraw;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	float                                              DebugDrawDuration;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                               bBlockingOnly;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.CanTeleport
struct UVictoryCore_CanTeleport_Params
{
	class APrimalDinoCharacter*                        Target;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.CanSpawnCustomDino
struct UVictoryCore_CanSpawnCustomDino_Params
{
	class UWorld*                                      World;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     OutCalculatedSpawnLocation;                                // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     PlayerLocation;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     SpawnLocation;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    SpawnRotation;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FDinoSetup                                  DinoSetup;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	float                                              DebugDrawDuration;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDoLosCheck;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDoExtraSafetyChecks;                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.CallGlobalLevelEvent
struct UVictoryCore_CallGlobalLevelEvent_Params
{
	class UWorld*                                      ForWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       EventName;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.CalculateGPSCoordinates
struct UVictoryCore_CalculateGPSCoordinates_Params
{
	class UWorld*                                      ForWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     WorldPos;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FIntPoint                                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.BPSweepComponent
struct UVictoryCore_BPSweepComponent_Params
{
	class UPrimitiveComponent*                         Component;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FHitResult                                  OutHit;                                                    // (Parm, OutParm)
	struct FVector                                     Start;                                                     // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     End;                                                       // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Radius;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              HalfHeight;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Extent;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bTraceComplex;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.BPRTransformInverse
struct UVictoryCore_BPRTransformInverse_Params
{
	struct FRotator                                    R;                                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    RBasis;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.BPRTransform
struct UVictoryCore_BPRTransform_Params
{
	struct FRotator                                    R;                                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    RBasis;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.BPRotatorLerp
struct UVictoryCore_BPRotatorLerp_Params
{
	struct FRotator                                    A;                                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    B;                                                         // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              Alpha;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.BPProjectWorldToScreenPositionRaw
struct UVictoryCore_BPProjectWorldToScreenPositionRaw_Params
{
	class APlayerController*                           thePC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     WorldLocation;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                                   Out_ScreenLocation;                                        // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Out_ViewLocation;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               Out_bIsScreenLocationInsideViewRect;                       // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIgnoreScreenProjectionGlobalTransform;                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.BPProjectWorldToScreenPosition
struct UVictoryCore_BPProjectWorldToScreenPosition_Params
{
	struct FVector                                     WorldLocation;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	class APlayerController*                           thePC;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                                   ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.BPLoadObject
struct UVictoryCore_BPLoadObject_Params
{
	struct FString                                     PathName;                                                  // (Parm, ZeroConstructor)
	class UObject*                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.BPLoadClass
struct UVictoryCore_BPLoadClass_Params
{
	struct FString                                     PathName;                                                  // (Parm, ZeroConstructor)
	class UClass*                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.BPIsTemplate
struct UVictoryCore_BPIsTemplate_Params
{
	class UObject*                                     AnObject;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.BPIsDinoIDEqual
struct UVictoryCore_BPIsDinoIDEqual_Params
{
	int                                                FirstDinoID1;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                FirstDinoID2;                                              // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                SecondDinoID1;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                SecondDinoID2;                                             // (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.BPGetWeightedRandomIndex
struct UVictoryCore_BPGetWeightedRandomIndex_Params
{
	TArray<float>                                      pArray;                                                    // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	float                                              ForceRand;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.BPGetPrimaryMapName
struct UVictoryCore_BPGetPrimaryMapName_Params
{
	class UWorld*                                      WorldContext;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.BPGetBiomeWind
struct UVictoryCore_BPGetBiomeWind_Params
{
	class ABiomeZoneVolume*                            BiomeZoneVolume;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              GlobalWind;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.BPGetBiomeTemperature
struct UVictoryCore_BPGetBiomeTemperature_Params
{
	class ABiomeZoneVolume*                            BiomeZoneVolume;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              GlobalTemperature;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.BPFormatAsTimeLong
struct UVictoryCore_BPFormatAsTimeLong_Params
{
	int                                                InTime;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.BPFormatAsTime
struct UVictoryCore_BPFormatAsTime_Params
{
	int                                                InTime;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               UseLeadingZero;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceLeadingZeroHour;                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bShowSeconds;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.VictoryCore.BPFLerpFastPure
struct UVictoryCore_BPFLerpFastPure_Params
{
	float                                              InMin;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InMax;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InPercent;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.BPFLerpFast
struct UVictoryCore_BPFLerpFast_Params
{
	float                                              InMin;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InMax;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InPercent;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.BPFLerp
struct UVictoryCore_BPFLerp_Params
{
	float                                              InMin;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InMax;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              InPercent;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bClampToMin;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bClampToMax;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.BPFastTrace
struct UVictoryCore_BPFastTrace_Params
{
	class UWorld*                                      TheWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     TraceEnd;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     TraceStart;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      ActorToIgnore;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	float                                              DebugDrawDuration;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.BoxFromOriginAndExtent
struct UVictoryCore_BoxFromOriginAndExtent_Params
{
	struct FVector                                     Origin;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Extent;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     OutBoxMin;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     OutBoxMax;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.AreVectorsNearlyEqual
struct UVictoryCore_AreVectorsNearlyEqual_Params
{
	struct FVector                                     VectorA;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     VectorB;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              WithinError;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.AreVector2DsNearlyEqual
struct UVictoryCore_AreVector2DsNearlyEqual_Params
{
	struct FVector2D                                   VectorA;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector2D                                   VectorB;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              WithinError;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.AreVector2DsEqual
struct UVictoryCore_AreVector2DsEqual_Params
{
	struct FVector2D                                   VectorA;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector2D                                   VectorB;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.AreTransformsNearlyEqual
struct UVictoryCore_AreTransformsNearlyEqual_Params
{
	struct UObject_FTransform                          TransformA;                                                // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct UObject_FTransform                          TransformB;                                                // (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              WithinError;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.AreRotatorsNearlyEqual
struct UVictoryCore_AreRotatorsNearlyEqual_Params
{
	struct FRotator                                    RotatorA;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                                    RotatorB;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	float                                              WithinError;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.AdjustScreenPositionWithScreenDPI
struct UVictoryCore_AdjustScreenPositionWithScreenDPI_Params
{
	class UWorld*                                      TheWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                                   ScreenPosition;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.AddToEditorMessageLog
struct UVictoryCore_AddToEditorMessageLog_Params
{
	class UObject*                                     WorldContextObject;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     Message;                                                   // (Parm, ZeroConstructor)
	TEnumAsByte<ShooterGame_EEditorMessageLogLevel>    LogLevel;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bServerOnly;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.AddToActorList
struct UVictoryCore_AddToActorList_Params
{
	class UWorld*                                      ForWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ActorListNum;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      ActorRef;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.AddActorToCustomActorList
struct UVictoryCore_AddActorToCustomActorList_Params
{
	class UWorld*                                      ForWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FName                                       SearchCustomTag;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      ActorToAdd;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.ActorHasLineOfSightToWorldLocation
struct UVictoryCore_ActorHasLineOfSightToWorldLocation_Params
{
	class AActor*                                      FromActor;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ToLocation;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      OutBlockingActor;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_ECollisionChannel>              Channel;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DebugDrawDuration;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.VictoryCore.ActorHasLineOfSight
struct UVictoryCore_ActorHasLineOfSight_Params
{
	class AActor*                                      FromActor;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      ToActor;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      OutBlockingActor;                                          // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ToActorOffset;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_ECollisionChannel>              Channel;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DebugDrawDuration;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalProjectileNetGun.GetManagedBoneRotation
struct APrimalProjectileNetGun_GetManagedBoneRotation_Params
{
	struct FName                                       InBoneName;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalProjectileNetGun.GetManagedBoneLocationsAndRotations
struct APrimalProjectileNetGun_GetManagedBoneLocationsAndRotations_Params
{
	TArray<struct FVector>                             Locations;                                                 // (Parm, OutParm, ZeroConstructor)
	TArray<struct FRotator>                            Rotations;                                                 // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.PrimalProjectileNetGun.GetManagedBoneLocation
struct APrimalProjectileNetGun_GetManagedBoneLocation_Params
{
	struct FName                                       InBoneName;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalProjectileNetGun.CalculateBonePositions
struct APrimalProjectileNetGun_CalculateBonePositions_Params
{
};

// Function ShooterGame.ShooterProjectile_Swarm.TimeSinceProjectileSpawn
struct AShooterProjectile_Swarm_TimeSinceProjectileSpawn_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterProjectile_Swarm.SpawnSwarm
struct AShooterProjectile_Swarm_SpawnSwarm_Params
{
};

// Function ShooterGame.ShooterProjectile_Swarm.MultiSyncSwarm
struct AShooterProjectile_Swarm_MultiSyncSwarm_Params
{
	TArray<struct FBoid>                               ServerSwarmData;                                           // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterProjectile_Swarm.MultiPrimaryProjectileDestroyed
struct AShooterProjectile_Swarm_MultiPrimaryProjectileDestroyed_Params
{
	struct FVector                                     ImpactLocation;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                             DestroyNetworkTime;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterProjectile_Swarm.GetNumberOfBoidsInFlight
struct AShooterProjectile_Swarm_GetNumberOfBoidsInFlight_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterProjectile_Swarm.DoSwarmSync
struct AShooterProjectile_Swarm_DoSwarmSync_Params
{
};

// Function ShooterGame.ShooterProjectile_Swarm.BPOnBoidExplode
struct AShooterProjectile_Swarm_BPOnBoidExplode_Params
{
	int                                                BoidIndex;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*                    BoidParticles;                                             // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FHitResult                                  Hit;                                                       // (ConstParm, Parm, OutParm, ReferenceParm)
};

// Function ShooterGame.ShooterProjectile_Swarm.BPGetBoidSpawnLocationAndVelocity
struct AShooterProjectile_Swarm_BPGetBoidSpawnLocationAndVelocity_Params
{
	int                                                BoidIndex;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBoid                                       BoidData;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector                                     SpawnLocation;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     SpawnVelocity;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_ChainSaw.ServerStopFireAnim
struct AShooterWeapon_ChainSaw_ServerStopFireAnim_Params
{
};

// Function ShooterGame.ShooterWeapon_ChainSaw.ServerReloadWeapon
struct AShooterWeapon_ChainSaw_ServerReloadWeapon_Params
{
};

// Function ShooterGame.ShooterWeapon_ChainSaw.ServerHit
struct AShooterWeapon_ChainSaw_ServerHit_Params
{
};

// Function ShooterGame.ShooterWeapon_ChainSaw.ClientSimulateChangeFireAnim
struct AShooterWeapon_ChainSaw_ClientSimulateChangeFireAnim_Params
{
};

// Function ShooterGame.ShooterWeapon_Instant.SimulateInstantHit
struct AShooterWeapon_Instant_SimulateInstantHit_Params
{
	struct FVector                                     Origin;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector_NetQuantizeNormal                   ShootDir;                                                  // (Parm)
	bool                                               bForceOnLocal;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ShotIndex;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Instant.ServerNotifyShotOrigin
struct AShooterWeapon_Instant_ServerNotifyShotOrigin_Params
{
	struct FVector                                     Origin;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FHitResult>                          Impacts;                                                   // (ConstParm, Parm, ZeroConstructor)
	TArray<struct FVector_NetQuantizeNormal>           ShootDirs;                                                 // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterWeapon_Instant.ServerNotifyShot
struct AShooterWeapon_Instant_ServerNotifyShot_Params
{
	TArray<struct FHitResult>                          Impacts;                                                   // (ConstParm, Parm, ZeroConstructor)
	TArray<struct FVector_NetQuantizeNormal>           ShootDirs;                                                 // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterWeapon_Instant.ServerForceShot
struct AShooterWeapon_Instant_ServerForceShot_Params
{
	struct FHitResult                                  Impact;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector                                     StartShotLoc;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     EndShotLoc;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Instant.NetSimulateForceShot
struct AShooterWeapon_Instant_NetSimulateForceShot_Params
{
	struct FVector                                     ShotOrigin;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ShootDir;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Instant.GetFireLocationAndDirection
struct AShooterWeapon_Instant_GetFireLocationAndDirection_Params
{
	struct FVector                                     Location;                                                  // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Direction;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Instant.GetCurrentSpread
struct AShooterWeapon_Instant_GetCurrentSpread_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Instant.CheckRefireTimer
struct AShooterWeapon_Instant_CheckRefireTimer_Params
{
};

// Function ShooterGame.ShooterWeapon_Instant.BPSpawnImpactEffects
struct AShooterWeapon_Instant_BPSpawnImpactEffects_Params
{
	struct FHitResult                                  Impact;                                                    // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector                                     ShootDir;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               bIsEntryHit;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              WeaponMaxRange;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Instant.BPPostSpawnTrailEffect
struct AShooterWeapon_Instant_BPPostSpawnTrailEffect_Params
{
	class UParticleSystemComponent*                    TrailPSC;                                                  // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	struct FVector                                     StartPoint;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     EndPoint;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Instant.BPKillImpactEffects
struct AShooterWeapon_Instant_BPKillImpactEffects_Params
{
};

// Function ShooterGame.ShooterWeapon_Instant.BPGetCurrentSpread
struct AShooterWeapon_Instant_BPGetCurrentSpread_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_FlameThrower.TickShootFX
struct AShooterWeapon_FlameThrower_TickShootFX_Params
{
};

// Function ShooterGame.ShooterWeapon_FlameThrower.StopShootFX
struct AShooterWeapon_FlameThrower_StopShootFX_Params
{
};

// Function ShooterGame.ShooterWeapon_FlameThrower.SpawnImpactEffects
struct AShooterWeapon_FlameThrower_SpawnImpactEffects_Params
{
};

// Function ShooterGame.ShooterWeapon_FlameThrower.ServerTickShootFX
struct AShooterWeapon_FlameThrower_ServerTickShootFX_Params
{
};

// Function ShooterGame.ShooterWeapon_FlameThrower.ServerStopShootFX
struct AShooterWeapon_FlameThrower_ServerStopShootFX_Params
{
};

// Function ShooterGame.ShooterWeapon_FlameThrower.ServerBeginShootFX
struct AShooterWeapon_FlameThrower_ServerBeginShootFX_Params
{
};

// Function ShooterGame.ShooterWeapon_FlameThrower.EndFXDelay
struct AShooterWeapon_FlameThrower_EndFXDelay_Params
{
};

// Function ShooterGame.ShooterWeapon_FlameThrower.ClientSpawnHarvestFX
struct AShooterWeapon_FlameThrower_ClientSpawnHarvestFX_Params
{
	TArray<struct FVector>                             Impacts;                                                   // (ConstParm, Parm, ZeroConstructor)
};

// Function ShooterGame.ShooterWeapon_FlameThrower.BPSpawnHarvestEffects
struct AShooterWeapon_FlameThrower_BPSpawnHarvestEffects_Params
{
	TArray<struct FVector>                             Impacts;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function ShooterGame.ShooterWeapon_FlameThrower.BeginShootFX
struct AShooterWeapon_FlameThrower_BeginShootFX_Params
{
};

// Function ShooterGame.ShooterWeapon_Activated.ServerPreFire
struct AShooterWeapon_Activated_ServerPreFire_Params
{
	struct FVector                                     Origin;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ShootDir;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Activated.ServerCancelActivation
struct AShooterWeapon_Activated_ServerCancelActivation_Params
{
};

// Function ShooterGame.ShooterWeapon_Activated.ServerActivateWeapon
struct AShooterWeapon_Activated_ServerActivateWeapon_Params
{
	bool                                               bActivate;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                nAnimIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Activated.IsActivationAnimPlaying
struct AShooterWeapon_Activated_IsActivationAnimPlaying_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Activated.HandleActivation
struct AShooterWeapon_Activated_HandleActivation_Params
{
	bool                                               bActive;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Activated.GetBeamTarget
struct AShooterWeapon_Activated_GetBeamTarget_Params
{
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Activated.EndActivationAnim
struct AShooterWeapon_Activated_EndActivationAnim_Params
{
};

// Function ShooterGame.ShooterWeapon_Activated.ClientHandleActivation
struct AShooterWeapon_Activated_ClientHandleActivation_Params
{
	bool                                               bActivate;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Activated.ClientActivateWeapon
struct AShooterWeapon_Activated_ClientActivateWeapon_Params
{
	bool                                               bActivate;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Activated.BPPreFireEvent
struct AShooterWeapon_Activated_BPPreFireEvent_Params
{
	struct FVector                                     Origin;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ShootDir;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Activated.ActivateWeapon
struct AShooterWeapon_Activated_ActivateWeapon_Params
{
	bool                                               bActivate;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                nAnimIndex;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_InstantCharging.ServerSetCharging
struct AShooterWeapon_InstantCharging_ServerSetCharging_Params
{
	double                                             StartTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_InstantPenetrating.WeaponPenetrationTrace
struct AShooterWeapon_InstantPenetrating_WeaponPenetrationTrace_Params
{
	struct FVector                                     Start;                                                     // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     End;                                                       // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               FilterVisuals;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDebugDraw;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              DebugDrawDuration;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FHitResult>                          HitResults;                                                // (Parm, OutParm, ZeroConstructor)
	TArray<bool>                                       IsEntryHit;                                                // (Parm, OutParm, ZeroConstructor)
	float                                              MaxDistance;                                               // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_InstantPenetrating.PassiveUseAmmo
struct AShooterWeapon_InstantPenetrating_PassiveUseAmmo_Params
{
	int                                                amount;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_InstantPenetrating.BPStopPenetratingAtHit
struct AShooterWeapon_InstantPenetrating_BPStopPenetratingAtHit_Params
{
	struct FHitResult                                  CurrentHit;                                                // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               bIsEntryHit;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              CurrentDistance;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              CurrentMaxDistance;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalWeaponElectronicBinoculars.ServerSetActivateNightVision
struct APrimalWeaponElectronicBinoculars_ServerSetActivateNightVision_Params
{
	int8_t                                             bActive;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalWeaponElectronicBinoculars.ClientSetActivateNightVision
struct APrimalWeaponElectronicBinoculars_ClientSetActivateNightVision_Params
{
	int8_t                                             bActive;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalWeaponGPS.ServerShowNone
struct APrimalWeaponGPS_ServerShowNone_Params
{
};

// Function ShooterGame.PrimalWeaponGPS.ServerShowMapOnly
struct APrimalWeaponGPS_ServerShowMapOnly_Params
{
};

// Function ShooterGame.PrimalWeaponGPS.ServerShowGPSOnly
struct APrimalWeaponGPS_ServerShowGPSOnly_Params
{
};

// Function ShooterGame.PrimalWeaponGPS.ServerShowBoth
struct APrimalWeaponGPS_ServerShowBoth_Params
{
};

// Function ShooterGame.PrimalWeaponGPS.ServerSetUseCompassInsteadOfGPS
struct APrimalWeaponGPS_ServerSetUseCompassInsteadOfGPS_Params
{
	bool                                               bUseCompass;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalWeaponGPS.RefreshUseCompass
struct APrimalWeaponGPS_RefreshUseCompass_Params
{
};

// Function ShooterGame.ShooterWeapon_Climb.ShouldShowTargetingArray
struct AShooterWeapon_Climb_ShouldShowTargetingArray_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Climb.SetClimbingAnchorPoint
struct AShooterWeapon_Climb_SetClimbingAnchorPoint_Params
{
	unsigned char                                      Type;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	unsigned char                                      Mode;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector_NetQuantize100                      Direction;                                                 // (Parm)
	struct FVector_NetQuantize100                      Position;                                                  // (Parm)
	struct FVector_NetQuantizeNormal                   Normal;                                                    // (Parm)
};

// Function ShooterGame.ShooterWeapon_Climb.ServerSetClimbingLeftArm
struct AShooterWeapon_Climb_ServerSetClimbingLeftArm_Params
{
	bool                                               ClimbingLeftArm;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Climb.ServerRequestClimbMove
struct AShooterWeapon_Climb_ServerRequestClimbMove_Params
{
	unsigned char                                      Type;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Direction;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ClimbingLeftArm;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Climb.ServerReleaseClimbingAnchor
struct AShooterWeapon_Climb_ServerReleaseClimbingAnchor_Params
{
	bool                                               bWithJump;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector_NetQuantizeNormal                   InputDir;                                                  // (Parm)
	bool                                               bForceMinTimeCheckBeforeReleasing;                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Climb.ServerPerformTurn
struct AShooterWeapon_Climb_ServerPerformTurn_Params
{
	bool                                               ClimbingLeftArm;                                           // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Climb.ReleaseClimbingAnchor
struct AShooterWeapon_Climb_ReleaseClimbingAnchor_Params
{
	bool                                               bWithJump;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     InputDir;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bForceMinTimeCheckBeforeReleasing;                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Climb.IsClimbingUp
struct AShooterWeapon_Climb_IsClimbingUp_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Climb.IsClimbingHanging
struct AShooterWeapon_Climb_IsClimbingHanging_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Climb.GetViewLocation
struct AShooterWeapon_Climb_GetViewLocation_Params
{
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Climb.GetViewDirection
struct AShooterWeapon_Climb_GetViewDirection_Params
{
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Climb.ClimbTrace
struct AShooterWeapon_Climb_ClimbTrace_Params
{
	struct FHitResult                                  HitResult;                                                 // (Parm, OutParm)
	unsigned char                                      Type;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Direction;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<Engine_ECollisionChannel>              Channel;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Climb.ClientNotifyNoClimbSurface
struct AShooterWeapon_Climb_ClientNotifyNoClimbSurface_Params
{
};

// Function ShooterGame.ShooterWeapon_Climb.CanLandOnSurface
struct AShooterWeapon_Climb_CanLandOnSurface_Params
{
	struct FHitResult                                  HitResult;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Climb.CanClimbOnSurface
struct AShooterWeapon_Climb_CanClimbOnSurface_Params
{
	struct FHitResult                                  HitResult;                                                 // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Climb.BPUpdateClimbTarget
struct AShooterWeapon_Climb_BPUpdateClimbTarget_Params
{
	float                                              DeltaSeconds;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bClimbing;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     AnchorPosition;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     AnchorNormal;                                              // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               bCanClimb;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bCanLand;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ClimbLocation;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                     ClimbNormal;                                               // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               bHudVisible;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_MeleeLock.OnRep_LockValue
struct AShooterWeapon_MeleeLock_OnRep_LockValue_Params
{
};

// Function ShooterGame.ShooterWeapon_MeleeLock.EndMeleeAttack
struct AShooterWeapon_MeleeLock_EndMeleeAttack_Params
{
};

// Function ShooterGame.ShooterWeapon_Placer.ServerDetonateExplosives
struct AShooterWeapon_Placer_ServerDetonateExplosives_Params
{
};

// Function ShooterGame.ShooterWeapon_Placer.PlaceStructureWithSecondaryAction
struct AShooterWeapon_Placer_PlaceStructureWithSecondaryAction_Params
{
};

// Function ShooterGame.ShooterWeapon_Placer.GetPlacementOrigin
struct AShooterWeapon_Placer_GetPlacementOrigin_Params
{
	struct FVector                                     OriginLocation;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                                    OriginRotation;                                            // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Placer.BPSecondaryAction
struct AShooterWeapon_Placer_BPSecondaryAction_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_Placer.BPPrefireAction
struct AShooterWeapon_Placer_BPPrefireAction_Params
{
};

// Function ShooterGame.ShooterWeapon_PlacerTransGPS.ServerSetFrequency
struct AShooterWeapon_PlacerTransGPS_ServerSetFrequency_Params
{
	float                                              Freq;                                                      // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ShooterWeapon_PlacerTransGPS.ServerAttachToSelf
struct AShooterWeapon_PlacerTransGPS_ServerAttachToSelf_Params
{
};

// Function ShooterGame.ShooterWeapon_PlacerTransGPS.ClientShowTransponders
struct AShooterWeapon_PlacerTransGPS_ClientShowTransponders_Params
{
	bool                                               bValue;                                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalWeaponBow.UpdateTPVBowAnimation
struct APrimalWeaponBow_UpdateTPVBowAnimation_Params
{
};

// Function ShooterGame.PrimalWeaponBow.UnHideArrow
struct APrimalWeaponBow_UnHideArrow_Params
{
};

// Function ShooterGame.PrimalWeaponBow.ServerSetPullString
struct APrimalWeaponBow_ServerSetPullString_Params
{
	bool                                               bIsPulling;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalWeaponBow.HideArrow
struct APrimalWeaponBow_HideArrow_Params
{
};

// Function ShooterGame.PrimalWeaponBow.BPSimulatedResetSetPullingTime
struct APrimalWeaponBow_BPSimulatedResetSetPullingTime_Params
{
};

// Function ShooterGame.PrimalWeaponBow.BPCanStartFire
struct APrimalWeaponBow_BPCanStartFire_Params
{
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.PrimalWeaponBoomerang.OnRep_ClientHideBoomerang
struct APrimalWeaponBoomerang_OnRep_ClientHideBoomerang_Params
{
};

// Function ShooterGame.PrimalWeaponGrenade.UnHidePin
struct APrimalWeaponGrenade_UnHidePin_Params
{
};

// Function ShooterGame.PrimalWeaponGrenade.UnHideGrenade
struct APrimalWeaponGrenade_UnHideGrenade_Params
{
};

// Function ShooterGame.PrimalWeaponGrenade.HidePin
struct APrimalWeaponGrenade_HidePin_Params
{
};

// Function ShooterGame.PrimalWeaponGrenade.HideGrenade
struct APrimalWeaponGrenade_HideGrenade_Params
{
};

// Function ShooterGame.PrimalWeaponGrenade.BPGetProjectileSpeed
struct APrimalWeaponGrenade_BPGetProjectileSpeed_Params
{
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.SkyBoxLoader.SetSkyTextureIndices
struct ASkyBoxLoader_SetSkyTextureIndices_Params
{
	int                                                Texture0;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                Texture1;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.SkyBoxLoader.LoadSkyTextureIndexArray
struct ASkyBoxLoader_LoadSkyTextureIndexArray_Params
{
	TArray<int>                                        TextureInices;                                             // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.SkyBoxLoader.LoadSkyTextureIndex
struct ASkyBoxLoader_LoadSkyTextureIndex_Params
{
	int                                                TextureIdx;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.SkyBoxLoader.K2_OnTextureIndicesLoaded
struct ASkyBoxLoader_K2_OnTextureIndicesLoaded_Params
{
	TArray<int>                                        TextureIndices;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
};

// Function ShooterGame.StatWidget.ClickedButton
struct UStatWidget_ClickedButton_Params
{
	class UWidget*                                     clickedWidget;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.StructurePaintingComponent.ClientPaint
struct UStructurePaintingComponent_ClientPaint_Params
{
	class AShooterPlayerController*                    Painter;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FPaintItem>                          Paints;                                                    // (ConstParm, Parm, ZeroConstructor, ContainsInstancedReference)
};

// Function ShooterGame.StructurePreventionZoneVolume.BPIsWithinAnyStructurePreventionVolume
struct AStructurePreventionZoneVolume_BPIsWithinAnyStructurePreventionVolume_Params
{
	class UWorld*                                      ForWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     AtPoint;                                                   // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               bCheckDisabled;                                            // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsForDamageCheck;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIgnoreOptionalVolumes;                                    // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AStructurePreventionZoneVolume*              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.StructuresPlus.SP_SetGlassModelEdgeVisibility
struct UStructuresPlus_SP_SetGlassModelEdgeVisibility_Params
{
	int                                                index;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                        Top;                                                       // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                        Bottom;                                                    // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                        Left;                                                      // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                        Right;                                                     // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	bool                                               bIsTriangle;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.StructuresPlus.SP_SafeRemoveFromInventory
struct UStructuresPlus_SP_SafeRemoveFromInventory_Params
{
	class UClass*                                      ItemClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalInventoryComponent*                   inventory;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	int                                                ToRemove;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bExactClassMatch;                                          // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIgnoreHotbar;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.StructuresPlus.SP_MessageClient
struct UStructuresPlus_SP_MessageClient_Params
{
	class APlayerController*                           PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     Message;                                                   // (Parm, ZeroConstructor)
	TEnumAsByte<ShooterGame_ESPMessageType>            MsgType;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.StructuresPlus.SP_IsValidStructureForConnection
struct UStructuresPlus_SP_IsValidStructureForConnection_Params
{
	class APrimalStructure*                            Structure;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UClass*>                              StructureTypes;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.StructuresPlus.SP_IsSuitablePullTarget
struct UStructuresPlus_SP_IsSuitablePullTarget_Params
{
	class AActor*                                      TargetActor;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                           PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.StructuresPlus.SP_IsLinkedToPowerOrWater
struct UStructuresPlus_SP_IsLinkedToPowerOrWater_Params
{
	class APrimalStructure*                            Structure;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.StructuresPlus.SP_IsFuel
struct UStructuresPlus_SP_IsFuel_Params
{
	class UPrimalInventoryComponent*                   inventory;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	class UClass*                                      ItemClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.StructuresPlus.SP_IsFlexibleConnectionLinked
struct UStructuresPlus_SP_IsFlexibleConnectionLinked_Params
{
	TArray<class APrimalStructure*>                    Structures;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class APrimalStructure*                            NewStructure;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.StructuresPlus.SP_IsConnectedToInfiniteWaterSource
struct UStructuresPlus_SP_IsConnectedToInfiniteWaterSource_Params
{
	class APrimalStructure*                            Structure;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.StructuresPlus.SP_GetSpecialMenuColor
struct UStructuresPlus_SP_GetSpecialMenuColor_Params
{
	struct FLinearColor                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.StructuresPlus.SP_GetNearbyStructuresForFlexibleConnection
struct UStructuresPlus_SP_GetNearbyStructuresForFlexibleConnection_Params
{
	class APrimalStructure*                            Structure;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                      SearchClass;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Range;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class APrimalStructure*>                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.StructuresPlus.SP_GetMessageTypeColor
struct UStructuresPlus_SP_GetMessageTypeColor_Params
{
	TEnumAsByte<ShooterGame_ESPMessageType>            MsgType;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.StructuresPlus.SP_GetInventoryWeightMultiplier
struct UStructuresPlus_SP_GetInventoryWeightMultiplier_Params
{
	class UClass*                                      ItemClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimalInventoryComponent*                   inventory;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.StructuresPlus.SP_GetInventoryCapacityForItem
struct UStructuresPlus_SP_GetInventoryCapacityForItem_Params
{
	class UClass*                                      ItemClass;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      TargetActor;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.StructuresPlus.SP_GetFloatOption
struct UStructuresPlus_SP_GetFloatOption_Params
{
	class AGameMode*                                   GameMode;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     OptionName;                                                // (Parm, ZeroConstructor)
	float                                              Default;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              Max;                                                       // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.StructuresPlus.SP_GetEmptyInventorySlotCount
struct UStructuresPlus_SP_GetEmptyInventorySlotCount_Params
{
	class UPrimalInventoryComponent*                   inventory;                                                 // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	bool                                               bIsDino;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.StructuresPlus.SP_GetCharacterWeights
struct UStructuresPlus_SP_GetCharacterWeights_Params
{
	class APrimalCharacter*                            Character;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              MaxWeight;                                                 // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              CurrentWeight;                                             // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.StructuresPlus.SP_GetCentralPointForFlexibleConnection
struct UStructuresPlus_SP_GetCentralPointForFlexibleConnection_Params
{
	TArray<class APrimalStructure*>                    Structures;                                                // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class APrimalStructure*                            ThisStructure;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDrawDebug;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FVector>                             ConnectionPoints;                                          // (Parm, OutParm, ZeroConstructor)
	struct FVector                                     CentralPoint;                                              // (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.StructuresPlus.SP_GetBoolOption
struct UStructuresPlus_SP_GetBoolOption_Params
{
	class AGameMode*                                   GameMode;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     OptionName;                                                // (Parm, ZeroConstructor)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.StructuresPlus.SP_GetAllConnectedStructuresOfTypes
struct UStructuresPlus_SP_GetAllConnectedStructuresOfTypes_Params
{
	class APrimalStructure*                            Structure;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UClass*>                              StructureTypes;                                            // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class APrimalStructure*>                    ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm)
};

// Function ShooterGame.StructuresPlus.SP_GetAccessibleInventoriesInRange
struct UStructuresPlus_SP_GetAccessibleInventoriesInRange_Params
{
	class APlayerController*                           PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     Location;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              PullRange;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      ActorToIgnore;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class APrimalDinoCharacter*>                Dinos;                                                     // (Parm, OutParm, ZeroConstructor)
	TArray<class APrimalStructureItemContainer*>       Structures;                                                // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.StructuresPlus.SP_AlterGlassTransparency
struct UStructuresPlus_SP_AlterGlassTransparency_Params
{
	TEnumAsByte<ShooterGame_EGlassTransparencyType>    GlassSettingsTransparencyType;                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                              GlassSettingsTransparency;                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*                    InsideMIC;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*                    OutsideMIC;                                                // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.StructuresPlus.SP_AddMenuEntries
struct UStructuresPlus_SP_AddMenuEntries_Params
{
	TArray<struct FMultiUseEntry>                      EntriesIn;                                                 // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	class APlayerController*                           PC;                                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APrimalStructure*                            Structure;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bIsGlass;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FMultiUseEntry>                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference)
};

// Function ShooterGame.SupplyCrateSpawningVolume.SpawnCratesFromAllVolumes
struct ASupplyCrateSpawningVolume_SpawnCratesFromAllVolumes_Params
{
	class UWorld*                                      TheWorld;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.SupplyCrateSpawningVolume.SpawnCratesFromAllPoints
struct ASupplyCrateSpawningVolume_SpawnCratesFromAllPoints_Params
{
};

// Function ShooterGame.SupplyCrateSpawningVolume.SetSpawnEnabled
struct ASupplyCrateSpawningVolume_SetSpawnEnabled_Params
{
	bool                                               bEnable;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.SupplyCrateSpawningVolume.CheckForSupplyCrateStart
struct ASupplyCrateSpawningVolume_CheckForSupplyCrateStart_Params
{
};

// Function ShooterGame.SupplyCrateSpawningVolume.CheckCrateSpawn
struct ASupplyCrateSpawningVolume_CheckCrateSpawn_Params
{
};

// Function ShooterGame.TickingHelperComponent.TickingHelperDelegate__DelegateSignature
struct UTickingHelperComponent_TickingHelperDelegate__DelegateSignature_Params
{
	class UTickingHelperComponent*                     TickingComponent;                                          // (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TickingHelperComponent.SetComponentTickGroup
struct UTickingHelperComponent_SetComponentTickGroup_Params
{
	TEnumAsByte<Engine_ETickingGroup>                  NewTickGroup;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TickingHelperComponent.OnThrottledTick
struct UTickingHelperComponent_OnThrottledTick_Params
{
	float                                              DeltaTime;                                                 // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TogglePainVolume.TogglePainVolumeEvent__DelegateSignature
struct ATogglePainVolume_TogglePainVolumeEvent__DelegateSignature_Params
{
	class ATogglePainVolume*                           ForPainVolume;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                      VictimActor;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TogglePainVolume.SetPainVolumeEnabled
struct ATogglePainVolume_SetPainVolumeEnabled_Params
{
	bool                                               bEnable;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TogglePainVolume.OnInterpToggle
struct ATogglePainVolume_OnInterpToggle_Params
{
	bool                                               bEnable;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TogglePainVolume.OnEndOverlap
struct ATogglePainVolume_OnEndOverlap_Params
{
	class AActor*                                      Actor;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TogglePainVolume.OnBeginOverlap
struct ATogglePainVolume_OnBeginOverlap_Params
{
	class AActor*                                      Actor;                                                     // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.TogglePainVolume.GetOverlappedActors
struct ATogglePainVolume_GetOverlappedActors_Params
{
	TArray<class AActor*>                              OutActors;                                                 // (Parm, OutParm, ZeroConstructor)
};

// Function ShooterGame.TogglePainVolume.GetOverlappedActorNum
struct ATogglePainVolume_GetOverlappedActorNum_Params
{
	int                                                ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ToolTipWidget.BPUpdateToolTip
struct UToolTipWidget_BPUpdateToolTip_Params
{
	float                                              DeltaSeconds;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.ToolTipWidget.BPInitToolTip
struct UToolTipWidget_BPInitToolTip_Params
{
	class AShooterPlayerController*                    HUDOwner;                                                  // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FString                                     ToolTipString;                                             // (Parm, ZeroConstructor)
	class UObject*                                     DataListEntry;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.WaterVolumeWithFlow.SetStrengthFromSplineActor
struct AWaterVolumeWithFlow_SetStrengthFromSplineActor_Params
{
	class AActor*                                      InSplineActor;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.WaterVolumeWithFlow.SetPaintValueAtGridIndex
struct AWaterVolumeWithFlow_SetPaintValueAtGridIndex_Params
{
	struct FGridIndex                                  Grid;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FColor                                      InColor;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TEnumAsByte<ShooterGame_EColorChannelTarget>       Channel;                                                   // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.WaterVolumeWithFlow.SetDestinationsFromSplineActor
struct AWaterVolumeWithFlow_SetDestinationsFromSplineActor_Params
{
	class AActor*                                      InSplineActor;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.WaterVolumeWithFlow.SetDefaultPaintColors
struct AWaterVolumeWithFlow_SetDefaultPaintColors_Params
{
};

// Function ShooterGame.WaterVolumeWithFlow.SetCellSize
struct AWaterVolumeWithFlow_SetCellSize_Params
{
	float                                              NewCellSize;                                               // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.WaterVolumeWithFlow.PaintStrengthFromSpline
struct AWaterVolumeWithFlow_PaintStrengthFromSpline_Params
{
};

// Function ShooterGame.WaterVolumeWithFlow.PaintObstruction
struct AWaterVolumeWithFlow_PaintObstruction_Params
{
};

// Function ShooterGame.WaterVolumeWithFlow.PaintDestinationFromSpline
struct AWaterVolumeWithFlow_PaintDestinationFromSpline_Params
{
};

// Function ShooterGame.WaterVolumeWithFlow.IsGridIndexValid
struct AWaterVolumeWithFlow_IsGridIndexValid_Params
{
	struct FGridIndex                                  Grid;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.WaterVolumeWithFlow.GetPaintValueAtGridIndex
struct AWaterVolumeWithFlow_GetPaintValueAtGridIndex_Params
{
	struct FGridIndex                                  Grid;                                                      // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FColor                                      ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.WaterVolumeWithFlow.GetLocationForGridIndex
struct AWaterVolumeWithFlow_GetLocationForGridIndex_Params
{
	struct FGridIndex                                  ForIndex;                                                  // (ConstParm, Parm, OutParm, ReferenceParm)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.WaterVolumeWithFlow.GetGridSize
struct AWaterVolumeWithFlow_GetGridSize_Params
{
	struct FGridIndex                                  ReturnValue;                                               // (Parm, OutParm, ReturnParm)
};

// Function ShooterGame.WaterVolumeWithFlow.GetGridIndexForLocation
struct AWaterVolumeWithFlow_GetGridIndexForLocation_Params
{
	struct FVector                                     Location;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FGridIndex                                  Grid;                                                      // (Parm, OutParm)
	bool                                               ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.WaterVolumeWithFlow.GetFlowVectorAtLocation
struct AWaterVolumeWithFlow_GetFlowVectorAtLocation_Params
{
	struct FVector                                     Location;                                                  // (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	bool                                               bInterpFlowVector;                                         // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                     ReturnValue;                                               // (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.WaterVolumeWithFlow.GenerateFlowField
struct AWaterVolumeWithFlow_GenerateFlowField_Params
{
};

// Function ShooterGame.WaterVolumeWithFlow.ClearAllPaintChannels
struct AWaterVolumeWithFlow_ClearAllPaintChannels_Params
{
};

// Function ShooterGame.WaterVolumeWithFlow.BuildEverything
struct AWaterVolumeWithFlow_BuildEverything_Params
{
};

// Function ShooterGame.WorldBuffEntryWidget.SyncData
struct UWorldBuffEntryWidget_SyncData_Params
{
	struct FWorldBuffPersistantData                    WorldBuffPersistantData;                                   // (ConstParm, Parm, OutParm, ReferenceParm)
	bool                                               bIsListEntry;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bShouldReinit;                                             // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                               bDurationIsStopped;                                        // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.WorldBuffEntryWidget.Initialize
struct UWorldBuffEntryWidget_Initialize_Params
{
	bool                                               bIsListEntry;                                              // (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};

// Function ShooterGame.WorldBuffEntryWidget.FadeOut
struct UWorldBuffEntryWidget_FadeOut_Params
{
};

// Function ShooterGame.WorldBuffEntryWidget.Collapse
struct UWorldBuffEntryWidget_Collapse_Params
{
};

// Function ShooterGame.WorldBuffEntryWidget.BeginExpiring
struct UWorldBuffEntryWidget_BeginExpiring_Params
{
};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
